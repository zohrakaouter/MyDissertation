@book{brambilla2017model,
	keywords = {primary},
	title={Model-driven software engineering in practice},
	author={Brambilla, Marco and Cabot, Jordi and Wimmer, Manuel},
	year={2017},
	publisher={Morgan \& Claypool Publishers}
}

@inproceedings{10.1145/1985793.1985858,
	keywords = {primary},
	author = {Hutchinson, John and Whittle, Jon and Rouncefield, Mark and Kristoffersen, Steinar},
	title = {Empirical assessment of MDE in industry},
	year = {2011},
	isbn = {9781450304450},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/1985793.1985858},
	doi = {10.1145/1985793.1985858},
	abstract = {This paper presents some initial results from a twelve-month empirical research study of model driven engineering (MDE). Using largely qualitative questionnaire and interview methods we investigate and document a range of technical, organizational and social factors that apparently influence organizational responses to MDE: specifically, its perception as a successful or unsuccessful organizational intervention. We then outline a range of lessons learned. Whilst, as with all qualitative research, these lessons should be interpreted with care, they should also be seen as providing a greater understanding of MDE practice in industry, as well as shedding light on the varied, and occasionally surprising, social, technical and organizational factors that affect success and failure. We conclude by suggesting how the next phase of the research will attempt to investigate some of these issues from a different angle and in greater depth.},
	booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
	pages = {471–480},
	numpages = {10},

	location = {Waikiki, Honolulu, HI, USA},
	series = {ICSE '11}
}

@article{Bezivin2014,
	author = {B{\'{e}}zivin, Jean},
	doi = {10.1007/11877028},
	number = {January 2005},
	title = {{Model Driven Engineering : An Emerging Technical Space Model Driven Engineering : An Emerging Technical Space}},
	year = {2014}
}
@article{Bezivin2004,
	abstract = {In November 2000, the OMG (Object Management Group) made public the MDA™ (Model Driven Architecture) initiative, a particular variant of a new global trend called model engineering. The basic ideas of model engineering are germane to many other approaches such as generative programming, domain specific languages, model-integrated computing, software factories, etc. MDA may be defined as the realization of model engineering principles around a set of OMG standards like MOF (Meta Object Facility), XMI (XML Metadata Interchange), OCL (Object Constraint Language), UML (Unified Modeling Language), CWM (Common Warehouse Metamodel), SPEM (Software Process Engineering Metamodel), etc. Similarly to the basic principle “Everything is an object” that was important in the 80's to set up the object-oriented technology, we suggest here, in model engineering, that the basic principle “Everything is a model” may be key to identifying the essential characteristics of this new trend.},
	author = {B{\'{e}}zivin, Jean},
	file = {:Users/kebaili/Downloads/MON STAGE/Documentation/MDE2.pdf:pdf},
	journal = {Special Novatica Issue - UML and Model Engineering},
	keywords = {MDA,Meta Model,Model Driven Architecture,Model Driven Engineering.},
	number = {2},
	pages = {21--24},
	title = {{In search of a basic principle for Model Driven Engineering}},
	volume = {5},
	year = {2004}
}

@article{Hutchinson2011,
	abstract = {This paper presents some initial results from a twelve-month empirical research study of model driven engineering (MDE). Using largely qualitative questionnaire and interview methods we investigate and document a range of technical, organizational and social factors that apparently influence organizational responses to MDE: specifically, its perception as a successful or unsuccessful organizational intervention. We then outline a range of lessons learned. Whilst, as with all qualitative research, these lessons should be interpreted with care, they should also be seen as providing a greater understanding of MDE practice in industry, as well as shedding light on the varied, and occasionally surprising, social, technical and organizational factors that affect success and failure. We conclude by suggesting how the next phase of the research will attempt to investigate some of these issues from a different angle and in greater depth. {\textcopyright} 2011 ACM.},
	author = {Hutchinson, John and Whittle, Jon and Rouncefield, Mark and Kristoffersen, Steinar},
	doi = {10.1145/1985793.1985858},
	isbn = {9781450304450},
	issn = {02705257},
	journal = {Proceedings - International Conference on Software Engineering},
	keywords = {empirical software engineering,model driven engineering},
	pages = {471--480},
	title = {{Empirical assessment of MDE in industry}},
	year = {2011}
}
@phdthesis{khelladiPhD2016,
	author    = {Djamel E. Khelladi},
	title     = {Co-evolution of OCL constraints with evolution of metamodels.},
	school    = {Université Pierre et Marie Curie (Sorbonne universités), Paris, France},
	year      = {2016}
}

@article{Tolvanen2009,
	author = {Tolvanen, Juha Pekka and Kelly, Steven},
	doi = {10.1145/1639950.1640031},
	isbn = {9781605587660},
	journal = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA},
	keywords = {Code generation,Domain-specific languages,Domain-specific modeling,Language workbench,Metamodeling},
	number = {June 2014},
	pages = {819--820},
	title = {{MetaEdit+: Defining and using integrated domain-specific modeling languages}},
	year = {2009}
}
@article{Boldt2006,
	author = {Boldt, Nick and Steinberg, Dave},
	pages = {1--89},
	title = {{Introduction to the Eclipse Modeling Framework}},
	url = {http://www.eclipse.org/modeling/emf/docs/presentations/EclipseCon/EclipseCon2006_EMF_Intro.pdf},
	year = {2006}
}
@article{Bezivin2005,
	abstract = {In November 2000, the OMG made public the MDA™ initiative, a particular variant of a new global trend called MDE (Model Driven Engineering). The basic ideas of MDA are germane to many other approaches such as generative programming, domain specific languages, model-integrated computing, generic model management, software factories, etc. MDA may be defined as the realization of MDE principles around a set of OMG standards like MOF, XMI, OCL, UML, CWM, SPEM, etc. MDE is presently making several promises about the potential benefits that could be reaped from a move from code-centric to model-based practices. When we observe these claims, we may wonder when they may be satisfied: on the short, medium or long term or even never perhaps for some of them. This paper tries to propose a vision of the development of MDE based on some lessons learnt in the past 30 years in the development of object technology. The main message is that a basic principle ("Everything is an object") was most helpful in driving the technology in the direction of simplicity, generality and power of integration. Similarly in MDE, the basic principle that "Everything is a model" has many interesting properties, among others the capacity to generate a realistic research agenda. We postulate here that two core relations (representation and conformance) are associated to this principle, as inheritance and instantiation were associated to the object unification principle in the class-based languages of the 80's. We suggest that this may be most useful in understanding many questions about MDE in general and the MDA approach in particular. We provide some illustrative examples. The personal position taken in this paper would be useful if it could generate a critical debate on the research directions in MDE. {\textcopyright} Springer-Verlag 2004.},
	author = {B{\'{e}}zivin, Jean},
	doi = {10.1007/s10270-005-0079-0},
	issn = {16191366},
	journal = {Software and Systems Modeling},
	keywords = {MDA,MDE,Metamodels,Models},
	number = {2},
	pages = {171--188},
	title = {{On the unification power of models}},
	volume = {4},
	year = {2005}
}
@article{Agrawal2012,
	abstract = {Indian software industry has had a phenomenal growth in the last two decades and is expected to sustain this momentum in the foreseeable future. Based on content analysis of 25 cases, the paper identifies several human resource management challenges: managing human resources in globally distributed team, shortage of software professionals having sufficient knowledge and competencies, low-skilled nature of the work, lack of well-developed HR systems and processes, high employee turnover, lack of work-life balance, and the problems associated with the use of contract employees. The paper develops a model for managing growth linking the various variables emerging from the study. {\textcopyright} 2011 Elsevier Inc.},
	author = {Agrawal, Narendra M. and Khatri, Naresh and Srinivasan, R.},
	doi = {10.1016/j.jwb.2011.04.002},
	issn = {10909516},
	journal = {Journal of World Business},
	keywords = {Globally distributed teams,Human resource management practices,IT professionals,Indian software industry,Organizational growth},
	number = {2},
	pages = {159--166},
	publisher = {Elsevier Inc.},
	title = {{Managing growth: Human resource management challenges facing the Indian software industry}},
	url = {http://dx.doi.org/10.1016/j.jwb.2011.04.002},
	volume = {47},
	year = {2012}
}

@article{Steinberg2008,
	author = {Steinberg, Dave},
	journal = {Eclipse Foundation, editor, eclipsecon},
	keywords = {Code Generation,EMF,Eclipse},
	pages = {2005--2008},
	title = {{Fundamentals of the eclipse modeling framework}},
	url = {http://www.eclipse.org/modeling/emf/docs/presentations/EclipseWorld/EclipseWorld2007.pdf},
	year = {2008}
}
@book{lientz1980software,
	title={Software Maintenance Management: A Study of the Maintenance of Computer Application Software in 487 Data Processing Organizations},
	author={Lientz, B.P. and Swanson, E.B.},
	isbn={9780201042054},
	lccn={80012154},
	url={https://books.google.fr/books?id=8a6gAAAAMAAJ},
	year={1980},
	publisher={Addison-Wesley}
}
@article{Swanson1976,
	abstract = {The area of software maintenance has been described by one author as an "iceberg." (EDP Analyzer, 1972) Much goes on here that does not currently meet the eye. In part, this is the consequence of measurement difficulties. Practitioners and researchers can benefit from an understanding of the "dimensionality" of the maintenance problem. Some measures are suggested for coming to grips with this dimensionality, and problems of utilization associated with these measures are explored.},
	author = {Swanson, E. Burton},
	file = {:Users/kebaili/Downloads/MON STAGE/Documentation/THE DIMENSIONS OF MAINTENANCE.pdf:pdf},
	issn = {02705257},
	journal = {Proceedings - International Conference on Software Engineering},
	keywords = {Performance measurement,Software maintenance},
	pages = {492--497},
	title = {{The dimensions of maintenance}},
	year = {1976}
}

@article{Brown2004,
	abstract = {Model Driven Architecture (MDA1 )is anap- proach to application modeling and generation that has received a lot of attention in recent months. Champi- oned by the Object Management Group (OMG), many organizations are now looking at the ideas of MDA as a way to organize andmanage their application solutions, tool vendors are explicitly referring to their capabilities in terms of “MDA compliance”, and the MDA lexicon of platform-specific and platform-independent models is now widely referenced in the industry. In spite of this interest and market support, there is little clear guidance on what MDA means, where we are in its evolution, what is possible with today's technology, and howto take advantage of it in practice.This paper addresses that need by providing ananalysis ofhowmodeling is used in industry today, the relevance ofMDAto today's systems, a classification ofMDA tooling support, and ex- amples of its use.The paper concludeswith a set of recom- mendations for howMDAcan be successful in practice},
	author = {Brown, Alan W.},
	doi = {10.1007/s10270-004-0061-2},
	issn = {1619-1366},
	journal = {Software and Systems Modeling},
	keywords = {complexity to the soft-,in addition to the,many of,scale and complexity of,software architecture,software design,there is also great,these efforts,uml,unified modeling language},
	number = {August 2004},
	title = {{Model driven architecture: Principles and practice}},
	year = {2004}
}


@inproceedings{Khelladi2020,
	author = {Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier and J\'{e}z\'{e}quel, Jean-Marc},
	title = {Co-Evolving Code with Evolving Metamodels},
	year = {2020},
	isbn = {9781450371216},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3377811.3380324},
	doi = {10.1145/3377811.3380324},
	abstract = {Metamodels play a significant role to describe and analyze the relations between domain concepts. They are also cornerstone to build a software language (SL) for a domain and its associated tooling. Metamodel definition generally drives code generation of a core API. The latter is further enriched by developers with additional code implementing advanced functionalities, e.g., checkers, recommenders, etc. When a SL is evolved to the next version, the metamodels are evolved as well before to re-generate the core API code. As a result, the developers added code both in the core API and the SL toolings may be impacted and thus may need to be co-evolved accordingly. Many approaches support the co-evolution of various artifacts when metamodels evolve. However, not the co-evolution of code. This paper fills this gap. We propose a semi-automatic co-evolution approach based on change propagation. The premise is that knowledge of the metamodel evolution changes can be propagated by means of resolutions to drive the code co-evolution. Our approach leverages on the abstraction level of metamodels where a given metamodel element has often different usages in the code. It supports alternative co-evaluations to meet different developers needs. Our work is evaluated on three Eclipse SL implementations, namely OCL, Modisco, and Papyrus over several evolved versions of metamodels and code. In response to five different evolved metamodels, we co-evolved 976 impacts over 18 projects.A comparison of our co-evolved code with the versioned ones shows the usefulness of our approach. Our approach was able to reach a weighted average of 87.4\% and 88.9\% respectively of precision and recall while supporting useful alternative co-evolution that developers have manually performed.},
	booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
	pages = {1496–1508},
	numpages = {13},
	location = {Seoul, South Korea},
	series = {ICSE '20}
}


@article{Herrmannsdoerfer2011,
	abstract = {Modeling languages and thus their metamodels are subject to change. When a metamodel is evolved, existing models may no longer conform to it. Manual migration of these models in response to metamodel evolution is tedious and error-prone. To significantly automate model migration, operator-based approaches provide reusable coupled operators that encapsulate both metamodel evolution and model migration. The success of an operator-based approach highly depends on the library of reusable coupled operators it provides. In this paper, we thus present an extensive catalog of coupled operators that is based both on a literature survey as well as real-life case studies. The catalog is organized according to a number of criteria to ease assessing the impact on models as well as selecting the right operator for a metamodel change at hand. {\textcopyright} 2011 Springer-Verlag Berlin Heidelberg.},
	author = {Herrmannsdoerfer, Markus and Vermolen, Sander D. and Wachsmuth, Guido},
	doi = {10.1007/978-3-642-19440-5_10},
	isbn = {9783642194399},
	issn = {03029743},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	pages = {163--182},
	title = {{An extensive catalog of operators for the coupled evolution of metamodels and models}},
	volume = {6563 LNCS},
	year = {2011}
}
@article{Khelladi2016,
	abstract = {Evolution of metamodels can be represented at the finest grain by the trace of atomic changes such as add, delete, and update of elements. For many applications, like automatic correction of models when the metamodel evolves, a higher grained trace must be inferred, composed of complex changes, each one aggregating several atomic changes. Complex change detection is a challenging task since multiple sequences of atomic changes may define a single user intention and complex changes may overlap over the atomic change trace. In this paper, we propose a detection engine of complex changes that simultaneously addresses these two challenges of variability and overlap. We introduce three ranking heuristics to help users to decide which overlapping complex changes are likely to be correct. In our approach, we record the trace of atomic changes rather than computing them with the difference between the original and evolved metamodel. Thus, we have a complete and an ordered sequence of atomic changes without hidden changes. Furthermore, we consider the issue of undo operations (i.e. change canceling actions) while recording the sequence of atomic changes, and we illustrate how we cope with it. We validate our approach on 8 real case studies demonstrating its feasibility and its applicability. We observe that a full recall is always reached in all case studies and an average precision of 70.75\%. The precision is improved by the heuristics up to 91\% and 100\% in some cases.},
	author = {Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie Pierre},
	doi = {10.1016/j.is.2016.05.002},
	file = {:Users/kebaili/Downloads/MON STAGE/Detecting complex changes and refactorings during (Meta) model evolution.pdf:pdf},
	issn = {03064379},
	journal = {Information Systems},
	keywords = {Complex change,Detection,Evolution,Metamodel,Refactoring},
	pages = {220--241},
	publisher = {Elsevier},
	title = {{Detecting complex changes and refactorings during (Meta)model evolution}},
	url = {http://dx.doi.org/10.1016/j.is.2016.05.002},
	volume = {62},
	year = {2016}
}
@article{Alter2015,
	abstract = {This tutorial explains the most current version of work system theory and related ideas that were developed over several decades in an attempt to create a systems analysis and design method that could be used by business professionals. This tutorial covers: 1) work system theory (WST), 2) application of WST in various versions of the work system method (WSM), and 3) extensions of WST including work system principles, work system design spaces, a work system metamodel that reinterprets basic work system ideas in a detailed way that is more directly useful for IT-related analysis and design, linkages between WST and service systems, and application of work system ideas in a theory of workarounds and proposed theory of system interactions.},
	author = {Alter, Steven},
	doi = {10.1007/978-3-319-19069-3},
	isbn = {9783319190686},
	issn = {16113349},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	keywords = {Work system,Work system framework,Work system life cycle model,Work system metamodel},
	pages = {520--521},
	title = {{Work system theory: A bridge between business and IT views of systems}},
	volume = {9097},
	year = {2015}
}


@inproceedings{williams2012searching,
	title={Searching for model migration strategies},
	author={Williams, James R and Paige, Richard F and Polack, Fiona AC},
	booktitle={Proceedings of the 6th International Workshop on Models and Evolution},
	pages={39--44},
	year={2012},
	organization={ACM}
}


@inproceedings{10.1145/2000410.2000416,
	author = {Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
	title = {What is needed for managing co-evolution in MDE?},
	year = {2011},
	isbn = {9781450306683},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2000410.2000416},
	doi = {10.1145/2000410.2000416},
	abstract = {Metamodels can be considered one of the cardinal concepts of Model-Driven Engineering, one which a number of coordinated entities such as models, transformations and tools, are dependent on. Analogously to any software artifact, metamodels are equally prone to evolution during their lifetime. As a consequence, whenever a metamodel changes, any related entity must be consistently adapted for preserving its wellformedness, consistency, or intrinsic correctness.This paper discusses the problem of co-adapting models, transformations, and tools. Different aspects are taken into account and a prospective and unifying characterization is given with the intent of clarifying the main difficulties and outline the basic requirements for possible solutions. In this respect, EMFMigrate a comprehensive approach to the metamodel co-evolution problem is proposed.},
	booktitle = {Proceedings of the 2nd International Workshop on Model Comparison in Practice},
	pages = {30–38},
	numpages = {9},
	keywords = {metamodel co-evolution, model differences, model driven engineering},
	location = {Zurich, Switzerland},
	series = {IWMCP '11}
}


@article{Jiang2013,
	abstract = {In the process of software evolution, software change information can help software developers and system analysts to get a better understanding of differential part of software. In this paper, we construct different versions of source code into abstract syntax trees, and use an improved tree matching algorithm which combines multiple string matching algorithms, bilateral best match strategy and predicate information of program to improve the match result. Also a detailed change type list is defined and all the tree editing operations will be mapped to refined program change classification. We evaluated our tree match algorithm on a medium-size project of different versions. Ten typical classes were picked as a benchmark and 456 changes were specified manually. Our method show a good performance on this benchmark with the average change number bias controlled in 1.75, and the average change number error percentage is controlled fewer than 5.38%. {\textcopyright} 2013 IEEE.},
	author = {Jiang, Lu and Zhang, Zhiyi and Zhao, Zhihong},
	doi = {10.1109/WISA.2013.42},
	file = {:Users/kebaili/Downloads/MON STAGE/AST1.pdf:pdf},
	isbn = {9781479932191},
	journal = {Proceedings - 2013 10th Web Information System and Application Conference, WISA 2013},
	keywords = {Abstract Syntax Tree,Program Differential Analysis,Software Evolution},
	pages = {180--183},
	title = {{AST based JAVA software evolution analysis}},
	year = {2013}
}

@article{pandey2011object,
	title={Object constraint language (OCL) past, present and future},
	author={Pandey, RK},
	journal={ACM SIGSOFT software engineering notes},
	volume={36},
	number={1},
	pages={1--4},
	year={2011},
	publisher={ACM New York, NY, USA}
}


@inproceedings{palsberg1998essence,
	title={The essence of the visitor pattern},
	author={Palsberg, Jens and Jay, C Barry},
	booktitle={Proceedings. The Twenty-Second Annual International Computer Software and Applications Conference (Compsac'98)(Cat. No. 98CB 36241)},
	pages={9--15},
	year={1998},
	organization={IEEE}
}




@inproceedings{Mohagheghi2009,
	abstract = {Model-Driven Engineering has been promoted for some time as the solution for the main problem software industry is facing, i.e. complexity of software development, by raising the abstraction level and introducing more automation in the process. The promises are many; among them improved software quality by increased traceability between artifacts, early defect detection, reducing manual and error-prone work and including knowledge in generators. However, in our opinion MDE is still in the early adoption phase and to be successfully adopted by industry, it must prove its superiority over other development paradigms and be supported by a rich ecosystem of stable, compatible and standardized tools. It should also not introduce more complexity than it removes. The subject of this paper is the challenges in MDE adoption from our experience of using MDE in real and research projects, where MDE has potential for success and what the key success criteria are.},
	author = {Parastoo Mohagheghi and Miguel A. Fernandez and Juan A. Martell and Mathias Fritzsche and Wasif Gilani},
	doi = {10.1007/978-3-642-01648-6_6},
	isbn = {9783642016479},
	issn = {03029743},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	keywords = {Challenges,Domain-specific modeling,Model-driven engineering,Performance engineering,Traceability},
	pages = {54-59},
	title = {MDE adoption : Challenges and success criteria},
	volume = {5421},
	year = {2009},
}

@article{bruneliere2014modisco,
	title={Modisco: A model driven reverse engineering framework},
	author={Bruneliere, Hugo and Cabot, Jordi and Dup{\'e}, Gr{\'e}goire and Madiot, Fr{\'e}d{\'e}ric},
	journal={Information and Software Technology},
	volume={56},
	number={8},
	pages={1012--1032},
	year={2014},
	publisher={Elsevier}
}

@inproceedings{bruneliere2010modisco,
	title={MoDisco: a generic and extensible framework for model driven reverse engineering},
	author={Bruneliere, Hugo and Cabot, Jordi and Jouault, Fr{\'e}d{\'e}ric and Madiot, Fr{\'e}d{\'e}ric},
	booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
	pages={173--174},
	year={2010}
}

@inproceedings{jongeling2020towards2,
	title={Towards consistency checking between a system model and its implementation},
	author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
	booktitle={International Conference on Systems Modelling and Management},
	pages={30--39},
	year={2020},
	organization={Springer}
}

@INPROCEEDINGS{6606596,
	author={Meng, Na and Kim, Miryung and McKinley, Kathryn S.},
	booktitle={2013 35th International Conference on Software Engineering (ICSE)}, 
	title={Lase: Locating and applying systematic edits by learning from examples}, 
	year={2013},
	volume={},
	number={},
	pages={502-511},
	doi={10.1109/ICSE.2013.6606596}}



@INPROCEEDINGS{8443580,
	author={Gerasimou, Simos and Kechagia, Maria and Kolovos, Dimitris and Paige, Richard and Gousios, Georgios},
	booktitle={2018 IEEE/ACM 2nd International Workshop on API Usage and Evolution (WAPI)}, 
	title={On Software Modernisation due to Library Obsolescence}, 
	year={2018},
	volume={},
	number={},
	pages={6-9},
	doi={}}

@INPROCEEDINGS{4814159,
	author={Dagenais, Barthélémy and Robillard, Martin},
	booktitle={2008 ACM/IEEE 30th International Conference on Software Engineering}, 
	title={Recommending adaptive changes for framework evolution}, 
	year={2008},
	volume={},
	number={},
	pages={481-490},
	doi={10.1145/1368088.1368154}}

@book{starfield1993model,
	title={How to model it: Problem solving for the computer age},
	author={Starfield, Anthony M and Smith, Karl and Bleloch, Andrew L},
	year={1993},
	publisher={McGraw-Hill, Inc.}
}

@inproceedings{bezivin2001towards,
	title={Towards a precise definition of the OMG/MDA framework},
	author={B{\'e}zivin, Jean and Gerb{\'e}, Olivier},
	booktitle={Automated Software Engineering, 2001.(ASE 2001). Proceedings. 16th Annual International Conference on},
	pages={273--280},
	year={2001},
	organization={IEEE}
}

@book{kleppe2003mda,
	title={MDA explained: the model driven architecture: practice and promise},
	author={Kleppe, Anneke G and Warmer, Jos B and Bast, Wim},
	year={2003},
	publisher={Addison-Wesley Professional}
}

@article{brown2004model,
	title={Model driven architecture: Principles and practice},
	author={Brown, Alan W},
	journal={Software and Systems Modeling},
	volume={3},
	number={4},
	pages={314--327},
	year={2004},
	publisher={Springer}
}


@incollection{cabot2012object,
	title={Object constraint language (OCL): a definitive guide},
	author={Cabot, Jordi and Gogolla, Martin},
	booktitle={Formal methods for model-driven engineering},
	pages={58--90},
	year={2012},
	publisher={Springer}
}

@incollection{boronat2008algebraic,
	title={An algebraic semantics for MOF},
	author={Boronat, Artur and Meseguer, Jos{\'e}},
	booktitle={Fundamental Approaches to Software Engineering},
	pages={377--391},
	year={2008},
	publisher={Springer}
}

@incollection{koch2003towards,
	title={Towards a common metamodel for the development of web applications},
	author={Koch, Nora and Kraus, Andreas},
	booktitle={Web Engineering},
	pages={497--506},
	year={2003},
	publisher={Springer}
}

@article{seidewitz2003models,
	title={What models mean},
	author={Seidewitz, Ed},
	journal={IEEE software},
	volume={20},
	number={5},
	pages={26},
	year={2003},
	publisher={IEEE Computer Society}
}

@article{bezivin2005unification,
	title={On the unification power of models},
	author={B{\'e}zivin, Jean},
	journal={Software \& Systems Modeling},
	volume={4},
	number={2},
	pages={171--188},
	year={2005},
	publisher={Springer}
}

@incollection{bezivin2006model,
	title={Model driven engineering: An emerging technical space},
	author={B{\'e}zivin, Jean},
	booktitle={Generative and transformational techniques in software engineering},
	pages={36--64},
	year={2006},
	publisher={Springer}
}

@incollection{jouault2006km3,
	title={KM3: a DSL for Metamodel Specification},
	author={Jouault, Fr{\'e}d{\'e}ric and B{\'e}zivin, Jean},
	booktitle={Formal Methods for Open Object-Based Distributed Systems},
	pages={171--185},
	year={2006},
	publisher={Springer}
}

@inproceedings{bezivin2006canonical,
	title={A canonical scheme for model composition},
	author={B{\'e}zivin, Jean and Bouzitouna, Salim and Del Fabro, Marcos Didonet and Gervais, Marie-Pierre and Jouault, Fr{\'e}d{\'e}ric and Kolovos, Dimitrios and Kurtev, Ivan and Paige, Richard F},
	booktitle={Model Driven Architecture--Foundations and Applications},
	pages={346--360},
	year={2006},
	organization={Springer}
}

@article{schmidt2006model,
	title={Model-driven engineering},
	author={Schmidt, Douglas C},
	journal={COMPUTER-IEEE COMPUTER SOCIETY-},
	volume={39},
	number={2},
	pages={25},
	year={2006},
	publisher={Citeseer}
}

@article{berardi2005reasoning,
	title={Reasoning on UML class diagrams},
	author={Berardi, Daniela and Calvanese, Diego and De Giacomo, Giuseppe},
	journal={Artificial Intelligence},
	volume={168},
	number={1},
	pages={70--118},
	year={2005},
	publisher={Elsevier}
}

@inproceedings{atkinson2012symbiotic,
	title={Symbiotic general-purpose and domain-specific languages},
	author={Atkinson, Colin and Gerbig, Ralph and Kennel, Bastian},
	booktitle={Proceedings of the 34th International Conference on Software Engineering},
	pages={1269--1272},
	year={2012},
	organization={IEEE Press}
}

@inproceedings{france2007model,
	title={Model-driven development of complex software: A research roadmap},
	author={France, Robert and Rumpe, Bernhard},
	booktitle={2007 Future of Software Engineering},
	pages={37--54},
	year={2007},
	organization={IEEE Computer Society}
}

@article{fuentes2004introduction,
	title={An introduction to UML profiles},
	author={Fuentes-Fern{\'a}ndez, Lidia and Vallecillo-Moreno, Antonio},
	journal={UML and Model Engineering},
	volume={2},
	year={2004}
}

@article{atkinson2002profiles,
	title={Profiles in a strict metamodeling framework},
	author={Atkinson, Colin and K{\"u}hne, Thomas},
	journal={Science of Computer Programming},
	volume={44},
	number={1},
	pages={5--22},
	year={2002},
	publisher={Elsevier}
}

@incollection{mezei2007optimizing,
	title={An optimizing OCL compiler for metamodeling and model transformation environments},
	author={Mezei, Gergely and Levendovszky, Tiham{\'e}r and Charaf, Hassan},
	booktitle={Software Engineering Techniques: Design for Quality},
	pages={61--71},
	year={2007},
	publisher={Springer}
}

@inproceedings{CabotG12SFM,
	author    = {Jordi, Cabot and Martin, Gogolla},
	title     = {Object Constraint Language {(OCL):} {A} Definitive Guide},
	booktitle = {12th {SFM} Bertinoro, Italy},
	pages     = {58--90},
	year      = {2012},
	crossref  = {DBLP:conf/sfm/2012},
	url       = {http://dx.doi.org/10.1007/978-3-642-30982-3_3},
	doi       = {10.1007/978-3-642-30982-3_3},
	timestamp = {Wed, 04 Jul 2012 11:18:10 +0200},
	biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sfm/CabotG12},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{Ashbacher2003bookreview,
	title={Book review of “The Object Constraint Language Second Edition, Getting Your Models Ready for MDA”},
	author={Charles, Ashbacher},
	journal={Journal of Object Technology},
	volume={2},
	number={6},
	pages={139--140},
	year={2003}
}

@incollection{bergmann2014translating,
	title={Translating OCL to graph patterns},
	author={Bergmann, G{\'a}bor},
	booktitle={Model-Driven Engineering Languages and Systems},
	pages={670--686},
	year={2014},
	publisher={Springer}
}


@MISC{UML241,
	author = {OMG},
	title = {Object Management Group. Unified Modeling Language (UML).},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/UML/}}
}

@MISC{BPMN2,
	author = {OMG},
	title = {Object Management Group. Business Process Model And Notation (BPMN).},
	year = {2015},
	howpublished={\url{https://www.omg.org/spec/BPMN/2.0/About-BPMN/}}
}

@MISC{OCL20,
	author = {OMG},
	title = {Object Management Group. Object Constraints Language (OCL).},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/OCL/}}
}

@MISC{MOF241,
	author = {OMG},
	title = {Object Management Group. Meta Object Facility (MOF).},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/MOF/}}
}

@MISC{QVT20,
	author = {OMG},  
	title = {Object Management Group. Query / Views / Transformations (QVT).},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/QVT/}}
}

@inproceedings{soeken2010verifying,
	title={Verifying UML/OCL models using Boolean satisfiability},
	author={Soeken, Mathias and Wille, Robert and Kuhlmann, Mirco and Gogolla, Martin and Drechsler, Rolf},
	booktitle={Proceedings of the Conference on Design, Automation and Test in Europe},
	pages={1341--1344},
	year={2010},
	organization={European Design and Automation Association}
}

@article{gogolla2007use,
	title={USE: A UML-based specification environment for validating UML and OCL},
	author={Gogolla, Martin and B{\"u}ttner, Fabian and Richters, Mark},
	journal={Science of Computer Programming},
	volume={69},
	number={1},
	pages={27--34},
	year={2007},
	publisher={Elsevier}
}

@article{gogolla2005validating,
	title={Validating UML and OCL models in USE by automatic snapshot generation},
	author={Gogolla, Martin and Bohling, J{\"o}rn and Richters, Mark},
	journal={Software \& Systems Modeling},
	volume={4},
	number={4},
	pages={386--398},
	year={2005},
	publisher={Springer}
}

@book{warmer2003object,
	title={The object constraint language: getting your models ready for MDA},
	author={Warmer, Jos B and Kleppe, Anneke G},
	year={2003},
	publisher={Addison-Wesley Professional}
}

@book{richters2002precise,
	title={A precise approach to validating UML models and OCL constraints},
	author={Richters, Mark and others},
	year={2002},
	publisher={Citeseer}
}

@incollection{gogolla1998constraints,
	title={On constraints and queries in UML},
	author={Gogolla, Martin and Richters, Mark},
	booktitle={The Unified Modeling Language},
	pages={109--121},
	year={1998},
	publisher={Springer}
}

@incollection{hamie1998reflections,
	title={Reflections on the object constraint language},
	author={Hamie, Ali and Civello, Franco and Howse, John and Kent, Stuart and Mitchell, Richard},
	booktitle={The Unified Modeling Language.{\guillemotleft}UML{\guillemotright}’98: Beyond the Notation},
	pages={162--172},
	year={1998},
	publisher={Springer}
}

@incollection{cook2002amsterdam,
	title={The Amsterdam manifesto on OCL},
	author={Cook, Steve and Kleppe, Anneke and Mitchell, Richard and Rumpe, Bernhard and Warmer, Jos and Wills, Alan},
	booktitle={Object Modeling with the OCL},
	pages={115--149},
	year={2002},
	publisher={Springer}
}

@incollection{richters2002ocl,
	title={OCL: Syntax, semantics, and tools},
	author={Richters, Mark and Gogolla, Martin},
	booktitle={Object Modeling with the OCL},
	pages={42--68},
	year={2002},
	publisher={Springer}
}

@incollection{hennicker2002precise,
	title={On the precise meaning of OCL constraints},
	author={Hennicker, Rolf and Hussmann, Heinrich and Bidoit, Michel},
	booktitle={Object Modeling with the OCL},
	pages={69--84},
	year={2002},
	publisher={Springer}
}

@inproceedings{dzidek2005lessons,
	title={Lessons learned from developing a dynamic OCL constraint enforcement tool for Java},
	author={Dzidek, Wojciech J and Briand, Lionel C and Labiche, Yvan},
	booktitle={Satellite Events at the MoDELS 2005 Conference},
	pages={10--19},
	year={2005},
	organization={Springer}
}

@inproceedings{briand2004controlled,
	title={A controlled experiment on the impact of the object constraint language in UML-based maintenance},
	author={Briand, Lionel C and Labiche, Yvan and Yan, HD and Di Penta, Massimiliano},
	booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on},
	pages={380--389},
	year={2004},
	organization={IEEE}
}

@incollection{moiseev2009generating,
	title={Generating assertion code from OCL: A transformational approach based on similarities of implementation languages},
	author={Moiseev, Rodion and Hayashi, Shinpei and Saeki, Motoshi},
	booktitle={Model Driven Engineering Languages and Systems},
	pages={650--664},
	year={2009},
	publisher={Springer}
}

@article{cheon2008aspect,
	title={An aspect-based approach to checking design constraints at run-time},
	author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc and Estrada, Neith and Fierro, Valeria and Romo, Jessica},
	year={2008}
}

@article{cheon2009checking,
	title={Checking design constraints at run-time using OCL and AspectJ},
	author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc},
	year={2009}
}

@inproceedings{cheon2010automating,
	title={Automating Java program testing using OCL and AspectJ},
	author={Cheon, Yoonsik and Avila, Carmen},
	booktitle={Information Technology: New Generations (ITNG), 2010 Seventh International Conference on},
	pages={1020--1025},
	year={2010},
	organization={IEEE}
}

@inproceedings{ziemann2002extension,
	title={An extension of OCL with temporal logic},
	author={Ziemann, Paul and Gogolla, Martin},
	booktitle={Critical Systems Development with UML--Proceedings of the UML},
	volume={2},
	pages={53--62},
	year={2002},
	organization={Citeseer}
}

@inproceedings{ziemann2003ocl,
	title={OCL extended with temporal logic},
	author={Ziemann, Paul and Gogolla, Martin},
	booktitle={Perspectives of System Informatics},
	pages={351--357},
	year={2003},
	organization={Springer}
}

@incollection{kanso2012temporal,
	title={Temporal constraint support for ocl},
	author={Kanso, Bilal and Taha, Safouan},
	booktitle={Software Language Engineering},
	pages={83--103},
	year={2012},
	publisher={Springer}
}

@inproceedings{lehman1997metrics,
	title={Metrics and laws of software evolution-the nineties view},
	author={Lehman, Meir M and Ramil, Juan F and Wernick, Paul D and Perry, Dewayne E and Turski, Wladyslaw M},
	booktitle={Software Metrics Symposium, 1997. Proceedings., Fourth International},
	pages={20--32},
	year={1997},
	organization={IEEE}
}

@book{lehman1978laws,
	title={Laws of program evolution-rules and tools for programming management},
	author={Lehman, Meir M},
	year={1978}
}

@article{lehman1979understanding,
	title={On understanding laws, evolution, and conservation in the large-program life cycle},
	author={Lehman, Meir M},
	journal={Journal of Systems and Software},
	volume={1},
	pages={213--221},
	year={1979},
	publisher={Elsevier}
}

@incollection{lehman1996laws,
	title={Laws of software evolution revisited},
	author={Lehman, Manny M},
	booktitle={Software process technology},
	pages={108--124},
	year={1996},
	publisher={Springer}
}

@book{mens2008introduction,
	title={Introduction and roadmap: History and challenges of software evolution},
	author={Mens, Tom},
	year={2008},
	publisher={Springer}
}

@article{lehman2003software,
	title={Software evolution—background, theory, practice},
	author={Lehman, Meir M and Ramil, Juan F},
	journal={Information Processing Letters},
	volume={88},
	number={1},
	pages={33--44},
	year={2003},
	publisher={Elsevier}
}

@article{chapin2001types,
	title={Types of software evolution and software maintenance},
	author={Chapin, Ned and Hale, Joanne E and Khan, Khaled Md and Ramil, Juan F and Tan, Wui-Gee},
	journal={Journal of software maintenance and evolution: Research and Practice},
	volume={13},
	number={1},
	pages={3--30},
	year={2001},
	publisher={Wiley Online Library}
}

@inproceedings{favre2005languages,
	title={Languages evolve too! Changing the Software Time Scale},
	author={Favre, Jean-Marie},
	booktitle={Eighth International Workshop on Principles of Software Evolution {IWPSE}},
	pages={33--44},
	year={2005},
	organization={IEEE}
}

@article {buckley2005towards,
	author = {Buckley, Jim and Mens, Tom and Zenger, Matthias and Rashid, Awais and Kniesel, Günter},
	title = {Towards a taxonomy of software change},
	journal = {Journal of Software Maintenance and Evolution: Research and Practice},
	volume = {17},
	number = {5},
	publisher = {John Wiley & Sons, Ltd.},
	issn = {1532-0618},
	url = {http://dx.doi.org/10.1002/smr.319},
	doi = {10.1002/smr.319},
	pages = {309--332},
	keywords = {characterization, software evolution tools, refactoring browser, CVS, eLiza},
	year = {2005}
}

@inproceedings{swanson1976dimensions,
	title={The dimensions of maintenance},
	author={Swanson, E Burton},
	booktitle={Proceedings of the 2nd international conference on Software engineering},
	pages={492--497},
	year={1976},
	organization={IEEE Computer Society Press}
}


@incollection{liebel2014assessing,
	title={Assessing the state-of-practice of model-based engineering in the embedded systems domain},
	author={Liebel, Grischa and Marko, Nadja and Tichy, Matthias and Leitner, Andrea and Hansson, J{\"o}rgen},
	booktitle={Model-Driven Engineering Languages and Systems},
	pages={166--182},
	year={2014},
	publisher={Springer}
}


@inproceedings{shirtz2007adopting,
	title={Adopting model driven development in a large financial organization},
	author={Shirtz, Dov and Kazakov, Michael and Shaham-Gafni, Yael},
	booktitle={Model Driven Architecture-Foundations and Applications},
	pages={172--183},
	year={2007},
	organization={Springer}
}


@inproceedings{mohagheghi2008proof,
	title={Where is the proof?-a review of experiences from applying mde in industry},
	author={Mohagheghi, Parastoo and Dehlen, Vegard},
	booktitle={Model Driven Architecture--Foundations and Applications},
	pages={432--443},
	year={2008},
	organization={Springer}
}


@article{hailpern2006model,
	title={Model-driven development: The good, the bad, and the ugly},
	author={Hailpern, Brent and Tarr, Peri},
	journal={IBM systems journal},
	volume={45},
	number={3},
	pages={451},
	year={2006},
	publisher={International Business Machines Corporation}
}

@inproceedings{garcia2014Caise,
	title={An adapter-based approach to co-evolve generated sql in model-to-text transformations},
	author={Garc{\'\i}a, Jokin and D{\'\i}az, Oscar and Cabot, Jordi},
	booktitle={Advanced Information Systems Engineering},
	pages={518--532},
	year={2014},
	organization={Springer}
}

@InProceedings{10.1007/978-3-642-36089-3_9,
	author="Garc{\'i}a, Jokin
	and Diaz, Oscar
	and Azanza, Maider",
	editor="Czarnecki, Krzysztof
	and Hedin, G{\"o}rel",
	title="Model Transformation Co-evolution: A Semi-automatic Approach",
	booktitle="Software Language Engineering",
	year="2013",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="144--163",
	abstract="Model transformations are precious and effortful outcomes of Model-Driven Engineering. As any other artifact, transformations are also subject to evolution forces. Not only are they affected by changes to transformation requirements, but also by the changes to the associated metamodels. Manual co-evolution of transformations after these metamodel changes is cumbersome and error-prone. In this setting, this paper introduces a semi-automatic process for the co-evolution of transformations after metamodel evolution. The process is divided in two main stages: at the detection stage, the changes to the metamodel are detected and classified, while the required actions for each type of change are performed at the co-evolution stage. The contributions of this paper include the automatic co-evolution of breaking and resolvable changes and the assistance to the transformation developer to aid in the co-evolution of breaking and unresolvable changes. The presented process is implemented for ATL in the CO-URE prototype.",
	isbn="978-3-642-36089-3"
}

@inproceedings{wachsmuth2007metamodel,
	title={Metamodel adaptation and model co-adaptation},
	author={Wachsmuth, Guido},
	booktitle={ECOOP},
	volume={7},
	pages={600--624},
	year={2007},
	organization={Springer}
}
@inproceedings{herrmannsdoerfer2009cope,
	title={COPE-Automating Coupled Evolution of Metamodels and Models.},
	author={Herrmannsdoerfer, Markus and Benz, Sebastian and Juergens, Elmar},
	booktitle={ECOOP},
	volume={9},
	pages={52--76},
	year={2009},
	organization={Springer}
}

@inproceedings{cicchetti2008automating,
	title={Automating co-evolution in model-driven engineering},
	author={Cicchetti, Antonio and Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
	booktitle={2008 12th International IEEE enterprise distributed object computing conference},
	pages={222--231},
	year={2008},
	organization={IEEE}
}

@incollection{markovic_refactoring_2005,
	title={Refactoring OCL annotated UML class diagrams},
	author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
	booktitle={Model Driven Engineering Languages and Systems},
	pages={280--294},
	year={2005},
	publisher={Springer}
}


@incollection{herrmannsdoerfer_extensive_2011,
	title = {An Extensive Catalog of Operators for the Coupled Evolution of Metamodels and Models},
	copyright = {©2011 Springer Berlin Heidelberg},
	isbn = {978-3-642-19439-9, 978-3-642-19440-5},
	booktitle = {Software Language Engineering},
	author = {Herrmannsdoerfer, Markus and Vermolen, Sander D. and Wachsmuth, Guido},
	editor = {Malloy and Staab and Brand},
	month = jan,
	year = {2011},
	pages = {163--182},
	publisher={Springer}
}


@inproceedings{garces2009managing,
	title={Managing model adaptation by precise detection of metamodel changes},
	author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
	booktitle={Model Driven Architecture-Foundations and Applications: 5th European Conference, ECMDA-FA 2009, Enschede, The Netherlands, June 23-26, 2009. Proceedings 5},
	pages={34--49},
	year={2009},
	organization={Springer}
}

@inproceedings{xing2006refactoring,
	title={Refactoring detection based on umldiff change-facts queries},
	author={Xing, Zhenchang and Stroulia, Eleni},
	booktitle={Reverse Engineering, 2006. WCRE'06. 13th Working Conference on},
	pages={263--274},
	year={2006},
	organization={IEEE}
}

@inproceedings{moghadam2012automated,
	title={Automated refactoring using design differencing},
	author={Moghadam, Iman Hemati and Cinneide, Mel O},
	booktitle={Software Maintenance and Reengineering (CSMR), 2012 16th European Conference on},
	pages={43--52},
	year={2012},
	organization={IEEE}
}

@MISC{Rijsbergen1979,
	author = {Rijsbergen, C.J.V.},
	title = {Information Retrieval. Butterworths},
	year = {1979}
}

@article{morisio2002success,
	title={Success and failure factors in software reuse},
	author={Morisio, Maurizio and Ezran, Michel and Tully, Colin},
	journal={Software Engineering, IEEE Transactions on},
	volume={28},
	number={4},
	pages={340--357},
	year={2002},
	publisher={IEEE}
}

@incollection{hemel2008code,
	title={Code generation by model transformation},
	author={Hemel, Zef and Kats, Lennart CL and Visser, Eelco},
	booktitle={{ICMT}},
	pages={183--198},
	year={2008},
	publisher={Springer}
}

@inproceedings{aichernig2005test,
	title={Test case generation by OCL mutation and constraint solving},
	author={Aichernig, Bernhard K and Salas, Percy Antonio Pari},
	booktitle={Quality Software, 2005.(QSIC 2005). Fifth International Conference on},
	pages={64--71},
	year={2005},
	organization={IEEE}
}

@inproceedings{hassam2011assistance,
	title={Assistance system for OCL constraints adaptation during metamodel evolution},
	author={Hassam, Kahina and Sadou, Salah and Gloahec, Vincent Le and Fleurquin, R{\'e}gis},
	booktitle={Software Maintenance and Reengineering (CSMR), 15th European Conference on},
	pages={151--160},
	year={2011},
	organization={IEEE}
}

@inproceedings{demuth_automatically_2012,
	title={Automatically generating and adapting model constraints to support co-evolution of design models},
	author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
	booktitle={The 27th IEEE/ACM ASE},
	pages={302--305},
	year={2012}
}

@incollection{demuth_supporting_2013,
	title={Supporting the co-evolution of metamodels and constraints through incremental constraint management},
	author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
	booktitle={Model-Driven Engineering Languages and Systems},
	pages={287--303},
	year={2013},
	publisher={Springer}
}

@inproceedings{kusel2015systematic,
	title={Systematic Co-Evolution of OCL Expressions},
	author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
	booktitle={11th {APCCM 2015}},
	volume={27},
	pages={30},
	year={2015}
}

@article{schneidewind1987state,
	title={The state of software maintenance},
	author={Schneidewind, Norman F.},
	journal={IEEE Transactions on Software Engineering},
	volume={13},
	number={3},
	pages={303},
	year={1987},
	publisher={IEEE Computer Society}
}

@inproceedings{bennett2000software,
	title={Software maintenance and evolution: a roadmap},
	author={Bennett, Keith H and Rajlich, V{\'a}clav T},
	booktitle={Proceedings of the Conference on the Future of Software Engineering},
	pages={73--87},
	year={2000},
	organization={ACM}
}

@inproceedings{godfrey2008past,
	title={The past, present, and future of software evolution},
	author={Godfrey, Michael W and German, Daniel M},
	booktitle={Frontiers of Software Maintenance, 2008. FoSM 2008.},
	pages={129--138},
	year={2008},
	organization={IEEE}
}

@article{vigder2001evolution,
	title={The evolution, maintenance, and management of component-based systems},
	author={Vigder, Mark},
	journal={Component-Based Software Engineering: Putting the Pieces Together},
	pages={527--539},
	year={2001},
	publisher={Citeseer}
}

@phdthesis{opdyke1992refactoring,
	title={Refactoring object-oriented frameworks},
	author={Opdyke, William F},
	year={1992},
	school={University of Illinois at Urbana-Champaign}
}

@book{arnold1986introduction,
	title={An introduction to software restructuring},
	author={Arnold, Robert S},
	year={1986},
	publisher={IEEE Computer Society Press, Washington, DC}
}

@article{mens2004survey,
	title={A survey of software refactoring},
	author={Mens, Tom and Tourw{\'e}, Tom},
	journal={Software Engineering, IEEE Transactions on},
	volume={30},
	number={2},
	pages={126--139},
	year={2004},
	publisher={IEEE}
}

@incollection{sunye2001refactoring,
	title={Refactoring UML models},
	author={Suny{\'e}, Gerson and Pollet, Damien and Le Traon, Yves and J{\'e}z{\'e}quel, Jean-Marc},
	booktitle={{UML}2001—The Unified Modeling Language. Modeling Languages, Concepts, and Tools},
	pages={134--148},
	year={2001},
	publisher={Springer}
}


@incollection{rose2010comparison,
	title={A comparison of model migration tools},
	author={Rose, Louis M and Herrmannsdoerfer, Markus and Williams, James R and Kolovos, Dimitrios S and Garc{\'e}s, Kelly and Paige, Richard F and Polack, Fiona AC},
	booktitle={MODELS},
	pages={61--75},
	year={2010},
	publisher={Springer}
}

@CONFERENCE {ReginaApsec2015,
	author    = {Regina Hebig and Djamel Eddine adi and Reda Bendraou},
	title     = {Surveying the Corpus of Model Resolution Strategies for Metamodel Evolution},
	booktitle = {The 22nd Asia-Pacific Software Engineering Conference {APSEC}},
	year      = {2015}
}

@article{demuth2015constraint,
	title={Constraint-driven modeling through transformation},
	author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
	journal={Software \& Systems Modeling},
	volume={14},
	number={2},
	pages={573--596},
	year={2015},
	publisher={Springer}
}

@article{demuth2016co,
	title={Co-evolution of metamodels and models through consistent change propagation},
	author={Demuth, Andreas and Riedl-Ehrenleitner, Markus and Lopez-Herrejon, Roberto E and Egyed, Alexander},
	journal={Journal of Systems and Software},
	volume={111},
	pages={281--297},
	year={2016},
	publisher={Elsevier}
}

@inproceedings{toulme2006presentation,
	title={Presentation of EMF compare utility},
	author={Toulm{\'e}, Antoine and Inc, I},
	booktitle={Eclipse Modeling Symposium},
	pages={1--8},
	year={2006}
}

@inproceedings{xing2005umldiff,
	title={UMLDiff: an algorithm for object-oriented design differencing},
	author={Xing, Zhenchang and Stroulia, Eleni},
	booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
	pages={54--65},
	year={2005},
	organization={ACM}
}

@article{lin2007dsmdiff,
	title={DSMDiff: a differentiation tool for domain-specific models},
	author={Lin, Yuehua and Gray, Jeff and Jouault, Fr{\'e}d{\'e}ric},
	journal={European Journal of Information Systems},
	volume={16},
	number={4},
	pages={349--361},
	year={2007},
	publisher={Nature Publishing Group}
}


@inproceedings{di2011needed,
	title={What is needed for managing co-evolution in mde?},
	author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
	booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
	pages={30--38},
	year={2011},
	organization={ACM}
}

@article{levendovszky2014semi,
	title={A semi-formal description of migrating domain-specific models with evolving domains},
	author={Levendovszky, Tihamer and Balasubramanian, Daniel and Narayanan, Anantha and Shi, Feng and van Buskirk, Chris and Karsai, Gabor},
	journal={Software \& Systems Modeling},
	volume={13},
	number={2},
	pages={807--823},
	year={2014},
	publisher={Springer}
}

@inproceedings{blanc2008detecting,
	title={Detecting model inconsistency through operation-based model construction},
	author={Blanc, Xavier and Mounier, Isabelle and Mougenot, Alix and Mens, Tom},
	booktitle={Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference on},
	pages={511--520},
	year={2008},
	organization={IEEE}
}

@incollection{cabot2004automatic,
	title={Automatic integrity constraint evolution due to model subtract operations},
	author={Cabot, Jordi and Conesa, Jordi},
	booktitle={Conceptual Modeling for Advanced Application Domains},
	pages={350--362},
	year={2004},
	publisher={Springer}
}

@inproceedings{buttner2005towards,
	title={Towards transformation of integrity constraints and database states},
	author={B{\"u}ttner, Fabian and Bauerdick, Hanna and Gogolla, Martin},
	booktitle={Database and Expert Systems Applications, 2005. Proceedings. Sixteenth International Workshop on},
	pages={823--828},
	year={2005},
	organization={IEEE}
}

@article{cabot2007transformation,
	title={Transformation techniques for OCL constraints},
	author={Cabot, Jordi and Teniente, Ernest},
	journal={Science of Computer Programming},
	volume={68},
	number={3},
	pages={179--195},
	year={2007},
	publisher={Elsevier}
}


@article{kuselsystematic,
	title={A Systematic Taxonomy of Metamodel Evolution Impacts on OCL Expressions},
	author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
	booktitle={Workshop on Models and Evolution at {MODELS}},
	year={ME@MODELS, 2015}
}



@article{clarke1996formal,
	title={Formal methods: State of the art and future directions},
	author={Clarke, Edmund M and Wing, Jeannette M},
	journal={ACM Computing Surveys (CSUR)},
	volume={28},
	number={4},
	pages={626--643},
	year={1996},
	publisher={ACM}
}

@book{clarke1999model,
	title={Model checking},
	author={Clarke, Edmund M and Grumberg, Orna and Peled, Doron},
	year={1999},
	publisher={MIT press}
}

@book{volter2013model,
	title={Model-driven software development: technology, engineering, management},
	author={Volter, Markus and Stahl, Thomas and Bettin, Jorn and Haase, Arno and Helsen, Simon},
	year={2013},
	publisher={John Wiley \& Sons}
}

@incollection{cabot2007declarative,
	title={From declarative to imperative UML/OCL operation specifications},
	author={Cabot, Jordi},
	booktitle={Conceptual Modeling-ER 2007},
	pages={198--213},
	year={2007},
	publisher={Springer}
}

@article{rose2014epsilon,
	title={Epsilon Flock: a model migration language},
	author={Rose, Louis M and Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC and Poulding, Simon},
	journal={Software \& Systems Modeling},
	volume={13},
	number={2},
	pages={735--755},
	year={2014},
	publisher={Springer}
}

@book{wohlin2012experimentation,
	title={Experimentation in software engineering},
	author={Wohlin, Claes and Runeson, Per and H{\"o}st, Martin and Ohlsson, Magnus C and Regnell, Bj{\"o}rn and Wessl{\'e}n, Anders},
	year={2012},
	publisher={Springer Science \& Business Media}
}

@MISC{MDTOCL,
	author = {MDT},
	title = {Model Development Tools. Object Constraints Language (OCL).},
	year = {2015},
	howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=ocl}}
}

@MISC{MDTPapyrus,
	author = {MDT},
	title = {Model Development Tools. Papyrus.},
	year = {2015},
	howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=papyrus}}
}

@MISC{MDTModisco,
	author = {MDT},
	title = {Model Development Tools. MoDisco.},
	year = {2015},
	howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=modisco}}
}

@MISC{GMF,
	author = {GMP},
	title = {Graphical Modeling Project. Graphical Modeling Framework (GMF).},
	year = {2015},
	howpublished={\url{http://www.eclipse.org/modeling/gmp/}}
}

@MISC{OMG,
	author = {OMG},
	title = {Object Management Group.},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/}}
}

@MISC{SMM,
	author = {OMG},
	title = {Structured Metrics Metamodel.},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/SMM/}}
}


@MISC{UPDM,
	author = {OMG},
	title = {Unified Profile for the Department of Defense Architecture Framework (DoDAF) and the Ministry of Defence Architecture Framework (MODAF).},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/UPDM/}}
}

@MISC{NIEM,
	author = {OMG},
	title = {UML Profile for National Information Exchange Model.},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/NIEM-UML/}}
}

@MISC{EXPRESS,
	author = {OMG},
	title = {Reference Metamodel for the EXPRESS Information Modeling Language.},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/EXPRESS/}}
}

@MISC{ReqIF,
	author = {OMG},
	title = {Requirements Interchange Format.},
	year = {2015},
	howpublished={\url{http://www.omg.org/spec/ReqIF/}}
}

@inproceedings{jouault2005transforming,
	title={Transforming models with ATL},
	author={Jouault, Fr{\'e}d{\'e}ric and Kurtev, Ivan},
	booktitle={satellite events at the MoDELS 2005 Conference},
	pages={128--138},
	year={2005},
	organization={Springer}
}

@incollection{kolovos2008epsilon,
	title={The epsilon transformation language},
	author={Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC},
	booktitle={Theory and practice of model transformations},
	pages={46--60},
	year={2008},
	publisher={Springer}
}


@incollection{herrmannsdoerfer_language_2010,
	title = {Language Evolution in Practice: The History of {GMF}},
	copyright = {©2010 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-12106-7, 978-3-642-12107-4},
	shorttitle = {Language Evolution in Practice},
	urldate = {2014-04-30},
	booktitle = {Software Language Engineering},
	author = {Herrmannsdoerfer, Markus and Ratiu, Daniel and Wachsmuth, Guido},
	editor = {Brand, Mark van den and Gasevic, Dragan and Gray, Jeff},
	month = jan,
	year = {2010},
	keywords = {Logics and Meanings of Programs, Management of Computing and Information Systems, Programming Languages, Compilers, Interpreters, Simulation and Modeling, Software engineering},
	pages = {3--22}
}

@article{garces2014adapting,
	title={Adapting transformations to metamodel changes via external transformation composition},
	author={Garc{\'e}s, Kelly and Vara, Juan M and Jouault, Fr{\'e}d{\'e}ric and Marcos, Esperanza},
	journal={Software \& Systems Modeling},
	volume={13},
	number={2},
	pages={789--806},
	year={2014},
	publisher={Springer}
}

@inproceedings{bendraou2012support,
	title={Support for Deviation Detections in the Context of Multi-Viewpoint-Based Development Processes.},
	author={Bendraou, Reda and da Silva, Marcos Aur{\'e}lio Almeida and Gervais, Marie-Pierre and Blanc, Xavier},
	booktitle={CAiSE},
	pages={23--31},
	year={2012}
}

@inproceedings{blanc2009incremental,
	title={Incremental detection of model inconsistencies based on model operations},
	author={Blanc, Xavier and Mougenot, Alix and Mounier, Isabelle and Mens, Tom},
	booktitle={CAiSE},
	pages={32--46},
	year={2009},
	organization={Springer}
}

@inproceedings{da2011deviation,
	title={Deviation management during process execution},
	author={da Silva, Marcos Aurelio Almeida and Blanc, Xavier and Bendraou, Reda},
	booktitle={26th IEEE/ACM ASE},
	pages={528--531},
	year={2011}
}

@phdthesis{mougenot2010praxis,
	title={Praxis: Detection of inconsistency within distributed models},
	author={Mougenot, Alix},
	year={2010},
	school={Paris 6}
}
@INPROCEEDINGS{8443581,
	author={Eilertsen, Anna Maria and Bagge, Anya Helene},
	booktitle={2018 IEEE/ACM 2nd International Workshop on API Usage and Evolution (WAPI)}, 
	title={Exploring API/Client Co-Evolution}, 
	year={2018},
	volume={},
	number={},
	pages={10-13},
	keywords={Software;Tools;Data mining;Libraries;Java;Semantics;Syntactics;API evolution;Co-evolution;repository mining;software evolution;bytecode analysis},
	doi={}}

@inproceedings{Kessentini2016automated,
	title={Automated Metamodel/Model Co-Evolution using a Multi-Objective Optimization Approach},
	author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
	booktitle={12th ECMFA},
	year={2016}
}

@book{steinberg2008emf,
	title={EMF: eclipse modeling framework},
	author={Steinberg, Dave and Budinsky, Frank and Merks, Ed and Paternostro, Marcelo},
	year={2008},
	publisher={Pearson Education}
}

@inproceedings{bruneliere2015lightweight,
	title={On Lightweight Metamodel Extension to Support Modeling Tools Agility},
	author={Bruneliere, Hugo and Garcia, Jokin and Desfray, Philippe and Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Cabot, Jordi},
	booktitle={European Conference on Modelling Foundations and Applications},
	pages={62--74},
	year={2015},
	organization={Springer}
}

@inproceedings{khelladi2016supporting,
	title={Supporting the co-adaption of process properties},
	author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
	booktitle={Proceedings of the International Workshop on Software and Systems Process},
	pages={1--5},
	year={2016},
	organization={ACM}
}

@inproceedings{khelladi2015framework,
	title={A framework to formally verify conformance of a software process to a software method},
	author={Khelladi, Djamel-Eddine and Bendraou, Reda and Baarir, Souheib and Laurent, Yoann and Gervais, Marie-Pierre},
	booktitle={The 30th Symposium on Applied Computing},
	pages={1518--1525},
	year={2015},
	organization={ACM}
}

@article{khelladi2016detecting,
	title={Detecting complex changes and refactorings during (meta) model evolution},
	author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
	journal={Information Systems},
	year={2016},
	publisher={Elsevier}
}

@inproceedings{khelladi2015detecting,
	title={Detecting complex changes during metamodel evolution},
	author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
	booktitle={CAISE},
	pages={263--278},
	year={2015},
	organization={Springer}
}

@inproceedings{khelladi2016ad,
	title={Ad-room: a tool for automatic detection of refactorings in object-oriented models},
	author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
	booktitle={ICSE Companion},
	pages={617--620},
	year={2016},
	organization={ACM}
}

@inproceedings{khelladi2016metamodel,
	title={Metamodel and constraints co-evolution: A semi automatic maintenance of ocl constraints},
	author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
	booktitle={International Conference on Software Reuse},
	pages={333--349},
	year={2016},
	organization={Springer}
}



@book{witten2005data,
	title={Data Mining: Practical machine learning tools and techniques},
	author={Witten, Ian H and Frank, Eibe},
	year={2005},
	publisher={Morgan Kaufmann}
}

@book{deb2001multi,
	title={Multi-objective optimization using evolutionary algorithms},
	author={Deb, Kalyanmoy},
	volume={16},
	year={2001},
	publisher={John Wiley \& Sons}
}

@incollection{deb2014multi,
	title={Multi-objective optimization},
	author={Deb, Kalyanmoy},
	booktitle={Search methodologies},
	pages={403--449},
	year={2014},
	publisher={Springer}
}

@inproceedings{schoenboeck2014care,
	title={CARE: A Constraint-based Approach for Re-establishing Conformance-relationships},
	author={Schoenboeck, Johannes and Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Schwinger, Wieland and Wimmer, Manuel and Wischenbart, Martin},
	booktitle={Proceedings of the Tenth Asia-Pacific Conference on Conceptual Modelling-Volume 154},
	pages={19--28},
	year={2014},
	organization={Australian Computer Society, Inc.}
}


@article{kitchenham2004procedures,
	title={Procedures for performing systematic reviews},
	author={Kitchenham, Barbara},
	journal={Keele, UK, Keele University},
	volume={33},
	number={2004},
	pages={1--26},
	year={2004}
}


@inproceedings{correa2004applying,
	title={Applying refactoring techniques to UML/OCL models},
	author={Correa, Alexandre and Werner, Cl{\'a}udia},
	booktitle={UML},
	pages={173--187},
	year={2004},
	organization={Springer}
}

@article{iovino2012impact,
	title={On the Impact Significance of Metamodel Evolution in MDE.},
	author={Iovino, Ludovico and Pierantonio, Alfonso and Malavolta, Ivano},
	journal={Journal of Object Technology},
	volume={11},
	number={3},
	pages={3--1},
	year={2012}
}

@inproceedings{schonbock2015model,
	title={Model-Driven Co-evolution for Agile Development},
	author={Sch{\"o}nb{\"o}ck, Johannes and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Kusel, Angelika and Retschitzegger, Werner and Schwinger, Wieland},
	booktitle={System Sciences (HICSS), 48th Hawaii International Conference on},
	pages={5094--5103},
	year={2015},
	organization={IEEE}
}

@inproceedings{reimann2012tool,
	title={Tool supported OCL refactoring catalogue},
	author={Reimann, Jan and Wilke, Claas and Demuth, Birgit and Muck, Michael and A{\ss}mann, Uwe},
	booktitle={Proceedings of the 12th Workshop on OCL and Textual Modelling},
	pages={7--12},
	year={2012},
	organization={ACM}
}

@inproceedings{khelladi2016SAC-OCL,
	title={SAC-OCL: A Tool for A Semi Automatic Co-evolution of OCL Constraints},
	author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
	booktitle={Demonstraions@MODELS},
	pages={40--47},
	year={2016}
}

@article{correa2007refactoring,
	title={Refactoring object constraint language specifications},
	author={Correa, Alexandre and Werner, Cl{\'a}udia},
	journal={Software \& Systems Modeling},
	volume={6},
	number={2},
	pages={113--138},
	year={2007},
	publisher={Springer}
}

@inproceedings{hassam2010adapting,
	title={Adapting ocl constraints after a refactoring of their model using an mde process},
	author={Hassam, Kahina and Sadou, Salah and Fleurquin, R{\'e}gis},
	booktitle={9th edition of the BElgian-NEtherlands software eVOLution seminar (BENEVOL 2010)},
	pages={16--27},
	year={2010}
}

@inproceedings{demuth2011cross,
	title={Cross-layer modeler: a tool for flexible multilevel modeling with consistency checking},
	author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
	booktitle={The 19th ACM SIGSOFT FSE and the 13th ESEC},
	pages={452--455},
	year={2011}
}

@inproceedings{demuth2012enabling,
	title={Enabling dynamic metamodels through constraint-driven modeling},
	author={Demuth, Andreas},
	booktitle={Proceedings of the 34th International Conference on Software Engineering},
	pages={1622--1624},
	year={2012},
	organization={IEEE Press}
}



@article{mengerink2016complete,
	title={A complete operator library for DSL evolution specification},
	author={Mengerink, JGM and Serebrenik, A and Schiffelers, RRH and van den Brand, MGJ},
	year={2016},
	publisher={ICSME}
}

@article{harman2012search,
	title={Search-based software engineering: Trends, techniques and applications},
	author={Harman, Mark and Mansouri, S Afshin and Zhang, Yuanyuan},
	journal={ACM Computing Surveys},
	volume={45},
	number={1},
	pages={11},
	year={2012},
	publisher={ACM}
}

@inproceedings{hutchinson2011empirical,
	title={Empirical assessment of MDE in industry},
	author={Hutchinson, John and Whittle, Jon and Rouncefield, Mark and Kristoffersen, Steinar},
	booktitle={Proceedings of the 33rd International Conference on Software Engineering},
	pages={471--480},
	year={2011},
	organization={ACM}
}

@inproceedings{tolvanen2009metaedit,
	title={MetaEdit+: defining and using integrated domain-specific modeling languages},
	author={Tolvanen, Juha-Pekka and Kelly, Steven},
	booktitle={The 24th ACM SIGPLAN conference companion on OOPSLA},
	pages={819--820},
	year={2009}
}

@article{paige2016evolving,
	title={Evolving models in model-driven engineering: State-of-the-art and future challenges},
	author={Paige, Richard F and Matragkas, Nicholas and Rose, Louis M},
	journal={Journal of Systems and Software},
	volume={111},
	pages={272--280},
	year={2016},
	publisher={Elsevier}
}

@incollection{herrmannsdorfer2014coupled,
	title={Coupled evolution of software metamodels and models},
	author={Herrmannsd{\"o}rfer, Markus and Wachsmuth, Guido},
	booktitle={Evolving Software Systems},
	pages={33--63},
	year={2014},
	publisher={Springer}
}

@article{rose2014graph,
	title={Graph and model transformation tools for model migration},
	author={Rose, Louis M and Herrmannsdoerfer, Markus and Mazanek, Steffen and Van Gorp, Pieter and Buchwald, Sebastian and Horn, Tassilo and Kalnina, Elina and Koch, Andreas and Lano, Kevin and Sch{\"a}tz, Bernhard and others},
	journal={Software \& Systems Modeling},
	volume={13},
	number={1},
	pages={323--359},
	year={2014},
	publisher={Springer}
}

@inproceedings{usman2008survey,
	title={A survey of consistency checking techniques for UML models},
	author={Usman, Muhammad and Nadeem, Aamer and Kim, Tai-hoon and Cho, Eun-suk},
	booktitle={Advanced Software Engineering and Its Applications, 2008. ASEA 2008},
	pages={57--62},
	year={2008},
	organization={IEEE}
}


@inproceedings{cabot2006constraint,
	title={Constraint Support in MDA tools: a Survey},
	author={Cabot, Jordi and Teniente, Ernest},
	booktitle={European Conference on Model Driven Architecture-Foundations and Applications},
	pages={256--267},
	year={2006},
	organization={Springer}
}

@article{toval2003emerging,
	title={Emerging OCL tools},
	author={Toval, Ambrosio and Requena, V{\'\i}ctor and Fern{\'a}ndez, Jos{\'e} Luis},
	journal={Software \& Systems Modeling},
	volume={2},
	number={4},
	pages={248--261},
	year={2003},
	publisher={Springer}
}

@inproceedings{li2007test,
	title={Test case automate generation from UML sequence diagram and OCL expression},
	author={Li, Bao-Lin and Li, Zhi-shu and Qing, Li and Chen, Yan-Hong},
	booktitle={Computational Intelligence and Security, 2007 International Conference on},
	pages={1048--1052},
	year={2007},
	organization={IEEE}
}

@article{ali2013generating,
	title={Generating test data from OCL constraints with search techniques},
	author={Ali, Shaukat and Iqbal, Muhammad Zohaib and Arcuri, Andrea and Briand, Lionel C},
	journal={IEEE Transactions on Software Engineering},
	volume={39},
	number={10},
	pages={1376--1402},
	year={2013},
	publisher={IEEE}
}

@article{frisch2008essence,
	title={Essence: A constraint language for specifying combinatorial problems},
	author={Frisch, Alan M and Harvey, Warwick and Jefferson, Chris and Mart{\'\i}nez-Hern{\'a}ndez, Bernadette and Miguel, Ian},
	journal={Constraints},
	volume={13},
	number={3},
	pages={268--306},
	year={2008},
	publisher={Springer}
}

@article{mens2006taxonomy,
	title={A taxonomy of model transformation},
	author={Mens, Tom and Van Gorp, Pieter},
	journal={Electronic Notes in Theoretical Computer Science},
	volume={152},
	pages={125--142},
	year={2006},
	publisher={Elsevier}
}

@inproceedings{konemann2010semantic,
	title={Semantic grouping of model changes},
	author={K{\"o}nemann, Patrick},
	booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
	pages={50--55},
	year={2010},
	organization={ACM}
}

@article{kessentini2016search,
	title={Search-based detection of model level changes},
	author={Kessentini, Marouane and Mansoor, Usman and Wimmer, Manuel and Ouni, Ali and Deb, Kalyanmoy},
	journal={Empirical Software Engineering},
	pages={1--46},
	year={2016},
	publisher={Springer}
}

@inproceedings{ben2012search,
	title={Search-based detection of high-level model changes},
	author={ben Fadhel, Ameni and Kessentini, Marouane and Langer, Philip and Wimmer, Manuel},
	booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
	pages={212--221},
	year={2012},
	organization={IEEE}
}

@inproceedings{kehrer2012understanding,
	title={Understanding model evolution through semantically lifting model differences with SiLift},
	author={Kehrer, Timo and Kelter, Udo and Ohrndorf, Manuel and Sollbach, Tim},
	booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
	pages={638--641},
	year={2012},
	organization={IEEE}
}

@inproceedings{koshima2015rucord,
	title={RuCORD: Rule-based composite operation recovering and detection to support cooperative edition of (Meta) models},
	author={Koshima, Amanuel and Englebert, Vincent},
	booktitle={Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
	pages={1--7},
	year={2015},
	organization={IEEE}
}

@inproceedings{mendez2012effective,
	title={Effective detection of model changes},
	author={M{\'e}ndez-Acu{\~n}a, David and Casallas, Rubby},
	booktitle={Computing Congress (CCC), 2012 7th Colombian},
	pages={1--5},
	year={2012},
	organization={IEEE}
}

@inproceedings{herrmannsdoerfer2010towards,
	title={Towards a generic operation recorder for model evolution},
	author={Herrmannsdoerfer, Markus and Koegel, Maximilian},
	booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
	pages={76--81},
	year={2010},
	organization={ACM}
}

@inproceedings{herrmannsdoerfer2009operation,
	title={Operation-based versioning of metamodels with COPE},
	author={Herrmannsdoerfer, Markus},
	booktitle={Comparison and Versioning of Software Models, 2009. CVSM'09. ICSE Workshop on},
	pages={49--54},
	year={2009},
	organization={IEEE}
}

@article{cicchetti2007metamodel,
	title={A metamodel independent approach to difference representation.},
	author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
	journal={Journal of Object Technology},
	volume={6},
	number={9},
	pages={165--185},
	year={2007}
}

@inproceedings{cicchetti2008meta,
	title={Meta-model differences for supporting model co-evolution},
	author={Cicchetti, Antonio and Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
	booktitle={Proceedings of the 2nd Workshop on Model-Driven Software Evolution-MODSE},
	pages={1--10},
	year={2008}
}


@inproceedings{xing2010model,
	title={Model comparison with GenericDiff},
	author={Xing, Zhenchang},
	booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
	pages={135--138},
	year={2010},
	organization={ACM}
}

@article{zhang2017detection,
	title={Detection of Composite Operation in Model Management},
	author={Zhang, Renwei and Qin, Zheng and Song, Houbing and Li, Shengnan and Yang, Xiao},
	journal={IEEE Access},
	volume={5},
	pages={771--780},
	year={2017},
	publisher={IEEE}
}

@inproceedings{kehrer2013consistency,
	title={Consistency-preserving edit scripts in model versioning},
	author={Kehrer, Timo and Kelter, Udo and Taentzer, Gabriele},
	booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
	pages={191--201},
	year={2013},
	organization={IEEE}
}

@inproceedings{boger2002refactoring,
	title={Refactoring browser for UML},
	author={Boger, Marko and Sturm, Thorsten and Fragemann, Per},
	booktitle={Net. ObjectDays: International Conference on Object-Oriented and Internet-Based Technologies, Concepts, and Applications for a Networked World},
	pages={366--377},
	year={2002},
	organization={Springer}
}

@article{altmanninger2009survey,
	title={A survey on model versioning approaches},
	author={Altmanninger, Kerstin and Seidl, Martina and Wimmer, Manuel},
	journal={International Journal of Web Information Systems},
	volume={5},
	number={3},
	pages={271--304},
	year={2009},
	publisher={Emerald Group Publishing Limited}
}

@book{kelly2008domain,
	title={Domain-specific modeling: enabling full code generation},
	author={Kelly, Steven and Tolvanen, Juha-Pekka},
	year={2008},
	publisher={John Wiley \& Sons}
}

@article{whittle2014state,
	title={The state of practice in model-driven engineering},
	author={Whittle, Jon and Hutchinson, John and Rouncefield, Mark},
	journal={IEEE software},
	volume={31},
	number={3},
	pages={79--85},
	year={2014},
	publisher={IEEE}
}

@article{utting2012taxonomy,
	title={A taxonomy of model-based testing approaches},
	author={Utting, Mark and Pretschner, Alexander and Legeard, Bruno},
	journal={Software Testing, Verification and Reliability},
	volume={22},
	number={5},
	pages={297--312},
	year={2012},
	publisher={Wiley Online Library}
}

@inproceedings{pretschner2005model,
	title={Model-based testing},
	author={Pretschner, Alexander},
	booktitle={Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference on},
	pages={722--723},
	year={2005},
	organization={IEEE}
}

@inproceedings{kusel2015consistent,
	title={Consistent co-evolution of models and transformations},
	author={Kusel, Angelika and Etzlstorfer, Jurgen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schwinger, Wieland and Schonbock, Johannes},
	booktitle={ACM/IEEE 18th MODELS},
	pages={116--125},
	year={2015}
}

@inproceedings{taentzer2013customizable,
	title={Customizable model migration schemes for meta-model evolutions with multiplicity changes},
	author={Taentzer, Gabriele and Mantz, Florian and Arendt, Thorsten and Lamo, Yngve},
	booktitle={International Conference on Model Driven Engineering Languages and Systems},
	pages={254--270},
	year={2013},
	organization={Springer}
}

@inproceedings{altmanninger2008amor,
	title={AMOR--towards adaptable model versioning},
	author={Altmanninger, Kerstin and Kappel, Gerti and Kusel, Angelika and Retschitzegger, Werner and Seidl, Martina and Schwinger, Wieland and Wimmer, Manuel},
	booktitle={1st International Workshop on Model Co-Evolution and Consistency Management, in conjunction with MODELS},
	volume={8},
	pages={4--50},
	year={2008}
}

@inproceedings{kogel2008towards,
	title={Towards software configuration management for unified models},
	author={K{\"o}gel, Maximilian},
	booktitle={Proceedings of the 2008 international workshop on Comparison and versioning of software models},
	pages={19--24},
	year={2008},
	organization={ACM}
}

@inproceedings{alkhazi2016automated,
	title={Automated refactoring of ATL model transformations: a search-based approach},
	author={Alkhazi, Bader and Ruas, Terry and Kessentini, Marouane and Wimmer, Manuel and Grosky, William I},
	booktitle={The ACM/IEEE 19th MODELS},
	pages={295--304},
	year={2016}
}



@inproceedings{10.1007/978-3-642-33654-62,
	author = {Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
	title = {Evolutionary togetherness: how to manage coupled evolution in metamodeling ecosystems},
	year = {2012},
	isbn = {9783642336539},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
	url = {https://doi.org/10.1007/978-3-642-33654-6_2},
	doi = {10.1007/978-3-642-33654-6_2},
	abstract = {In Model-Driven Engineering (MDE) metamodels are cornerstones for defining a wide range of related artifacts interlaced with explicit or implicit correspondences. According to this view, models, transformations, editors, and supporting tools can be regarded as a whole pursuing a common scope and therefore constituting an ecosystem. Analogously to software, metamodels are subject to evolutionary pressures too. However, changing a metamodel might compromise the validity of the artifacts in the ecosystem which therefore require to co-evolve as well in order to restore their validity.Different approaches have been proposed to support at different extent the adaptation of artifacts according to the changes operated on the corresponding metamodels. Each technique is specialized in the adaptation of specific kind of artifact (e.g., models, or transformations) by forcing modelers to learn different technologies and languages. This paper discusses the different relations occurring in a typical metamodeling ecosystem among the metamodel and the related artifacts, and identifies the commonalities which can be leveraged to define a unifying and comprehensive adaptation process. A language and corresponding supporting tools are also proposed for the management of metamodel evolution and the corresponding togetherness with the related artifacts.},
	booktitle = {Proceedings of the 6th International Conference on Graph Transformations},
	pages = {20–37},
	numpages = {18},
	location = {Bremen, Germany},
	series = {ICGT'12}
}

@inproceedings{di2014dealing,
	title={Dealing with the Coupled Evolution of Metamodels and Model-to-text Transformations.},
	author={Di Rocco, Juri and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
	booktitle={ME@ MoDELS},
	pages={22--31},
	year={2014}
}

@inproceedings{salman2015students,
	title={Are students representatives of professionals in software engineering experiments?},
	author={Salman, Iflaah and Misirli, Ayse Tosun and Juristo, Natalia},
	booktitle={ICSE-Volume 1},
	pages={666--676},
	year={2015},
	organization={IEEE Press}
}

@inproceedings{runeson2003using,
	title={Using students as experiment subjects--an analysis on graduate and freshmen student data},
	author={Runeson, Per},
	booktitle={Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering},
	pages={95--102},
	year={2003}
}

@article{host2000using,
	title={Using students as subjects—a comparative study of students and professionals in lead-time impact assessment},
	author={H{\"o}st, Martin and Regnell, Bj{\"o}rn and Wohlin, Claes},
	journal={Empirical Software Engineering},
	volume={5},
	number={3},
	pages={201--214},
	year={2000},
	publisher={Springer}
}

@inproceedings{berander2004using,
	title={Using students as subjects in requirements prioritization},
	author={Berander, Patrik},
	booktitle={Empirical Software Engineering, 2004. ISESE'04. Proceedings. 2004 International Symposium on},
	pages={167--176},
	year={2004},
	organization={IEEE}
}

@inproceedings{svahnberg2008using,
	title={Using students as subjects-an empirical evaluation},
	author={Svahnberg, Mikael and Aurum, Ayb{\"u}ke and Wohlin, Claes},
	booktitle={2nd ESEM},
	pages={288--290},
	year={2008},
	organization={ACM}
}

@article{mendez2010towards,
	title={Towards transformation migration after metamodel evolution},
	author={Mendez, David and Etien, Anne and Muller, Alexis and Casallas, Rubby},
	journal={ME Wokshop@MODELS},
	year={2010}
}



@article{jakumeit2014survey,
	title={A survey and comparison of transformation tools based on the transformation tool contest},
	author={Jakumeit, Edgar and Buchwald, Sebastian and Wagelaar, Dennis and Dan, Li and Heged{\"u}s, {\'A}bel and Herrmannsd{\"o}rfer, Markus and Horn, Tassilo and Kalnina, Elina and Krause, Christian and Lano, Kevin and others},
	journal={Science of computer programming},
	volume={85},
	pages={41--99},
	year={2014},
	publisher={Elsevier}
}


@article{taentzer2005model,
	title={Model transformation by graph transformation: A comparative study},
	author={Taentzer, Gabriele and Ehrig, Karsten and Guerra, Esther and Lara, Juan de and Lengyel, Laszlo and Levendovszky, Tihamer and Prange, Ulrike and Varr{\'o}, D{\'a}niel and Varr{\'o}-Gyapay, Szilvia},
	year={2005}
}

@inproceedings{gronmo2009comparison,
	title={Comparison of three model transformation languages},
	author={Gr{\o}nmo, Roy and M{\o}ller-Pedersen, Birger and Olsen, G{\o}ran K},
	booktitle={ECMDA-FA},
	pages={2--17},
	year={2009},
	organization={Springer}
}

@article{perez2010case,
	title={A case study to evaluate the suitability of graph transformation tools for program refactoring},
	author={P{\'e}rez, Javier and Crespo, Yania and Hoffmann, Berthold and Mens, Tom},
	journal={International Journal on Software Tools for Technology Transfer (STTT)},
	volume={12},
	number={3},
	pages={183--199},
	year={2010},
	publisher={Springer}
}

@inproceedings{rose2010comparing,
	title={Comparing model-metamodel and transformation-metamodel coevolution},
	author={Rose, Louis and Etien, Anne and Mendez, David and Kolovos, Dimitrios and Paige, Richard and Polack, Fiona},
	booktitle={International workshop on models and evolutions},
	year={2010}
}

@article{sendall2003model,
	title={Model transformation: The heart and soul of model-driven software development},
	author={Sendall, Shane and Kozaczynski, Wojtek},
	journal={IEEE software},
	volume={20},
	number={5},
	pages={42--45},
	year={2003},
	publisher={IEEE}
}

@inproceedings{czarnecki2003classification,
	title={Classification of model transformation approaches},
	author={Czarnecki, Krzysztof and Helsen, Simon},
	booktitle={Proceedings of the 2nd OOPSLA Workshop on Generative Techniques in the Context of the Model Driven Architecture},
	volume={45},
	number={3},
	pages={1--17},
	year={2003},
	organization={USA}
}



@article{hemel2010code,
	title={Code generation by model transformation: a case study in transformation modularity},
	author={Hemel, Zef and Kats, Lennart CL and Groenewegen, Danny M and Visser, Eelco},
	journal={Software and Systems Modeling},
	volume={9},
	number={3},
	pages={375--402},
	year={2010},
	publisher={Springer}
}

@inproceedings{burger2010change,
	title={A Change Metamodel for the Evolution of MOF-Based Metamodels.},
	author={Burger, Erik and Gruschko, Boris},
	booktitle={Modellierung},
	volume={2010},
	pages={285--300},
	year={2010}
}

@article{mens2007analysing,
	title={Analysing refactoring dependencies using graph transformation},
	author={Mens, Tom and Taentzer, Gabriele and Runge, Olga},
	journal={Software and Systems Modeling},
	volume={6},
	number={3},
	pages={269},
	year={2007},
	publisher={Springer}
}

@article{zhang2005generic,
	title={Generic and domain-specific model refactoring using a model transformation engine},
	author={Zhang, Jing and Lin, Yuehua and Gray, Jeff},
	journal={Model-driven Software Development},
	volume={23},
	year={2005},
	publisher={Springer}
}

@article{hebig2016approaches,
	title={Approaches to co-evolution of metamodels and models: A survey},
	author={Hebig, Regina and Khelladi, Djamel Eddine and Bendraou, Reda},
	journal={IEEE Transactions on Software Engineering},
	volume={43},
	number={5},
	pages={396--414},
	year={2016},
	publisher={IEEE}
}

@inproceedings{hebig2015surveying,
	title={Surveying the corpus of model resolution strategies for metamodel evolution},
	author={Hebig, Regina and Khelladi, Djamel Eddine and Bendraou, Reda},
	booktitle={2015 Asia-Pacific Software Engineering Conference (APSEC)},
	pages={135--142},
	year={2015},
	organization={IEEE}
}

@inproceedings{khelladi2017exploratory,
	title={An Exploratory Experiment on Metamodel-Transformation Co-Evolution},
	author={Khelladi, Djamel Eddine and Rodriguez, Horacio Hoyos and Kretschmer, Roland and Egyed, Alexander},
	booktitle={Asia-Pacific Software Engineering Conference (APSEC), 2017 24th},
	pages={576--581},
	year={2017},
	organization={IEEE}
}

@inproceedings{combemale2007towards,
	title={Towards a Formal Verification of Process Model's Properties-SimplePDL and TOCL Case Study},
	author={Combemale, Beno{\^\i}t and Garoche, Pierre-Lo{\"\i}c and Cr{\'e}gut, Xavier and Thirioux, Xavier and Vernadat, Fran{\c{c}}ois},
	booktitle={9th International Conference on Enterprise Information Systems},
	pages={80--89},
	year={2007}
}

@inproceedings{cregut2010generative,
	title={Generative technologies for model animation in the TopCased platform},
	author={Cr{\'e}gut, Xavier and Combemale, Benoit and Pantel, Marc and Faudoux, Rapha{\"e}l and Pavei, Jonatas},
	booktitle={European Conference on Modelling Foundations and Applications},
	pages={90--103},
	year={2010},
	organization={Springer}
}

@inproceedings{hassan2004predicting,
	title={Predicting change propagation in software systems},
	author={Hassan, Ahmed E and Holt, Richard C},
	booktitle={Software maintenance, 2004. proceedings. 20th ieee international conference on},
	pages={284--293},
	year={2004},
	organization={IEEE}
}

@article{khelladi2017semi,
	title={A semi-automatic maintenance and co-evolution of OCL constraints with (meta) model evolution},
	author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
	journal={Journal of Systems and Software},
	volume={134},
	pages={242--260},
	year={2017},
	publisher={Elsevier}
}

@inproceedings{vcubranic2003hipikat,
	title={Hipikat: Recommending pertinent software development artifacts},
	author={{\v{C}}ubrani{\'c}, Davor and Murphy, Gail C},
	booktitle={Proceedings of the 25th international Conference on Software Engineering},
	pages={408--418},
	year={2003},
	organization={IEEE Computer Society}
}

@inproceedings{robillard2002concern,
	title={Concern graphs: finding and describing concerns using structural program dependencies},
	author={Robillard, MR and Murphy, Gail C},
	booktitle={Software Engineering, 2002. ICSE 2002. Proceedings of the 24rd International Conference on},
	pages={406--416},
	year={2002},
	organization={IEEE}
}

@article{vieira2016towards,
	title={Towards Measuring the Change Impact in ATL Model Transformations},
	author={Vieira, Andreza and Ramalho, Franklin},
	journal={International Journal of Software Engineering and Knowledge Engineering},
	volume={26},
	number={02},
	pages={153--181},
	year={2016},
	publisher={World Scientific}
}

@inproceedings{vieira2014metrics,
	title={Metrics to measure the change impact in ATL model transformations},
	author={Vieira, Andreza and Ramalho, Franklin},
	booktitle={International Conference on Product-Focused Software Process Improvement},
	pages={254--268},
	year={2014},
	organization={Springer}
}


@article{cuadrado2018quick,
	title={Quick fixing ATL transformations with speculative analysis},
	author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
	journal={Software \& Systems Modeling},
	pages={1--35},
	year={2018},
	publisher={Springer}
}

@inproceedings{cuadrado2015quick,
	title={Quick fixing ATL model transformations},
	author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
	booktitle={2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
	pages={146--155},
	year={2015},
	organization={IEEE}
}

@inproceedings{di2017feature,
	title={A feature-based approach for variability exploration and resolution in model transformation migration},
	author={Di Ruscio, Davide and Etzlstorfer, Juergen and Iovino, Ludovico and Pierantonio, Alfonso and Schwinger, Wieland},
	booktitle={European Conference on Modelling Foundations and Applications},
	pages={71--89},
	year={2017},
	organization={Springer}
}

@inproceedings{khelladi2018change,
	title={Change Propagation-based and Composition-based Co-evolution of Transformations with Evolving Metamodels},
	author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
	booktitle={Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
	pages={404--414},
	year={2018},
	organization={ACM}
}

@article{van2000domain,
	title={Domain-specific languages: An annotated bibliography},
	author={Van Deursen, Arie and Klint, Paul and Visser, Joost},
	journal={ACM Sigplan Notices},
	volume={35},
	number={6},
	pages={26--36},
	year={2000},
	publisher={ACM}
}

@book{gronback2009eclipse,
	title={Eclipse modeling project: a domain-specific language (DSL) toolkit},
	author={Gronback, Richard C},
	year={2009},
	publisher={Pearson Education}
}


@article{geiger2007emf,
	title={EMF code generation with Fujaba},
	author={Geiger, Leif and Buchmann, Thomas and Dotor, Alexander},
	journal={Fujaba days},
	pages={25--29},
	year={2007}
}

@article{andersen2010generic,
	title={Generic patch inference},
	author={Andersen, Jesper and Lawall, Julia L},
	journal={Automated software engineering},
	volume={17},
	number={2},
	pages={119--148},
	year={2010},
	publisher={Springer}
}

@article{nguyen2010graph,
	title={A graph-based approach to API usage adaptation},
	author={Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson Jr, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N},
	journal={ACM Sigplan Notices},
	volume={45},
	number={10},
	pages={302--321},
	year={2010},
	publisher={ACM}
}

@inproceedings{henkel2005catchup,
	title={CatchUp! Capturing and replaying refactorings to support API evolution},
	author={Henkel, Johannes and Diwan, Amer},
	booktitle={Proceedings. 27th International Conference on Software Engineering, 2005. ICSE 2005.},
	pages={274--283},
	year={2005},
	organization={IEEE}
}

@article{dagenais2011recommending,
	title={Recommending adaptive changes for framework evolution},
	author={Dagenais, Barth{\'e}l{\'e}my and Robillard, Martin P},
	journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
	volume={20},
	number={4},
	pages={19},
	year={2011},
	publisher={ACM}
}

@inproceedings{kessentini2018integrating,
	title={Integrating the Designer in-the-loop for Metamodel/Model Co-Evolution via Interactive Computational Search},
	author={Kessentini, Wael and Wimmer, Manuel and Sahraoui, Houari},
	booktitle={Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
	pages={101--111},
	year={2018},
	organization={ACM}
}

@article{kessentini2019automated,
	title={Automated metamodel/model co-evolution: A search-based approach},
	author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
	journal={Information and Software Technology},
	volume={106},
	pages={49--67},
	year={2019},
	publisher={Elsevier}
}

@inproceedings{batot2017heuristic,
	title={Heuristic-Based Recommendation for Metamodel—OCL Coevolution},
	author={Batot, Edouard and Kessentini, Wael and Sahraoui, Houari and Famelis, Michalis},
	booktitle={2017 ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
	pages={210--220},
	year={2017},
	organization={IEEE}
}

@inproceedings{kessentini2018automated,
	title={Automated Co-evolution of Metamodels and Transformation Rules: A Search-Based Approach},
	author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
	booktitle={International Symposium on Search Based Software Engineering},
	pages={229--245},
	year={2018},
	organization={Springer}
}

@book{fowler2010domain,
	title={Domain-specific languages},
	author={Fowler, Martin},
	year={2010},
	publisher={Pearson Education}
}

@article{monperrus2018automatic,
	title={Automatic software repair: a bibliography},
	author={Monperrus, Martin},
	journal={ACM Computing Surveys (CSUR)},
	volume={51},
	number={1},
	pages={17},
	year={2018},
	publisher={ACM}
}

@inproceedings{yu2012maintaining,
	title={Maintaining invariant traceability through bidirectional transformations},
	author={Yu, Yijun and Lin, Yu and Hu, Zhenjiang and Hidaka, Soichiro and Kato, Hiroyuki and Montrieux, Lionel},
	booktitle={2012 34th International Conference on Software Engineering (ICSE)},
	pages={540--550},
	year={2012},
	organization={IEEE}
}

@inproceedings{khelladi2020onthepower,
	title={On the Power of Abstraction: a Model-Driven Co-evolution Approach of Software Code},
	author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier},
	booktitle={2020 IEEE/ACM 42st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)},
	year={2020}
}

@inproceedings{kessentini2020interactive,
	title={Interactive metamodel/model co-evolution using unsupervised learning and multi-objective search},
	author={Kessentini, Wael and Alizadeh, Vahid},
	booktitle={Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
	pages={68--78},
	year={2020}
}

@inproceedings{cherfa2021identifying,
	title={Identifying Metamodel Inaccurate Structures During Metamodel/Constraint Co-Evolution},
	author={Cherfa, Elyes and Mesli-Kesraoui, Soraya and Tibermacine, Chouki and Sadou, Salah and Fleurquin, R{\'e}gis},
	booktitle={2021 ACM/IEEE 24th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
	pages={24--34},
	year={2021},
	organization={IEEE}
}

@inproceedings{jongeling2020towards,
	title={Towards consistency checking between a system model and its implementation},
	author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
	booktitle={International Conference on Systems Modelling and Management},
	pages={30--39},
	year={2020},
	organization={Springer}
}


@inproceedings{jongeling2022Structural,
	title={Structural consistency between a system model and its implementation: a design science study in industry},
	author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Carlson, Jan and Cicchetti, Antonio},
	booktitle={The European Conference on Modelling Foundations and Applications (ECMFA)},
	year={2022}
}

@inproceedings{zaheri2021towards,
	title={Towards Checking Consistency-Breaking Updates between Models and Generated Artifacts},
	author={Zaheri, MohammadAmin and Famelis, Michalis and Syriani, Eugene},
	booktitle={2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)},
	pages={400--409},
	year={2021},
	organization={IEEE}
}


@inproceedings{pham2017bidirectional,
	title={Bidirectional mapping between architecture model and code for synchronization},
	author={Pham, Van Cam and Radermacher, Ansgar and Gerard, Sebastien and Li, Shuai},
	booktitle={2017 IEEE International Conference on Software Architecture (ICSA)},
	pages={239--242},
	year={2017},
	organization={IEEE}
}

@article{goues2019automated,
	title={Automated program repair},
	author={Goues, Claire Le and Pradel, Michael and Roychoudhury, Abhik},
	journal={Communications of the ACM},
	volume={62},
	number={12},
	pages={56--65},
	year={2019},
	publisher={ACM New York, NY, USA}
}

@inproceedings{liu2020efficiency,
	title={On the efficiency of test suite based program repair: A systematic assessment of 16 automated repair systems for java programs},
	author={Liu, Kui and Wang, Shangwen and Koyuncu, Anil and Kim, Kisub and Bissyand{\'e}, Tegawend{\'e} F and Kim, Dongsun and Wu, Peng and Klein, Jacques and Mao, Xiaoguang and Traon, Yves Le},
	booktitle={Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
	pages={615--627},
	year={2020}
}

@article{gazzola2017automatic,
	title={Automatic software repair: A survey},
	author={Gazzola, Luca and Micucci, Daniela and Mariani, Leonardo},
	journal={IEEE Transactions on Software Engineering},
	volume={45},
	number={1},
	pages={34--67},
	year={2017},
	publisher={IEEE}
}

@inproceedings{bohme2013regression,
	title={Regression tests to expose change interaction errors},
	author={B{\"o}hme, Marcel and Oliveira, Bruno C d S and Roychoudhury, Abhik},
	booktitle={Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
	pages={334--344},
	year={2013}
}

@inproceedings{riedl2014towards,
	title={Towards model-and-code consistency checking},
	author={Riedl-Ehrenleitner, Markus and Demuth, Andreas and Egyed, Alexander},
	booktitle={2014 IEEE 38th Annual Computer Software and Applications Conference},
	pages={85--90},
	year={2014},
	organization={IEEE}
}

@article{kanakis2019empirical,
	title={An Empirical Study on the Impact of Inconsistency Feedback during Model and Code Co-changing.},
	author={Kanakis, Georgios and Khelladi, Djamel Eddine and Fischer, Stefan and Tr{\"o}ls, Michael and Egyed, Alexander},
	journal={The Journal of Object Technology},
	volume={18},
	number={2},
	pages={10--1},
	year={2019}
}

@inproceedings{khelladi2019detecting,
	title={Detecting and exploring side effects when repairing model inconsistencies},
	author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
	booktitle={Proceedings of the 12th ACM SIGPLAN International Conference on Software Language Engineering},
	pages={113--126},
	year={2019}
}

@inproceedings{fraser2011evosuite,
	title={Evosuite: automatic test suite generation for object-oriented software},
	author={Fraser, Gordon and Arcuri, Andrea},
	booktitle={Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
	pages={416--419},
	year={2011}
}

@inproceedings{10.1145/3387905.3388608,
	author = {Fazzini, Mattia and Xin, Qi and Orso, Alessandro},
	title = {APIMigrator: an API-usage migration tool for Android apps},
	year = {2020},
	isbn = {9781450379595},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3387905.3388608},
	doi = {10.1145/3387905.3388608},
	abstract = {To provide their functionality, mobile apps interact extensively with the application programming interface (API) of the underlying operating system. Given that this API evolves frequently, app developers are periodically required to migrate API usages in their apps to ensure that the apps behave as expected when running on the new API. To help developers with this tedious, error-prone, and time-consuming task, we defined a technique for automated API migration and implemented it in a tool called APIMigrator that supports Android apps. APIMigrator (1) automatically migrates API usages within an app by leveraging how developers of other apps migrated corresponding API usages and (2) validates the migrations through differential testing. We evaluated APIMigrator on a benchmark of 15 real-world apps and obtained promising results. Overall, our tool was able to migrate 85\% of the API usages considered and validate 68\% of these migrations. We provide a demo video of the tool at https://youtu.be/v0VfpKi_IDc.},
	booktitle = {Proceedings of the IEEE/ACM 7th International Conference on Mobile Software Engineering and Systems},
	pages = {77–80},
	numpages = {4},
	keywords = {API analysis, API-usage migration, mobile apps},
	location = {Seoul, Republic of Korea},
	series = {MOBILESoft '20}
}
@inproceedings{10.1145/3395363.3397374,
	author = {Godefroid, Patrice and Lehmann, Daniel and Polishchuk, Marina},
	title = {Differential Regression Testing for REST APIs},
	year = {2020},
	isbn = {9781450380089},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3395363.3397374},
	doi = {10.1145/3395363.3397374},
	abstract = {Cloud services are programmatically accessed through REST APIs. Since REST APIs are constantly evolving, an important problem is how to prevent breaking changes of APIs, while supporting several different versions. To find such breaking changes in an automated way, we introduce differential regression testing for REST APIs. Our approach is based on two observations. First, breaking changes in REST APIs involve two software components, namely the client and the service. As such, there are also two types of regressions: regressions in the API specification, i.e., in the contract between the client and the service, and regressions in the service itself, i.e., previously working requests are "broken" in later versions of the service. Finding both kinds of regressions involves testing along two dimensions: when the service changes and when the specification changes. Second, to detect such bugs automatically, we employ differential testing. That is, we compare the behavior of different versions on the same inputs against each other, and find regressions in the observed differences. For generating inputs (sequences of HTTP requests) to services, we use RESTler, a stateful fuzzer for REST APIs. Comparing the outputs (HTTP responses) of a cloud service involves several challenges, like abstracting over minor differences, handling out-of-order requests, and non-determinism. Differential regression testing across 17 different versions of the widely-used Azure networking APIs deployed between 2016 and 2019 detected 14 regressions in total, 5 of those in the official API specifications and 9 regressions in the services themselves.},
	booktitle = {Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis},
	pages = {312–323},
	numpages = {12},
	keywords = {REST APIs, client/service version matrix, differential regression testing, service regression, specification regression},
	location = {Virtual Event, USA},
	series = {ISSTA 2020}
}

@ARTICLE{9079197,
	author={Lamothe, Maxime and Shang, Weiyi and Chen, Tse-Hsun Peter},
	journal={IEEE Transactions on Software Engineering}, 
	title={A3: Assisting Android API Migrations Using Code Examples}, 
	year={2022},
	volume={48},
	number={2},
	pages={417-431},
	doi={10.1109/TSE.2020.2988396}
}



@inproceedings{10.5555/2486788.2486855,
	author = {Meng, Na and Kim, Miryung and McKinley, Kathryn S.},
	title = {LASE: Locating and Applying Systematic Edits by Learning from Examples},
	year = {2013},
	isbn = {9781467330763},
	publisher = {IEEE Press},
	abstract = {Adding features and fixing bugs often require sys- tematic edits that make similar, but not identical, changes to many code locations. Finding all the relevant locations and making the correct edits is a tedious and error-prone process for developers. This paper addresses both problems using edit scripts learned from multiple examples. We design and implement a tool called LASE that (1) creates a context-aware edit script from two or more examples, and uses the script to (2) automatically identify edit locations and to (3) transform the code. We evaluate LASE on an oracle test suite of systematic edits from Eclipse JDT and SWT. LASE finds edit locations with 99\% precision and 89\% recall, and transforms them with 91\% accuracy. We also evaluate LASE on 37 example systematic edits from other open source programs and find LASE is accurate and effective. Furthermore, we confirmed with developers that LASE found edit locations which they missed. Our novel algorithm that learns from multiple examples is critical to achieving high precision and recall; edit scripts created from only one example produce too many false positives, false negatives, or both. Our results indicate that LASE should help developers in automating systematic editing. Whereas most prior work either suggests edit locations or performs simple edits, LASE is the first to do both for nontrivial program edits.},
	booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
	pages = {502–511},
	numpages = {10},
	location = {San Francisco, CA, USA},
	series = {ICSE '13}
}
@INPROCEEDINGS{6062100,
	author={Wu, Wei and Guéhéneuc, Yann-Gaël and Antoniol, Giuliano and Kim, Miryung},
	booktitle={2010 ACM/IEEE 32nd International Conference on Software Engineering}, 
	title={AURA: a hybrid approach to identify framework evolution}, 
	year={2010},
	volume={1},
	number={},
	pages={325-334},
	doi={10.1145/1806799.1806848}}


@INPROCEEDINGS{5070565,
	author={Dagenais, Barthelemy and Robillard, Martin P.},
	booktitle={2009 IEEE 31st International Conference on Software Engineering}, 
	title={SemDiff: Analysis and recommendation support for API evolution}, 
	year={2009},
	volume={},
	number={},
	pages={599-602},
	doi={10.1109/ICSE.2009.5070565}}



@inproceedings{10.1145/1869459.1869486,
	author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N.},
	title = {A Graph-Based Approach to API Usage Adaptation},
	year = {2010},
	isbn = {9781450302036},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/1869459.1869486},
	doi = {10.1145/1869459.1869486},
	abstract = {Reusing existing library components is essential for reducing the cost of software development and maintenance. When library components evolve to accommodate new feature requests, to fix bugs, or to meet new standards, the clients of software libraries often need to make corresponding changes to correctly use the updated libraries. Existing API usage adaptation techniques support simple adaptation such as replacing the target of calls to a deprecated API, however, cannot handle complex adaptations such as creating a new object to be passed to a different API method, or adding an exception handling logic that surrounds the updated API method calls.This paper presents LIBSYNC that guides developers in adapting API usage code by learning complex API usage adaptation patterns from other clients that already migrated to a new library version (and also from the API usages within the library's test code). LIBSYNC uses several graph-based techniques (1) to identify changes to API declarations by comparing two library versions, (2) to extract associated API usage skeletons before and after library migration, and (3) to compare the extracted API usage skeletons to recover API usage adaptation patterns. Using the learned adaptation patterns, LIBSYNC recommends the locations and edit operations for adapting API usages. The evaluation of LIBSYNC on real-world software systems shows that it is highly correct and useful with a precision of 100% and a recall of 91%.},
	booktitle = {Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications},
	pages = {302–321},
	numpages = {20},
	keywords = {software evolution, API evolution, API usage model, program differencing, API usage adaptation},
	location = {Reno/Tahoe, Nevada, USA},
	series = {OOPSLA '10}
}

@article{1145/1932682.1869486,
	author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N.},
	title = {A Graph-Based Approach to API Usage Adaptation},
	year = {2010},
	issue_date = {October 2010},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {45},
	number = {10},
	issn = {0362-1340},
	url = {https://doi.org/10.1145/1932682.1869486},
	doi = {10.1145/1932682.1869486},
	abstract = {Reusing existing library components is essential for reducing the cost of software development and maintenance. When library components evolve to accommodate new feature requests, to fix bugs, or to meet new standards, the clients of software libraries often need to make corresponding changes to correctly use the updated libraries. Existing API usage adaptation techniques support simple adaptation such as replacing the target of calls to a deprecated API, however, cannot handle complex adaptations such as creating a new object to be passed to a different API method, or adding an exception handling logic that surrounds the updated API method calls.This paper presents LIBSYNC that guides developers in adapting API usage code by learning complex API usage adaptation patterns from other clients that already migrated to a new library version (and also from the API usages within the library's test code). LIBSYNC uses several graph-based techniques (1) to identify changes to API declarations by comparing two library versions, (2) to extract associated API usage skeletons before and after library migration, and (3) to compare the extracted API usage skeletons to recover API usage adaptation patterns. Using the learned adaptation patterns, LIBSYNC recommends the locations and edit operations for adapting API usages. The evaluation of LIBSYNC on real-world software systems shows that it is highly correct and useful with a precision of 100% and a recall of 91%.},
	journal = {SIGPLAN Not.},
	month = {oct},
	pages = {302–321},
	numpages = {20},
	keywords = {software evolution, API evolution, API usage adaptation, API usage model, program differencing}
}

@inproceedings{10.1145/3194793.3194798,
	author = {Gerasimou, Simos and Kechagia, Maria and Kolovos, Dimitris and Paige, Richard and Gousios, Georgios},
	title = {On Software Modernisation Due to Library Obsolescence},
	year = {2018},
	isbn = {9781450357548},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3194793.3194798},
	doi = {10.1145/3194793.3194798},
	abstract = {Software libraries, typically accessible through Application Programming Interfaces (APIs), enhance modularity and reduce development time. Nevertheless, their use reinforces system dependency on third-party software. When libraries become obsolete or their APIs change, performing the necessary modifications to dependent systems, can be time-consuming, labour intensive and error-prone. In this paper, we propose a methodology that reduces the effort developers must spend to mitigate library obsolescence. We describe the steps comprising the methodology, i.e., source code analysis, visualisation of hot areas, code-based transformation, and verification of the modified system. Also, we present some preliminary results and describe our plan for developing a fully automated software modernisation approach.},
	booktitle = {Proceedings of the 2nd International Workshop on API Usage and Evolution},
	pages = {6–9},
	numpages = {4},
	keywords = {application programming interfaces, library evolution, visualisation, software libraries, software modernisation},
	location = {Gothenburg, Sweden},
	series = {WAPI '18}
}

@inproceedings{10.1145/3510455.3512783,
	author = {Ochoa, Lina and Degueule, Thomas and Falleri, Jean-R\'{e}my},
	title = {BreakBot: Analyzing the Impact of Breaking Changes to Assist Library Evolution},
	year = {2022},
	isbn = {9781450392242},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3510455.3512783},
	doi = {10.1145/3510455.3512783},
	abstract = {"If we make this change to our code, how will it impact our clients?" It is difficult for library maintainers to answer this simple---yet essential!---question when evolving their libraries. Library maintainers are constantly balancing between two opposing positions: make changes at the risk of breaking some of their clients, or avoid changes and maintain compatibility at the cost of immobility and growing technical debt. We argue that the lack of objective usage data and tool support leaves maintainers with their own subjective perception of their community to make these decisions.We introduce BreakBot, a bot that analyses the pull requests of Java libraries on GitHub to identify the breaking changes they introduce and their impact on client projects. Through static analysis of libraries and clients, it extracts and summarizes objective data that enrich the code review process by providing maintainers with the appropriate information to decide whether---and how---changes should be accepted, directly in the pull requests.},
	booktitle = {Proceedings of the ACM/IEEE 44th International Conference on Software Engineering: New Ideas and Emerging Results},
	pages = {26–30},
	numpages = {5},
	location = {Pittsburgh, Pennsylvania},
	series = {ICSE-NIER '22}
}
@INPROCEEDINGS{8813263,
	author={Xu, Shengzhe and Dong, Ziqi and Meng, Na},
	booktitle={2019 IEEE/ACM 27th International Conference on Program Comprehension (ICPC)}, 
	title={Meditor: Inference and Application of API Migration Edits}, 
	year={2019},
	volume={},
	number={},
	pages={335-346},
	doi={10.1109/ICPC.2019.00052}}
@INPROCEEDINGS{9283913,
	author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier and Jézéquel, Jean-Marc},
	booktitle={2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)}, 
	title={Co-Evolving Code with Evolving Metamodels}, 
	year={2020},
	volume={},
	number={},
	pages={1496-1508},
	doi={}}


@article{https://doi.org/10.1049/sfw2.12075,
	author = {Chen, Yi-Ting and Huang, Chin-Yu and Yang, Tsung-Han},
	title = {Using multi-pattern clustering methods to improve software maintenance quality},
	journal = {IET Software},
	volume = {17},
	number = {1},
	pages = {1-22},
	keywords = {cluster analysis, maintainability, software architecture recovery, software clustering, software modularisation},
	doi = {https://doi.org/10.1049/sfw2.12075},
	url = {https://ietresearch.onlinelibrary.wiley.com/doi/abs/10.1049/sfw2.12075},
	eprint = {https://ietresearch.onlinelibrary.wiley.com/doi/pdf/10.1049/sfw2.12075},
	abstract = {Abstract In software engineering, a software development process, also known as software development life cycle (SDLC), involves several distinct activities for developing, testing, maintaining, and evolving a software system. Within the stages of SDLC, software maintenance occupies most of the total cost of the software life. However, after extended maintenance activities, software quality always degrades due to increasing size and complexity. To solve this problem, software modularisation using clustering is an intuitive way to modularise and classify code into small pieces. , A multi-pattern clustering (MPC) algorithm for software modularisation is proposed in this study. The proposed MPC algorithm can be divided into five different steps: (1) preprocessing, (2) file labelling, (3) collection of chain dependencies, (4) hierarchical agglomerative clustering, (5) modification of the clustering result. The performance of the proposed MPC algorithm to selected clustering techniques is compared by using three open-source and one closed-source software programs. Experimental results show that the modularisation quality of the proposed MPC algorithm is nearly 1.6 times better than that of the expert decomposition. Additionally, compared to other software clustering algorithms, the proposed MPC algorithm, on average, has a 13\% enhancement in producing results similar to human thinking. Consequently, it can be seen that the proposed MPC algorithm is suitable for human comprehension while producing better module quality compared to other clustering algorithms.},
	year = {2023}
}


@article{https://doi.org/10.1002/stvr.1601,
	author = {Rojas, José Miguel and Fraser, Gordon and Arcuri, Andrea},
	title = {Seeding strategies in search-based unit test generation},
	journal = {Software Testing, Verification and Reliability},
	volume = {26},
	number = {5},
	pages = {366-401},
	keywords = {test case generation, search-based testing, testing classes, search-based software engineering, JUnit, Java},
	doi = {https://doi.org/10.1002/stvr.1601},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.1601},
	eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/stvr.1601},
	abstract = {Summary Search-based techniques have been applied successfully to the task of generating unit tests for object-oriented software. However, as for any meta-heuristic search, the efficiency heavily depends on many factors; seeding, which refers to the use of previous related knowledge to help solve the testing problem at hand, is one such factor that may strongly influence this efficiency. This paper investigates different seeding strategies for unit test generation, in particular seeding of numerical and string constants derived statically and dynamically, seeding of type information and seeding of previously generated tests. To understand the effects of these seeding strategies, the results of a large empirical analysis carried out on a large collection of open-source projects from the SF110 corpus and the Apache Commons repository are reported. These experiments show with strong statistical confidence that, even for a testing tool already able to achieve high coverage, the use of appropriate seeding strategies can further improve performance. © 2016 The Authors. Software Testing, Verification and Reliability Published by John Wiley \& Sons Ltd.},
	year = {2016}
}
@inproceedings{10.1145/3597503.3639084,
	author = {Zhong, Hao and Meng, Na},
	title = {Compiler-directed Migrating API Callsite of Client Code},
	year = {2024},
	isbn = {9798400702174},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3597503.3639084},
	doi = {10.1145/3597503.3639084},
	abstract = {API developers evolve software libraries to fix bugs, add new features, or refactor code, but the evolution can introduce API-breaking changes (e.g., API renaming). To benefit from such evolution, the programmers of client projects have to repetitively upgrade the callsites of libraries, since API-breaking changes introduce many compilation errors. It is tedious and error-prone to resolve such errors, especially when programmers are often unfamiliar with the API usages of newer versions. To migrate client code, the prior approaches either mine API mappings or learn edit scripts, but both the research lines have inherent limitations. For example, mappings alone cannot handle complex cases, and there is no sufficient source (e.g., migration commits) for learning edit scripts.In this paper, we propose a new research direction. When a library is replaced with a newer version, each type of API-breaking change introduces a type of compilation error. For example, renaming the name of an API method causes undefined-method errors at its callsites. Based on this observation, we propose to resolve errors that are introduced by migration, according to their locations and types that are reported by compilers. In this way, a migration tool can incrementally migrate complex cases, even without any change examples. Towards this direction, we propose the first approach, called LibCatch. It defines 14 migration operators, and in a compiler-directed way, it exploits the combinations of migration operators to generate migration solutions, until its predefined criteria are satisfied. We conducted two evaluations. In the first evaluation, we use LibCatch to handle 123 migration tasks. LibCatch reduced migration-related compilation errors for 92.7\% of tasks, and eliminated such errors for 32.4\% of tasks. We inspect the tasks whose errors are eliminated, and find that 33.9\% of them produce identical edits to manual migration edits. In the second evaluation, we use two tools and LibCatch to migrate 15 real client projects in the wild. LibCatch resolved all compilation errors of 7 projects, and reduced the compilation errors of 6 other projects to no more than two errors. As a comparison, the compared two tools reduced the compilation errors of only 1 project.},
	booktitle = {Proceedings of the IEEE/ACM 46th International Conference on Software Engineering},
	articleno = {226},
	numpages = {12},
	keywords = {code migration, compiler, API library},
	location = {<conf-loc>, <city>Lisbon</city>, <country>Portugal</country>, </conf-loc>},
	series = {ICSE '24}
}
@inproceedings{10.1145/1985793.1985882,
	author = {Hutchinson, John and Rouncefield, Mark and Whittle, Jon},
	title = {Model-driven engineering practices in industry},
	year = {2011},
	isbn = {9781450304450},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/1985793.1985882},
	doi = {10.1145/1985793.1985882},
	abstract = {In this paper, we attempt to address the relative absence of empirical studies of model driven engineering through describing the practices of three commercial organizations as they adopted a model driven engineering approach to their software development. Using in-depth semi-structured interviewing we invited practitioners to reflect on their experiences and selected three to use as exemplars or case studies. In documenting some details of attempts to deploy model driven practices, we identify some 'lessons learned', in particular the importance of complex organizational, managerial and social factors - as opposed to simple technical factors - in the relative success, or failure, of the endeavour. As an example of organizational change management the successful deployment of model driven engineering appears to require: a progressive and iterative approach; transparent organizational commitment and motivation; integration with existing organizational processes and a clear business focus.},
	booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
	pages = {633–642},
	numpages = {10},
	keywords = {software engineering, model driven engineering, empirical evaluation},
	location = {Waikiki, Honolulu, HI, USA},
	series = {ICSE '11}
}@ARTICLE{1231146,
author={Selic, B.},
journal={IEEE Software}, 
title={The pragmatics of model-driven development}, 
year={2003},
volume={20},
number={5},
pages={19-25},
keywords={Programming profession;Object oriented modeling;Computer languages;Bridges;Automobiles;Software systems;Automotive engineering;Systems engineering and theory;Productivity;Object oriented programming},
doi={10.1109/MS.2003.1231146}}

@inproceedings{gavsevic2007metamodeling,
	title={On metamodeling in megamodels},
	author={Ga{\v{s}}evi{\'c}, Dragan and Kaviani, Nima and Hatala, Marek},
	booktitle={Model Driven Engineering Languages and Systems: 10th International Conference, MoDELS 2007, Nashville, USA, September 30-October 5, 2007. Proceedings 10},
	pages={91--105},
	year={2007},
	organization={Springer}
}
@inproceedings{de2012domain,
	title={Domain-specific textual meta-modelling languages for model driven engineering},
	author={de Lara, Juan and Guerra, Esther},
	booktitle={Modelling Foundations and Applications: 8th European Conference, ECMFA 2012, Kgs. Lyngby, Denmark, July 2-5, 2012. Proceedings 8},
	pages={259--274},
	year={2012},
	organization={Springer}
}
@article{10.1007/s10270-005-0079-0,
	author = {B\'{e}zivin, Jean},
	title = {On the unification power of models},
	year = {2005},
	issue_date = {May       2005},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
	volume = {4},
	number = {2},
	issn = {1619-1366},
	url = {https://doi.org/10.1007/s10270-005-0079-0},
	doi = {10.1007/s10270-005-0079-0},
	abstract = {In November 2000, the OMG made public the MDA™initiative, a particular variant of a new global trend called MDE (Model Driven Engineering). The basic ideas of MDA are germane to many other approaches such as generative programming, domain specific languages, model-integrated computing, generic model management, software factories, etc. MDA may be defined as the realization of MDE principles around a set of OMG standards like MOF, XMI, OCL, UML, CWM, SPEM, etc. MDE is presently making several promises about the potential benefits that could be reaped from a move from code-centric to model-based practices. When we observe these claims, we may wonder when they may be satisfied: on the short, medium or long term or even never perhaps for some of them. This paper tries to propose a vision of the development of MDE based on some lessons learnt in the past 30 years in the development of object technology. The main message is that a basic principle ("Everything is an object") was most helpful in driving the technology in the direction of simplicity, generality and power of integration. Similarly in MDE, the basic principle that "Everything is a model" has many interesting properties, among others the capacity to generate a realistic research agenda. We postulate here that two core relations (representation and conformance) are associated to this principle, as inheritance and instantiation were associated to the object unification principle in the class-based languages of the 80's. We suggest that this may be most useful in understanding many questions about MDE in general and the MDA approach in particular. We provide some illustrative examples. The personal position taken in this paper would be useful if it could generate a critical debate on the research directions in MDE.},
	journal = {Softw. Syst. Model.},
	month = {may},
	pages = {171–188},
	numpages = {18},
	keywords = {Models, Metamodels, MDE, MDA}
}


@incollection{vermolen_reconstructing_2012,
	title={Reconstructing complex metamodel evolution},
	author={Vermolen, Sander D and Wachsmuth, Guido and Visser, Eelco},
	booktitle={Software Language Engineering},
	pages={201--221},
	year={2012},
	publisher={Springer}
}

@incollection{cicchetti_managing_2009,
	title={Managing dependent changes in coupled evolution},
	author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
	booktitle={Theory and Practice of Model Transformations},
	pages={35--51},
	year={2009},
	publisher={Springer}
}
@article{langer_posteriori_2013,
	title={A posteriori operation detection in evolving software models},
	author={Langer, Philip and Wimmer, Manuel and Brosch, Petra and Herrmannsd{\"o}rfer, Markus and Seidl, Martina and Wieland, Konrad and Kappel, Gerti},
	journal={Journal of Systems and Software},
	volume={86},
	number={2},
	pages={551--566},
	year={2013},
	publisher={Elsevier}
}
@article{bettini2022executable,
	title={An executable metamodel refactoring catalog},
	author={Bettini, Lorenzo and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
	journal={Software and Systems Modeling},
	volume={21},
	number={5},
	pages={1689--1709},
	year={2022},
	publisher={Springer}
}

@inproceedings{10.1145/2568225.2568280,
	author = {Ge, Xi and Murphy-Hill, Emerson},
	title = {Manual refactoring changes with automated refactoring validation},
	year = {2014},
	isbn = {9781450327565},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2568225.2568280},
	doi = {10.1145/2568225.2568280},
	abstract = {Refactoring, the practice of applying behavior-preserving changes to existing code, can enhance the quality of software systems. Refactoring tools can automatically perform and check the correctness of refactorings. However, even when developers have these tools, they still perform about 90\% of refactorings manually, which is error-prone. To address this problem, we propose a technique called GhostFactor separating transformation and correctness checking: we allow the developer to transform code manually, but check the correctness of her transformation automatically. We implemented our technique as a Visual Studio plugin, then evaluated it with a human study of eight software developers; GhostFactor improved the correctness of manual refactorings by 67\%.},
	booktitle = {Proceedings of the 36th International Conference on Software Engineering},
	pages = {1095–1105},
	numpages = {11},
	keywords = {IDE, Refactoring, Restructuring, Tool},
	location = {Hyderabad, India},
	series = {ICSE 2014}
}
@INPROCEEDINGS{7203050,
	author={Gligoric, Milos and Eloussi, Lamyaa and Marinov, Darko},
	booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering}, 
	title={Ekstazi: Lightweight Test Selection}, 
	year={2015},
	volume={2},
	number={},
	pages={713-716},
	doi={10.1109/ICSE.2015.230}}


@inproceedings{ducasse2000moose,
	title={Moose: an extensible language-independent environment for reengineering object-oriented systems},
	author={Ducasse, St{\'e}phane and Lanza, Michele and Tichelaar, Sander},
	booktitle={Proceedings of the Second International Symposium on Constructing Software Engineering Tools (CoSET 2000)},
	volume={4},
	year={2000}
}
@article{fu2023chatgpt,
	title={ChatGPT for Vulnerability Detection, Classification, and Repair: How Far Are We?},
	author={Fu, Michael and Tantithamthavorn, Chakkrit and Nguyen, Van and Le, Trung},
	journal={arXiv preprint arXiv:2310.09810},
	year={2023}
}


@article{kabir2023empirical,
	title={An empirical study of ChatGPT-3.5 on question answering and code maintenance},
	author={Kabir, Md Mahir Asef and Hassan, Sk Adnan and Wang, Xiaoyin and Wang, Ying and Yu, Hai and Meng, Na},
	journal={arXiv preprint arXiv:2310.02104},
	year={2023}
}

@article{zhang2023multilingual,
	title={Multilingual code co-evolution using large language models},
	author={Zhang, Jiyang and Nie, Pengyu and Li, Junyi Jessy and Gligoric, Milos},
	journal={arXiv preprint arXiv:2307.14991},
	year={2023}
}

@inproceedings{10344012,
	title={Automated Domain Modeling with Large Language Models: A Comparative Study},
	author={Chen, Kua and Yang, Yujing and Chen, Boqi and L{\'o}pez, Jos{\'e} Antonio Hern{\'a}ndez and Mussbacher, Gunter and Varr{\'o}, D{\'a}niel},
	booktitle={2023 ACM/IEEE 26th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
	pages={162--172},
	year={2023},
	organization={IEEE}
}
@article{camara2023assessment,
	title={On the assessment of generative AI in modeling tasks: an experience report with ChatGPT and UML},
	author={C{\'a}mara, Javier and Troya, Javier and Burgue{\~n}o, Lola and Vallecillo, Antonio},
	journal={Software and Systems Modeling},
	pages={1--13},
	year={2023},
	publisher={Springer}
}
@inproceedings{chaaben2023towards,
	title={Towards using few-shot prompt learning for automating model completion},
	author={Chaaben, Meriem Ben and Burgue{\~n}o, Lola and Sahraoui, Houari},
	booktitle={IEEE/ACM 45th Int. Conf. on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)},
	pages={7--12},
	year={2023},
	organization={IEEE}
}
@InProceedings{10.1007/978-3-540-87875-9_44,
	author="Vermolen, Sander
	and Visser, Eelco",
	editor="Czarnecki, Krzysztof
	and Ober, Ileana
	and Bruel, Jean-Michel
	and Uhl, Axel
	and V{\"o}lter, Markus",
	title="Heterogeneous Coupled Evolution of Software Languages",
	booktitle="Model Driven Engineering Languages and Systems",
	year="2008",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="630--644",
	abstract="As most software artifacts, meta-models can evolve. Their evolution requires conforming models to co-evolve along with them. Coupled evolution supports this. Its applicability is not limited to the modeling domain. Other domains are for example evolving grammars or database schemas. Existing approaches to coupled evolution focus on a single, homogeneous domain. They solve the co-evolution problems locally and repeatedly. In this paper we present a systematic, heterogeneous approach to coupled evolution. It provides an automatically derived domain specific transformation language; a means of executing transformations at the top level; a derivation of the coupled bottom level transformation; and it allows for generic abstractions from elementary transformations. The feasibility of the architecture is evaluated by applying it to data model evolution.",
	isbn="978-3-540-87875-9"
}

@article{sprinkle2004domain,
	title={A domain-specific visual language for domain model evolution},
	author={Sprinkle, Jonathan and Karsai, Gabor},
	journal={Journal of Visual Languages \& Computing},
	volume={15},
	number={3-4},
	pages={291--307},
	year={2004},
	publisher={Elsevier}
}
@inproceedings{wimmer2010using,
	title={On using inplace transformations for model co-evolution},
	author={Wimmer, Manuel and Kusel, Angelika and Sch{\"o}nb{\"o}ck, Johannes and Retschitzegger, Werner and Schwinger, Wieland and Kappel, Gerti},
	booktitle={Proc. 2nd int. workshop model transformation with atl},
	volume={711},
	pages={65--78},
	year={2010}
}
@InProceedings{10.1007/978-3-642-30476-7_13,
	author="Wagelaar, Dennis
	and Iovino, Ludovico
	and Di Ruscio, Davide
	and Pierantonio, Alfonso",
	editor="Hu, Zhenjiang
	and de Lara, Juan",
	title="Translational Semantics of a Co-evolution Specific Language with the EMF Transformation Virtual Machine",
	booktitle="Theory and Practice of Model Transformations",
	year="2012",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="192--207",
	abstract="Model-to-model transformations are often employed to establish translational semantics of Domain-Specific Languages (DSLs) by mapping high-level models into more concrete ones. Such semantics are also executable when there exists a target platform able to execute the target models. Conceiving a transformation that targets a low-level language still remains arduous due to the large semantic gap between the DSL and the corresponding target language. In this respect, depending on the domain of the DSL, this task can be made easier by reusing an existing platform and bytecode language for that domain, as for instance the EMF Transformation Virtual Machine (EMFTVM) for the domain of model transformation. This paper defines executable semantics for EMFMigrate, a model transformation language specifically designed for managing the coupled evolution in model-driven development. To this end, the approach considers EMFTVM as the runtime engine targeted by the proposed semantic mappings.",
	isbn="978-3-642-30476-7"
}
@InProceedings{10.1007/978-3-642-38883-5_10,
	author="Krause, Christian
	and Dyck, Johannes
	and Giese, Holger",
	editor="Duddy, Keith
	and Kappel, Gerti",
	title="Metamodel-Specific Coupled Evolution Based on Dynamically Typed Graph Transformations",
	booktitle="Theory and Practice of Model Transformations",
	year="2013",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="76--91",
	abstract="A key challenge in model-driven software engineering is the evolution of metamodels and the required effort in migrating their instance models. Even though there already exist both theoretical work and tool support for coupled evolution of metamodels and models, the existing approaches lack expressive power for defining metamodel-specific coupled changes or are too generic to permit assurance of metamodel conformance. In this paper, we devise a mechanism to define and execute coupled evolutions of metamodels and instance models based on graph transformations. We target the Eclipse Modeling Framework (EMF) and achieve the coupling of changes by bridging the conceptual gap between the metamodel and the instance model levels using a wrapper for EMF instance models. Coupled evolutions are then defined by means of dynamically typed graph transformation rules. This specification approach is expressive as it allows the developer to model customized migration rules, which are pivotal for metamodel-specific changes. We present static and run-time consistency checks and show how to decouple the execution of migrations. Our implementation consists of a wrapper package that is used in conjunction with the model transformation tool Henshin.",
	isbn="978-3-642-38883-5"
}
@article{10.1007/s10270-012-0313-5,
	author = {Levendovszky, Tihamer and Balasubramanian, Daniel and Narayanan, Anantha and Shi, Feng and Buskirk, Chris and Karsai, Gabor},
	title = {A semi-formal description of migrating domain-specific models with evolving domains},
	year = {2014},
	issue_date = {May       2014},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
	volume = {13},
	number = {2},
	issn = {1619-1366},
	url = {https://doi.org/10.1007/s10270-012-0313-5},
	doi = {10.1007/s10270-012-0313-5},
	abstract = {One of the main advantages of defining a domain-specific modeling language (DSML) is the flexibility to adjust the language definition to changing requirements or in response to a deeper understanding of the domain. With the industrial applications of domain-specific modeling environments, models are valuable investments. If the modeling language evolves, these models must be seamlessly migrated to the evolved DSML. Although the changes stemming from the language evolution are not abrupt in nature, migrating existing models to a new language is still a challenging task. Our solution is the Model Change Language (MCL) tool set, which defines a DSML to describe the migration rules and then performs the model migration automatically. In this paper, we describe the precise semantics of MCL and its execution, along with the confluence of the migration.},
	journal = {Softw. Syst. Model.},
	month = {may},
	pages = {807–823},
	numpages = {17}
}
@article{10.1007/s10270-012-0296-2,
	author = {Rose, Louis M. and Kolovos, Dimitrios S. and Paige, Richard F. and Polack, Fiona A. and Poulding, Simon},
	title = {Epsilon Flock: a model migration language},
	year = {2014},
	issue_date = {May       2014},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
	volume = {13},
	number = {2},
	issn = {1619-1366},
	url = {https://doi.org/10.1007/s10270-012-0296-2},
	doi = {10.1007/s10270-012-0296-2},
	abstract = {Model-driven engineering introduces additional challenges for controlling and managing software evolution. Today, tools exist for generating model editors and for managing models with transformation, validation, merging and weaving. There is limited support, however, for model migration--a development activity in which instance models are updated in response to metamodel evolution. In this paper, we propose conservative copy--a style of model transformation that we believe is well-suited to model migration--and Epsilon Flock--a compact model-to-model transformation language tailored for model migration. The proposed structures are evaluated by comparing the conciseness of model migration strategies written in different styles of transformation language, using several examples of evolution taken from UML and the graphical modelling framework.},
	journal = {Softw. Syst. Model.},
	month = {may},
	pages = {735–755},
	numpages = {21},
	keywords = {Metamodel evolution, Model migration, Model transformation}
}

@inproceedings{del2007semi,
	title={Semi-automatic model integration using matching transformations and weaving models},
	author={Del Fabro, Marcos Didonet and Valduriez, Patrick},
	booktitle={Proceedings of the 2007 ACM symposium on Applied computing},
	pages={963--970},
	year={2007}
}
@inproceedings{de2008generating,
	title={Generating version convertors for domain-specific languages},
	author={de Geest, Gerardo and Vermolen, Sander and van Deursen, Arie and Visser, Eelco},
	booktitle={2008 15th Working Conference on Reverse Engineering},
	pages={197--201},
	year={2008},
	organization={IEEE}
}
@inproceedings{garces2009managing,
	title={Managing model adaptation by precise detection of metamodel changes},
	author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
	booktitle={Model Driven Architecture-Foundations and Applications: 5th European Conference, ECMDA-FA 2009, Enschede, The Netherlands, June 23-26, 2009. Proceedings 5},
	pages={34--49},
	year={2009},
	organization={Springer}
}
@article{meyers2011generic,
	title={A generic in-place transformation-based approach to structured model co-evolution},
	author={Meyers, Bart and Wimmer, Manuel and Cicchetti, Antonio and Sprinkle, Jonathan},
	journal={Electronic Communications of the EASST},
	volume={42},
	year={2011}
}
@article{mantz2013well,
	title={Well-formed model co-evolution with customizable model migration},
	author={Mantz, Florian and Taentzer, Gabriele and Lamo, Yngve},
	journal={Electronic Communications of the EASST},
	year={2013}
}
@inproceedings{anguel2014using,
	title={Using weaving models in metamodel and model co-evolution approach},
	author={Anguel, Fouzia and Amirat, Abdelkrim and Bounour, Nora},
	booktitle={2014 6th International Conference on Computer Science and Information Technology (CSIT)},
	pages={142--147},
	year={2014},
	organization={IEEE}
}
@article{hossler2005coevolution,
	title={Coevolution of models, metamodels and transformations},
	author={H{\"o}{\ss}ler, Joachim and Soden, Michael and Eichler, Hajo and others},
	journal={Models and Human Reasoning},
	pages={129--154},
	year={2005},
	publisher={Wissenschaft und Technik Verlag Berlin}
}
@inproceedings{florez2012coevolution,
	title={Coevolution assistance for enterprise architecture models},
	author={Florez, Hector and S{\'a}nchez, Mario and Villalobos, Jorge and Vega, Germ{\'a}n},
	booktitle={Proceedings of the 6th International Workshop on Models and Evolution},
	pages={27--32},
	year={2012}
}
@article{fernandez2013adapting,
	title={Adapting models in metamodels composition processes},
	author={Fernandez, Hector Arturo Florez and others},
	journal={Revista Vinculos},
	volume={10},
	number={1},
	pages={96--108},
	year={2013}
}
@inproceedings{wachsmuth2007metamodel,
	title={Metamodel adaptation and model co-adaptation},
	author={Wachsmuth, Guido},
	booktitle={European conference on object-oriented programming},
	pages={600--624},
	year={2007},
	organization={Springer}
}
@inproceedings{cicchetti2009managing,
	title={Managing dependent changes in coupled evolution},
	author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
	booktitle={International Conference on Theory and Practice of Model Transformations},
	pages={35--51},
	year={2009},
	organization={Springer}
}
@inproceedings{van2011generic,
	title={A generic solution for syntax-driven model co-evolution},
	author={Van Den Brand, Mark and Proti{\'c}, Zvezdan and Verhoeff, Tom},
	booktitle={Objects, Models, Components, Patterns: 49th International Conference, TOOLS 2011, Zurich, Switzerland, June 28-30, 2011. Proceedings 49},
	pages={36--51},
	year={2011},
	organization={Springer}
}
@article{10.1007/s10515-012-0102-y,
	author = {Guerra, Esther and Lara, Juan and Wimmer, Manuel and Kappel, Gerti and Kusel, Angelika and Retschitzegger, Werner and Sch\"{o}nb\"{o}ck, Johannes and Schwinger, Wieland},
	title = {Automated verification of model transformations based on visual contracts},
	year = {2013},
	issue_date = {March     2013},
	publisher = {Kluwer Academic Publishers},
	address = {USA},
	volume = {20},
	number = {1},
	issn = {0928-8910},
	url = {https://doi.org/10.1007/s10515-012-0102-y},
	doi = {10.1007/s10515-012-0102-y},
	abstract = {Model-Driven Engineering promotes the use of models to conduct the different phases of the software development. In this way, models are transformed between different languages and notations until code is generated for the final application. Hence, the construction of correct Model-to-Model (M2M) transformations becomes a crucial aspect in this approach.Even though many languages and tools have been proposed to build and execute M2M transformations, there is scarce support to specify correctness requirements for such transformations in an implementation-independent way, i.e., irrespective of the actual transformation language used.In this paper we fill this gap by proposing a declarative language for the specification of visual contracts, enabling the verification of transformations defined with any transformation language. The verification is performed by compiling the contracts into QVT to detect disconformities of transformation results with respect to the contracts. As a proof of concept, we also report on a graphical modeling environment for the specification of contracts, and on its use for the verification of transformations in several case studies.},
	journal = {Automated Software Engg.},
	month = mar,
	pages = {5–46},
	numpages = {42},
	keywords = {Contract-based specification, Model transformation, Model-Driven Engineering, QVT-relations, Verification}
}
@inproceedings{becker2007process,
	title={A process model and classification scheme for semi-automatic meta-model evolution},
	author={Becker, Steffen and Gruschko, Boris and Goldschmidt, Thomas and Koziolek, Heiko},
	booktitle={1st Workshop MDD, SOA und IT-Management (MSI), GI, GiTO-Verlag},
	pages={35--46},
	year={2007}
}
@inproceedings{herrmannsdoerfer2009operation,
	title={Operation-based versioning of metamodels with COPE},
	author={Herrmannsdoerfer, Markus},
	booktitle={2009 ICSE Workshop on Comparison and Versioning of Software Models},
	pages={49--54},
	year={2009},
	organization={IEEE}
}
@inproceedings{wittern2013determining,
	title={Determining the necessity of human intervention when migrating models of an evolved DSL},
	author={Wittern, Hauke},
	booktitle={2013 17th IEEE International Enterprise Distributed Object Computing Conference Workshops},
	pages={209--218},
	year={2013},
	organization={IEEE}
}
@misc{Hebig2017,
	abstract = {Modeling languages, just as all software artifacts, evolve. This poses the risk that legacy models of a company get lost, when they become incompatible with the new language version. To address this risk, a multitude of approaches for metamodel-model co-evolution were proposed in the last 10 years. However, the high number of solutions makes it difficult for practitioners to choose an appropriate approach. In this paper, we present a survey on 31 approaches to support metamodel-model co-evolution. We introduce a taxonomy of solution techniques and classify the existing approaches. To support researchers, we discuss the state of the art, in order to better identify open issues. Furthermore, we use the results to provide a decision support for practitioners, who aim to adopt solutions from research.},
	author = {Hebig, Regina and Khelladi, Djamel Eddine and Bendraou, Reda},
	booktitle = {IEEE Transactions on Software Engineering},
	doi = {10.1109/TSE.2016.2610424},
	file = {:home/zkebaili/.var/app/com.elsevier.MendeleyDesktop/data/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Hebig, Khelladi, Bendraou - 2017 - Approaches to co-evolution of metamodels and models A survey.pdf:pdf},
	issn = {00985589},
	keywords = {Design notations and documentation,Metamodels,Models,Software engineering,Survey},
	mendeley-groups = {MM models coevolution},
	month = {may},
	number = {5},
	pages = {396--414},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	title = {{Approaches to co-evolution of metamodels and models: A survey}},
	volume = {43},
	year = {2017}
}

@inproceedings{anguel2013towards,
	title={Towards models and metamodels co-evolution approach},
	author={Anguel, Fouzia and Amirat, Abdelkrim and Bounour, Nora},
	booktitle={2013 11th International Symposium on Programming and Systems (ISPS)},
	pages={163--167},
	year={2013},
	organization={IEEE}
}
@article{demuth2016co,
	title={Co-evolution of metamodels and models through consistent change propagation},
	author={Demuth, Andreas and Riedl-Ehrenleitner, Markus and Lopez-Herrejon, Roberto E and Egyed, Alexander},
	journal={Journal of Systems and Software},
	volume={111},
	pages={281--297},
	year={2016},
	publisher={Elsevier}
}
@article{gomez2014approach,
	title={An approach to the co-creation of models and metamodels in Enterprise Architecture Projects.},
	author={G{\'o}mez, Paola and S{\'a}nchez, Mario E and Florez, Hector and Villalobos, Jorge},
	journal={J. Object Technol.},
	volume={13},
	number={3},
	pages={2--1},
	year={2014}
}
@inproceedings{kessentini2016automated,
	title={Automated metamodel/model co-evolution using a multi-objective optimization approach},
	author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
	booktitle={Modelling Foundations and Applications: 12th European Conference, ECMFA 2016, Held as Part of STAF 2016, Vienna, Austria, July 6-7, 2016, Proceedings 12},
	pages={138--155},
	year={2016},
	organization={Springer}
}
@article{kessentini2019automated,
	title={Automated metamodel/model co-evolution: A search-based approach},
	author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
	journal={Information and Software Technology},
	volume={106},
	pages={49--67},
	year={2019},
	publisher={Elsevier}
}
@inproceedings{kessentini2020interactive,
	title={Interactive metamodel/model co-evolution using unsupervised learning and multi-objective search},
	author={Kessentini, Wael and Alizadeh, Vahid},
	booktitle={Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
	pages={68--78},
	year={2020}
}
@inproceedings{schonbock2014care,
	title={CARE: a constraint-based approach for re-establishing conformance-relationships},
	author={Sch{\"o}nb{\"o}ck, Johannes and Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Schwinger, Wieland and Wimmer, Manuel and Wischenbart, Martin},
	booktitle={Proceedings of the Tenth Asia-Pacific Conference on Conceptual Modelling-Volume 154},
	pages={19--28},
	year={2014}
}
@INPROCEEDINGS{8101267,
	author={Batot, Edouard and Kessentini, Wael and Sahraoui, Houari and Famelis, Michalis},
	booktitle={2017 ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems (MODELS)}, 
	title={Heuristic-Based Recommendation for Metamodel — OCL Coevolution}, 
	year={2017},
	volume={},
	number={},
	pages={210-220},
	keywords={Model driven engineering;Software Engineering;Genetic Pogramming;Coevolution},
	doi={10.1109/MODELS.2017.25}}
	
	@inproceedings{10.1007/978-3-642-41533-3_18,
		author = {Demuth, Andreas and Lopez-Herrejon, Roberto E. and Egyed, Alexander},
		title = {Supporting the Co-evolution of Metamodels and Constraints through Incremental Constraint Management},
		year = {2013},
		isbn = {9783642415326},
		publisher = {Springer-Verlag},
		address = {Berlin, Heidelberg},
		url = {https://doi.org/10.1007/978-3-642-41533-3_18},
		doi = {10.1007/978-3-642-41533-3_18},
		abstract = {Design models must abide by constraints that can come from diverse sources, like metamodels, requirements, or the problem domain. Modelers intent to live by these constraints and thus desire automated mechanism that provide instant feedback on constraint violations. However, typical approaches assume that constraints do not evolve over time, which, unfortunately, is becoming increasingly unrealistic. For example, the co-evolution of metamodels and models requires corresponding constraints to be co-evolved continuously. This demands efficient constraint adaptation mechanisms to ensure that validated constraints are up-to-date. This paper presents an approach based on constraint templates that tackles this evolution scenario by automatically updating constraints. We developed the Cross-Layer Modeler XLM approach which relies on incremental consistency-checking. As a case study, we performed evolutions of the UML-metamodel and 21 design models. Our approach is sound and the empirical evaluation shows that it is near instant and scales with increasing model sizes.},
		booktitle = {Proceedings of the 16th International Conference on Model-Driven Engineering Languages and Systems - Volume 8107},
		pages = {287–303},
		numpages = {17},
		keywords = {metamodeling, consistency-checking, Co-evolution}
	}
	@article{markovic2008refactoring,
		title={Refactoring OCL annotated UML class diagrams},
		author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
		journal={Software \& Systems Modeling},
		volume={7},
		pages={25--47},
		year={2008},
		publisher={Springer}
	}
	@inproceedings{hassam2011assistance,
		title={Assistance system for ocl constraints adaptation during metamodel evolution},
		author={Hassam, Kahina and Sadou, Salah and Le Gloahec, Vincent and Fleurquin, R{\'e}gis},
		booktitle={2011 15th European conference on software maintenance and reengineering},
		pages={151--160},
		year={2011},
		organization={IEEE}
	}
	@inproceedings{kusel2014systematic,
		title={A Systematic Taxonomy of Metamodel Evolution Impacts on OCL Expressions.},
		author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Langer, Philip and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={ME@ MoDELS},
		pages={2--11},
		year={2014}
	}
	@inproceedings{cabot2004automatic,
		title={Automatic integrity constraint evolution due to model subtract operations},
		author={Cabot, Jordi and Conesa, Jordi},
		booktitle={Conceptual Modeling for Advanced Application Domains: ER 2004 Workshops CoMoGIS, CoMWIM, ECDM, CoMoA, DGOV, and eCOMO, Shanghai, China, November 8-12, 2004. Proceedings 23},
		pages={350--362},
		year={2004},
		organization={Springer}
	}
	@article{khelladi2017semi,
		title={A semi-automatic maintenance and co-evolution of OCL constraints with (meta) model evolution},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
		journal={Journal of Systems and Software},
		volume={134},
		pages={242--260},
		year={2017},
		publisher={Elsevier}
	}
	@article{mendez2010towards,
		title={Towards transformation migration after metamodel evolution},
		author={Mendez, David and Etien, Anne and Muller, Alexis and Casallas, Rubby},
		journal={Model and Evolution Wokshop},
		year={2010}
	}
	@inproceedings{di2011needed,
		title={What is needed for managing co-evolution in mde?},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
		pages={30--38},
		year={2011}
	}
	@article{garces2014adapting,
		title={Adapting transformations to metamodel changes via external transformation composition},
		author={Garc{\'e}s, Kelly and Vara, Juan M and Jouault, Fr{\'e}d{\'e}ric and Marcos, Esperanza},
		journal={Software \& Systems Modeling},
		volume={13},
		pages={789--806},
		year={2014},
		publisher={Springer}
	}
	@inproceedings{kusel2015consistent,
		title={Consistent co-evolution of models and transformations},
		author={Kusel, Angelika and Etzlstorfer, J{\"u}rgen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schwinger, Wieland and Sch{\"o}nb{\"o}ck, Johannes},
		booktitle={2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={116--125},
		year={2015},
		organization={IEEE}
	}
	@inproceedings{khelladi2018change,
		title={Change propagation-based and composition-based co-evolution of transformations with evolving metamodels},
		author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Proceedings of the 21th ACM/IEEE international conference on model driven engineering languages and systems},
		pages={404--414},
		year={2018}
	}
	@inproceedings{garcia2012model,
		title={Model transformation co-evolution: A semi-automatic approach},
		author={Garcia, Jokin and Diaz, Oscar and Azanza, Maider},
		booktitle={International conference on software language engineering},
		pages={144--163},
		year={2012},
		organization={Springer}
	}
	@inproceedings{kessentini2018automated,
		title={Automated co-evolution of metamodels and transformation rules: A search-based approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		booktitle={Search-Based Software Engineering: 10th International Symposium, SSBSE 2018, Montpellier, France, September 8-9, 2018, Proceedings 10},
		pages={229--245},
		year={2018},
		organization={Springer}
	}
	@article{10.1145/1932682.1869486,
		author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N.},
		title = {A Graph-Based Approach to API Usage Adaptation},
		year = {2010},
		issue_date = {October 2010},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		volume = {45},
		number = {10},
		issn = {0362-1340},
		url = {https://doi.org/10.1145/1932682.1869486},
		doi = {10.1145/1932682.1869486},
		abstract = {Reusing existing library components is essential for reducing the cost of software development and maintenance. When library components evolve to accommodate new feature requests, to fix bugs, or to meet new standards, the clients of software libraries often need to make corresponding changes to correctly use the updated libraries. Existing API usage adaptation techniques support simple adaptation such as replacing the target of calls to a deprecated API, however, cannot handle complex adaptations such as creating a new object to be passed to a different API method, or adding an exception handling logic that surrounds the updated API method calls.This paper presents LIBSYNC that guides developers in adapting API usage code by learning complex API usage adaptation patterns from other clients that already migrated to a new library version (and also from the API usages within the library's test code). LIBSYNC uses several graph-based techniques (1) to identify changes to API declarations by comparing two library versions, (2) to extract associated API usage skeletons before and after library migration, and (3) to compare the extracted API usage skeletons to recover API usage adaptation patterns. Using the learned adaptation patterns, LIBSYNC recommends the locations and edit operations for adapting API usages. The evaluation of LIBSYNC on real-world software systems shows that it is highly correct and useful with a precision of 100\% and a recall of 91\%.},
		journal = {SIGPLAN Not.},
		month = {oct},
		pages = {302–321},
		numpages = {20},
		keywords = {software evolution, API evolution, API usage adaptation, API usage model, program differencing}
	}
	@book{stahl2006model,
		title={Model-driven software development: technology, engineering, management},
		author={Stahl, Thomas and V{\"o}lter, Markus and Czarnecki, Krzysztof},
		year={2006},
		publisher={John Wiley \& Sons, Inc.}
	}
	
	@article{wortmann2020modeling,
		title={Modeling languages in Industry 4.0: an extended systematic mapping study},
		author={Wortmann, Andreas and Barais, Olivier and Combemale, Benoit and Wimmer, Manuel},
		journal={Software and Systems Modeling},
		volume={19},
		pages={67--94},
		year={2020},
		publisher={Springer}
	}
	@inproceedings{gruschko2007towards,
		title={Towards synchronizing models with evolving metamodels},
		author={Gruschko, Boris and Kolovos, Dimitrios and Paige, Richard},
		booktitle={Proceedings of the International Workshop on Model-Driven Software Evolution},
		pages={3},
		
		year={2007},
		organization={Amsterdam, Netherlands}
	}
	
	@article{dig2006apis,
		title={How do APIs evolve? A story of refactoring},
		author={Dig, Danny and Johnson, Ralph},
		journal={Journal of software maintenance and evolution: Research and Practice},
		volume={18},
		number={2},
		pages={83--107},
		year={2006},
		publisher={Wiley Online Library}
	}
	@INPROCEEDINGS{10043250,
		author={Zaitsev, Oleksandr and Ducasse, Stéphane and Anquetil, Nicolas and Thiefaine, Arnaud},
		booktitle={2022 29th Asia-Pacific Software Engineering Conference (APSEC)}, 
		title={How Libraries Evolve: A Survey of Two Industrial Companies and an Open-Source Community}, 
		year={2022},
		volume={},
		number={},
		pages={309-317},
		keywords={Software libraries;Companies;Libraries;Software;Faces;library evolution;library update;survey;software engineering;software reuse;breaking changes},
		doi={10.1109/APSEC57359.2022.00043}}
		 @inproceedings{ren2004chianti,
			title={Chianti: a tool for change impact analysis of java programs},
			author={Ren, Xiaoxia and Shah, Fenil and Tip, Frank and Ryder, Barbara G and Chesley, Ophelia},
			booktitle={Proceedings of the 19th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
			pages={432--448},
			year={2004}
		}
	 @techreport{urma2017programming,
		title={Programming language evolution},
		author={Urma, Raoul-Gabriel},
		year={2017},
		institution={University of Cambridge, Computer Laboratory}
	}
	@article{dietrich2016java,
		title={What Java developers know about compatibility, and why this matters},
		author={Dietrich, Jens and Jezek, Kamil and Brada, Premek},
		journal={Empirical Software Engineering},
		volume={21},
		pages={1371--1396},
		year={2016},
		publisher={Springer}
	}
	@book{arnold1996software,
		title={Software change impact analysis},
		author={Arnold, Robert S},
		year={1996},
		publisher={IEEE Computer Society Press}
	}

	}
	@inproceedings{ryder2001change,
		title={Change impact analysis for object-oriented programs},
		author={Ryder, Barbara G and Tip, Frank},
		booktitle={Proceedings of the 2001 ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering},
		pages={46--53},
		year={2001}
	}
	@inproceedings{schuts2021industrial,
		title={Industrial experiences with the evolution of a DSL},
		author={Schuts, Mathijs and Alonso, Marco and Hooman, Jozef},
		booktitle={Proceedings of the 18th ACM SIGPLAN International Workshop on Domain-Specific Modeling},
		pages={21--30},
		year={2021}
	}
	@inproceedings{mengerink2016dsl,
		title={DSL/Model Co-Evolution in Industrial EMF-Based MDSE Ecosystems.},
		author={Mengerink, Josh and Schiffelers, Ramon RH and Serebrenik, Alexander and van den Brand, Mark},
		booktitle={ME@ MoDELS},
		pages={2--7},
		year={2016}
	}
	@inproceedings{favre2005languages,
		title={Languages evolve too! changing the software time scale},
		author={Favre, J-M},
		booktitle={Eighth International Workshop on Principles of Software Evolution (IWPSE'05)},
		pages={33--42},
		year={2005},
		organization={IEEE}
	}
	@incollection{herrmannsdorfer2013coupled,
		title={Coupled evolution of software metamodels and models},
		author={Herrmannsd{\"o}rfer, Markus and Wachsmuth, Guido},
		booktitle={Evolving Software Systems},
		pages={33--63},
		year={2013},
		publisher={Springer}
	}
	@InProceedings{10.1007/978-3-642-12107-4_3,
		author="Herrmannsdoerfer, Markus
		and Ratiu, Daniel
		and Wachsmuth, Guido",
		editor="van den Brand, Mark
		and Ga{\v{s}}evi{\'{c}}, Dragan
		and Gray, Jeff",
		title="Language Evolution in Practice: The History of GMF",
		booktitle="Software Language Engineering",
		year="2010",
		publisher="Springer Berlin Heidelberg",
		address="Berlin, Heidelberg",
		pages="3--22",
		abstract="In consequence of changing requirements and technological progress, software languages are subject to change. The changes affect the language's specification, which in turn affects language processors as well as existing language utterances. Unfortunately, little is known about how software languages evolve in practice. This paper presents a case study on the evolution of four modeling languages provided by the Graphical Modeling Framework. It investigates the following research questions: (1) What is the impact of language changes on related software artifacts?, (2) What activities are performed to implement language changes? and (3) What kinds of adaptations capture the language changes? We found out that the language changes affect various kinds of related artifacts; the distribution of the activities performed to evolve the languages mirrors the classical software maintenance activities, and most language changes can be captured by a small suite of operators that can also be used to migrate the language utterances.",
		isbn="978-3-642-12107-4"
	}
	@INPROCEEDINGS{5279907,
		author={Lammel, Ralf and Zaytsev, Vadim},
		booktitle={2009 Ninth IEEE International Working Conference on Source Code Analysis and Manipulation}, 
		title={Recovering Grammar Relationships for the Java Language Specification}, 
		year={2009},
		volume={},
		number={},
		pages={178-186},
		keywords={Java;Convergence;Computer bugs;Scalability;Reproducibility of results;Computer languages;Embedded software;Best practices;Binary trees;Sun},
		doi={10.1109/SCAM.2009.29}}
	
@inproceedings{ivanov2002technological,
	title={Technological spaces: An initial appraisal},
	author={Ivanov, Ivan and B{\'e}zivin, Jean and Aksit, Mehmet},
	booktitle={4th International Symposium on Distributed Objects and Applications, DOA 2002},
	year={2002}
}
@article{favre2003meta,
	title={Meta-model and model co-evolution within the 3D software space},
	author={Favre, Jean-Marie},
	journal={ELISA},
	volume={3},
	pages={98--109},
	year={2003}
}
	@book{lammel2001format,
		title={Format evolution},
		author={Lammel, Ralf and Lohmann, Wolfgang},
		year={2001},
		publisher={Citeseer}
	}
	@article{meyer1996schema,
		title={Schema evolution: Concepts, terminology, and solutions},
		author={Meyer, Bertrand},
		journal={Computer},
		volume={29},
		number={10},
		pages={119--121},
		year={1996},
		publisher={IEEE}
	}
	@article{flouris2008ontology,
		title={Ontology change: classification and survey},
		author={Flouris, Giorgos and Manakanatas, Dimitris and Kondylakis, Haridimos and Plexousakis, Dimitris and Antoniou, Grigoris},
		journal={The Knowledge Engineering Review},
		volume={23},
		number={2},
		pages={117--152},
		year={2008},
		publisher={Cambridge university press}
	}
	@INPROCEEDINGS{7332471,
		author={Hora, André and Robbes, Romain and Anquetil, Nicolas and Etien, Anne and Ducasse, Stéphane and Tulio Valente, Marco},
		booktitle={2015 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
		title={How do developers react to API evolution? The Pharo ecosystem case}, 
		year={2015},
		volume={},
		number={},
		pages={251-260},
		keywords={Ecosystems;Open source software;Context;History;Computer science;Association rules},
		doi={10.1109/ICSM.2015.7332471}}
	$@phdthesis{zaytsev:tel-03998632,
		TITLE = {{Data Mining-based tools to support library update}},
		AUTHOR = {Zaytsev, Oleksandr},
		URL = {https://theses.hal.science/tel-03998632},
		NUMBER = {2022ULILB028},
		SCHOOL = {{Universit{\'e} de Lille}},
		YEAR = {2022},
		MONTH = Oct,
		KEYWORDS = {Software Evolution ; Library Update ; Library Migration ; Data Mining ; Artificial Intelligence ; Software Engineering ; {\'E}volution Logicielle ; Mise {\`a} jour des biblioth{\`e}ques},
		TYPE = {Theses},
		PDF = {https://theses.hal.science/tel-03998632/file/These_ZAYTSEV_Oleksandr.pdf},
		HAL_ID = {tel-03998632},
		HAL_VERSION = {v1},
	}
	@article{10.1007/s10664-021-10052-y,
		author = {Ochoa, Lina and Degueule, Thomas and Falleri, Jean-R\'{e}my and Vinju, Jurgen},
		title = {Breaking bad? Semantic versioning and impact of breaking changes in Maven Central: An external and differentiated replication study},
		year = {2022},
		issue_date = {May 2022},
		publisher = {Kluwer Academic Publishers},
		address = {USA},
		volume = {27},
		number = {3},
		issn = {1382-3256},
		url = {https://doi.org/10.1007/s10664-021-10052-y},
		doi = {10.1007/s10664-021-10052-y},
		abstract = {Just like any software, libraries evolve to incorporate new features, bug fixes, security patches, and refactorings. However, when a library evolves, it may break the contract previously established with its clients by introducing Breaking Changes (BCs) in its API. These changes might trigger compile-time, link-time, or run-time errors in client code. As a result, clients may hesitate to upgrade their dependencies, raising security concerns and making future upgrades even more difficult. Understanding how libraries evolve helps client developers to know which changes to expect and where to expect them, and library developers to understand how they might impact their clients. In the most extensive study to date, Raemaekers et al. investigate to what extent developers of Java libraries hosted on the Maven Central Repository (MCR) follow semantic versioning conventions to signal the introduction of BCs and how these changes impact client projects. Their results suggest that BCs are widespread without regard for semantic versioning, with a significant impact on clients. In this paper, we conduct an external and differentiated replication study of their work. We identify and address some limitations of the original protocol and expand the analysis to a new corpus spanning seven more years of the MCR. We also present a novel static analysis tool for Java bytecode, Maracas, which provides us with: (i) the set of all BCs between two versions of a library, and; (ii) the set of locations in client code impacted by individual BCs. Our key findings, derived from the analysis of 119,879 library upgrades and 293,817 clients, contrast with the original study and show that 83.4\% of these upgrades do comply with semantic versioning. Furthermore, we observe that the tendency to comply with semantic versioning has significantly increased over time. Finally, we find that most BCs affect code that is not used by any client, and that only 7.9\% of all clients are affected by BCs. These findings should help (i) library developers to understand and anticipate the impact of their changes; (ii) library users to estimate library upgrading effort and to pick libraries that are less likely to break, and; (iii) researchers to better understand the dynamics of library-client co-evolution in Java.},
		journal = {Empirical Softw. Engg.},
		month = {may},
		numpages = {42},
		keywords = {Maven Central, Backwards compatibility, Breaking changes, API evolution, Software evolution}
	}
	
	@article{LIU2021110817,
		title = {A critical review on the evaluation of automated program repair systems},
		journal = {Journal of Systems and Software},
		volume = {171},
		pages = {110817},
		year = {2021},
		issn = {0164-1212},
		doi = {https://doi.org/10.1016/j.jss.2020.110817},
		url = {https://www.sciencedirect.com/science/article/pii/S0164121220302156},
		author = {Kui Liu and Li Li and Anil Koyuncu and Dongsun Kim and Zhe Liu and Jacques Klein and Tegawendé F. Bissyandé},
		keywords = {Automated program repair, Evaluation, Assessment, Metrics},
		abstract = {Automated Program Repair (APR) has attracted significant attention from software engineering research and practice communities in the last decade. Several teams have recorded promising performance in fixing real bugs and there is a race in the literature to fix as many bugs as possible from established benchmarks. Gradually, repair performance of APR tools in the literature has gone from being evaluated with a metric on the number of generated plausible patches to the number of correct patches. This evolution is necessary after a study highlighting the overfitting issue in test suite-based automatic patch generation. Simultaneously, some researchers are also insisting on providing time cost in the repair scenario as a metric for comparing state-of-the-art systems. In this paper, we discuss how the latest evaluation metrics of APR systems could be biased. Since design decisions (both in approach and evaluation setup) are not always fully disclosed, the impact on repair performance is unknown and computed metrics are often misleading. To reduce notable biases of design decisions in program repair approaches, we conduct a critical review on the evaluation of patch generation systems and propose eight evaluation metrics for fairly assessing the performance of APR tools. Eventually, we show with experimental data on 11 baseline program repair systems that the proposed metrics allow to highlight some caveats in the literature. We expect wide adoption of these metrics in the community to contribute to boosting the development of practical, and reliably performable program repair tools.}
	}
	
	@INPROCEEDINGS {10638555,
		author = {H. Ruan and H. Nguyen and R. Shariffdeen and Y. Noller and A. Roychoudhury},
		booktitle = {2024 IEEE Conference on Software Testing, Verification and Validation (ICST)},
		title = {Evolutionary Testing for Program Repair},
		year = {2024},
		volume = {},
		issn = {2159-4848},
		pages = {105-116},
		abstract = {Automated program repair (APR) allows for au-tonomous software protection and improvement. Many proposed repair techniques rely on available test suites, since tests are available in real-world settings. Tests are incomplete specifications, however. As a result, repairs generated based on tests may suffer from the test overfitting problem. The patches produced by APR techniques may pass the given tests and thus be plausible, and yet be an incorrect patch. This hints towards more extensive test suites to guide program repair. Generating additional tests to improve the test suite quality is generally difficult because the oracle or expected observable behavior of the generated tests is unknown. In our work, we first construct additional oracles by instrumenting buggy programs from the Defects4j benchmark with the knowledge obtained from the available bug reports. Then, we formulate a coevolution approach that generates tests and repairs in a unified workflow. The complete workflow is implemented as an extension of the well-known Java testing framework Evosuite. This includes re-purposing the search in Evosuite to search for repairs (instead of searching for tests) and enables an easy adoption for developers who are already familiar with Evosuite for test suite generation. The evaluation of our tool EvoREPAIR shows that coevolution positively impacts the quality of patches and tests. In the future, we hope that such coevolution can inspire new repair tools and techniques.},
		keywords = {software testing;java;software protection;instruments;computer bugs;maintenance engineering;software},
		doi = {10.1109/ICST60714.2024.00058},
		url = {https://doi.ieeecomputersociety.org/10.1109/ICST60714.2024.00058},
		publisher = {IEEE Computer Society},
		address = {Los Alamitos, CA, USA},
		month = {may}
	}
	@article{roziere2021leveraging,
		title={Leveraging automated unit tests for unsupervised code translation},
		author={Roziere, Baptiste and Zhang, Jie M and Charton, Francois and Harman, Mark and Synnaeve, Gabriel and Lample, Guillaume},
		journal={arXiv preprint arXiv:2110.06773},
		year={2021}
	}
	
	@inproceedings{soares2009generating,
		title={Generating unit tests for checking refactoring safety},
		author={Soares, Gustavo and Gheyi, Rohit and Massoni, Tiago and Corn{\'e}lio, M{\'a}rcio and Cavalcanti, Diego},
		booktitle={Brazilian Symposium on Programming Languages},
		volume={1175},
		pages={159--172},
		year={2009}
	}
	@phdthesis{10.5555/169783,
		author = {Opdyke, William F.},
		title = {Refactoring object-oriented frameworks},
		year = {1992},
		publisher = {University of Illinois at Urbana-Champaign},
		address = {USA},
		abstract = {This thesis defines a set of program restructuring operations (refactorings) that support the design, evolution and reuse of object-oriented application frameworks. The focus of the thesis is on automating the refactorings in a way that preserves the behavior of a program. The refactorings are defined to be behavior preserving, provided that their preconditions are met. Most of the refactorings are simple to implement and it is almost trivial to show that they are behavior preserving. However, for a few refactorings, one or more of their preconditions are in general undecidable. Fortunately, for some cases it can be determined whether these refactorings can be applied safely.Three of the most complex refactorings are defined in detail: generalizing the inheritance hierarchy, specializing the inheritance hierarchy and using aggregations to model the relationships among classes. These operations are decomposed into more primitive parts, and the power of these operations is discussed from the perspectives of automatability and usefulness in supporting design.Two design constraints needed in refactoring are class invariants and exclusive components. These constraints are needed to ensure that behavior is preserved across some refactorings. This thesis gives some conservative algorithms for determining whether a program satisfies these constraints, and describes how to use this design information to refactor a program.},
		note = {UMI Order No. GAX93-05645}
	}
	
	
	@INPROCEEDINGS{9425945,
		author={Wang, Sinan and Wen, Ming and Liu, Yepang and Wang, Ying and Wu, Rongxin},
		booktitle={2021 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)}, 
		title={Understanding and Facilitating the Co-Evolution of Production and Test Code}, 
		year={2021},
		volume={},
		number={},
		pages={272-283},
		keywords={Java;Conferences;Semantics;Production;Machine learning;Syntactics;Feature extraction;Software evolution;test maintenance;mining software repositories},
		doi={10.1109/SANER50967.2021.00033}}
	
	@article{ZHANG201312,
		title = {Formalization and Verification of Behavioral Correctness of Dynamic Software Updates},
		journal = {Electronic Notes in Theoretical Computer Science},
		volume = {294},
		pages = {12-23},
		year = {2013},
		note = {Proceedings of the 2013 Validation Strategies for Software Evolution (VSSE) Workshop},
		issn = {1571-0661},
		doi = {https://doi.org/10.1016/j.entcs.2013.02.013},
		url = {https://www.sciencedirect.com/science/article/pii/S1571066113000157},
		author = {Min Zhang and Kazuhiro Ogata and Kokichi Futatsugi},
		keywords = {dynamic software updating, algebraic specification, verification, behavioral property},
		abstract = {Dynamic Software Updating (DSU) is a technique of updating running software systems on-the-fly. Whereas there are some studies on the correctness of dynamic updating, they focus on how to deploy updates correctly at the code level, e.g., if procedures refer to the data of correct types. However, little attention has been paid to the correctness of the dynamic updating at the behavior level, e.g., if systems after being updated behave as expected, and if unexpected behaviors can never occur. We present an algebraic methodology of specifying dynamic updates and verifying their behavioral correctness by using off-the-shelf theorem proving and model checking tools. By theorem proving we can show that systems after being updated indeed satisfy their desired properties, and by model checking we can detect potential errors. Our methodology is general in that: (1) it can be applied to three updating models that are mainly used in current DSU systems; and (2) it is not restricted to dynamic updates for certain programming models.}
	}
	@article{LIU2021110817,
		title = {A critical review on the evaluation of automated program repair systems},
		journal = {Journal of Systems and Software},
		volume = {171},
		pages = {110817},
		year = {2021},
		issn = {0164-1212},
		doi = {https://doi.org/10.1016/j.jss.2020.110817},
		url = {https://www.sciencedirect.com/science/article/pii/S0164121220302156},
		author = {Kui Liu and Li Li and Anil Koyuncu and Dongsun Kim and Zhe Liu and Jacques Klein and Tegawendé F. Bissyandé},
		keywords = {Automated program repair, Evaluation, Assessment, Metrics},
		abstract = {Automated Program Repair (APR) has attracted significant attention from software engineering research and practice communities in the last decade. Several teams have recorded promising performance in fixing real bugs and there is a race in the literature to fix as many bugs as possible from established benchmarks. Gradually, repair performance of APR tools in the literature has gone from being evaluated with a metric on the number of generated plausible patches to the number of correct patches. This evolution is necessary after a study highlighting the overfitting issue in test suite-based automatic patch generation. Simultaneously, some researchers are also insisting on providing time cost in the repair scenario as a metric for comparing state-of-the-art systems. In this paper, we discuss how the latest evaluation metrics of APR systems could be biased. Since design decisions (both in approach and evaluation setup) are not always fully disclosed, the impact on repair performance is unknown and computed metrics are often misleading. To reduce notable biases of design decisions in program repair approaches, we conduct a critical review on the evaluation of patch generation systems and propose eight evaluation metrics for fairly assessing the performance of APR tools. Eventually, we show with experimental data on 11 baseline program repair systems that the proposed metrics allow to highlight some caveats in the literature. We expect wide adoption of these metrics in the community to contribute to boosting the development of practical, and reliably performable program repair tools.}
	}
	
	@INPROCEEDINGS{8612557,
		author={Qi, Yuhua and Liu, Wenhong and Zhang, Weixiang and Yang, Deheng},
		booktitle={2018 5th International Conference on Information Science and Control Engineering (ICISCE)}, 
		title={How to Measure the Performance of Automated Program Repair}, 
		year={2018},
		volume={},
		number={},
		pages={246-250},
		keywords={Maintenance engineering;Measurement;Debugging;Computer bugs;Benchmark testing;Tools;Software engineering;program repair, evaluation metric, evaluation},
		doi={10.1109/ICISCE.2018.00059}}
	
	@INPROCEEDINGS{7816501,
		author={Wahler, Michael and Drofenik, Uwe and Snipes, Will},
		booktitle={2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
		title={Improving Code Maintainability: A Case Study on the Impact of Refactoring}, 
		year={2016},
		volume={},
		number={},
		pages={493-501},
		keywords={Software;Magnetics;Graphical user interfaces;Windings;Complexity theory;Software engineering;Java},
		doi={10.1109/ICSME.2016.52}}
		
		@article{DASILVA2024112070,
			title = {Detecting semantic conflicts with unit tests},
			journal = {Journal of Systems and Software},
			volume = {214},
			pages = {112070},
			year = {2024},
			issn = {0164-1212},
			doi = {https://doi.org/10.1016/j.jss.2024.112070},
			url = {https://www.sciencedirect.com/science/article/pii/S0164121224001158},
			author = {Léuson {Da Silva} and Paulo Borba and Toni Maciel and Wardah Mahmood and Thorsten Berger and João Moisakis and Aldiberg Gomes and Vinícius Leite},
			keywords = {Semantic conflicts, Differential testing, Behavior change},
			abstract = {While modern merge techniques, such as 3-way and structured merge, can resolve textual conflicts automatically, they fail when the conflict arises not at the syntactic, but at the semantic level. Detecting such semantic conflicts requires understanding the behavior of the software, which is beyond the capabilities of most existing merge tools. Although semantic merge tools have been proposed, they are usually based on heavyweight static analyses, or need explicit specifications of program behavior. In this work, we take a different route and propose SAM (SemAntic Merge), a semantic merge tool based on the automated generation of unit tests that are used as partial specifications of the changes to be merged, and that drive the detection of unwanted behavior changes (conflicts) when merging software. To evaluate SAM’s feasibility for detecting conflicts, we perform an empirical study relying on a dataset of more than 80 pairs of changes integrated to common class elements (constructors, methods, and fields) from 51 merge scenarios. We also assess how the four unit test generation tools used by SAM individually contribute to conflict identification. Our results show that SAM performs best when combining only the tests generated by Differential EvoSuite and EvoSuite, and using our proposed testability transformations (nine detected conflicts out of 29). These results reinforce previous findings about the potential of using test-case generation to detect conflicts as a method that is versatile and requires only limited deployment effort in practice.}
		}
		
		@article{hemberg2024evolving,
			title={Evolving code with a large language model},
			author={Hemberg, Erik and Moskal, Stephen and O’Reilly, Una-May},
			journal={Genetic Programming and Evolvable Machines},
			volume={25},
			number={2},
			pages={21},
			year={2024},
			publisher={Springer}
		}
		@article{sadik2023analysis,
			title={Analysis of ChatGPT on source code},
			author={Sadik, Ahmed R and Ceravola, Antonello and Joublin, Frank and Patra, Jibesh},
			journal={arXiv preprint arXiv:2306.00597},
			year={2023}
		}
	
	@article{sridhara2023chatgpt,
		title={Chatgpt: A study on its utility for ubiquitous software engineering tasks},
		author={Sridhara, Giriprasad and Mazumdar, Sourav and others},
		journal={arXiv preprint arXiv:2305.16837},
		year={2023}
	}
	@inproceedings{10.1145/2950290.2950305,
		author = {Silva, Danilo and Tsantalis, Nikolaos and Valente, Marco Tulio},
		title = {Why we refactor? confessions of GitHub contributors},
		year = {2016},
		isbn = {9781450342186},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/2950290.2950305},
		doi = {10.1145/2950290.2950305},
		abstract = {Refactoring is a widespread practice that helps developers to improve the maintainability and readability of their code. However, there is a limited number of studies empirically investigating the actual motivations behind specific refactoring operations applied by developers. To fill this gap, we monitored Java projects hosted on GitHub to detect recently applied refactorings, and asked the developers to explain the reasons behind their decision to refactor the code. By applying thematic analysis on the collected responses, we compiled a catalogue of 44 distinct motivations for 12 well-known refactoring types. We found that refactoring activity is mainly driven by changes in the requirements and much less by code smells. Extract Method is the most versatile refactoring operation serving 11 different purposes. Finally, we found evidence that the IDE used by the developers affects the adoption of automated refactoring tools.},
		booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
		pages = {858–870},
		numpages = {13},
		keywords = {software evolution, code smells, Refactoring, GitHub},
		location = {Seattle, WA, USA},
		series = {FSE 2016}
	}
	@Inbook{White2024,
		author="White, Jules
		and Hays, Sam
		and Fu, Quchen
		and Spencer-Smith, Jesse
		and Schmidt, Douglas C.",
		editor="Nguyen-Duc, Anh
		and Abrahamsson, Pekka
		and Khomh, Foutse",
		title="ChatGPT Prompt Patterns for Improving Code Quality, Refactoring, Requirements Elicitation, and Software Design",
		bookTitle="Generative AI for Effective Software Development",
		year="2024",
		publisher="Springer Nature Switzerland",
		address="Cham",
		pages="71--108",
		abstract="This chapter presents design techniques for software engineering, in the form of prompt patterns, to solve common problems that arise when using large language models (LLMs) to automate common software engineering activities, such as ensuring code is decoupled from third-party libraries and creating API specifications from lists of requirements. This chapter provides two contributions to research on using LLMs for software engineering. First, it provides a catalog of patterns for software engineering that classifies patterns according to the types of problems they solve. Second, it explores several prompt patterns that have been applied to improve requirements elicitation, rapid prototyping, code quality, deployment, and testing.",
		isbn="978-3-031-55642-5",
		doi="10.1007/978-3-031-55642-5_4",
		url="https://doi.org/10.1007/978-3-031-55642-5_4"
	}
	
	%client side  for the survey 
	@inproceedings{10.1145/2393596.2393662,
		author = {Robbes, Romain and Lungu, Mircea and R\"{o}thlisberger, David},
		title = {How do developers react to API deprecation? the case of a smalltalk ecosystem},
		year = {2012},
		isbn = {9781450316149},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/2393596.2393662},
		doi = {10.1145/2393596.2393662},
		abstract = {When the Application Programming Interface (API) of a framework or library changes, its clients must be adapted. This change propagation---known as a ripple effect---is a problem that has garnered interest: several approaches have been proposed in the literature to react to these changes.Although studies of ripple effects exist at the single system level, no study has been performed on the actual extent and impact of these API changes in practice, on an entire software ecosystem associated with a community of developers. This paper reports on an empirical study of API deprecations that led to ripple effects across an entire ecosystem. Our case study subject is the development community gravitating around the Squeak and Pharo software ecosystems: seven years of evolution, more than 3,000 contributors, and more than 2,600 distinct systems. We analyzed 577 methods and 186 classes that were deprecated, and answer research questions regarding the frequency, magnitude, duration, adaptation, and consistency of the ripple effects triggered by API changes.},
		booktitle = {Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
		articleno = {56},
		numpages = {11},
		keywords = {ecosystems, empirical studies, mining software repositories},
		location = {Cary, North Carolina},
		series = {FSE '12}
	}
	%7332471
	@INPROCEEDINGS{7816485,
		author={Sawant, Anand Ashok and Robbes, Romain and Bacchelli, Alberto},
		booktitle={2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
		title={On the Reaction to Deprecation of 25,357 Clients of 4+1 Popular Java APIs}, 
		year={2016},
		volume={},
		number={},
		pages={400-410},
		keywords={Java;Ecosystems;History;Programming;Software;Libraries;Documentation;API;deprecation;mining software repositories},
		doi={10.1109/ICSME.2016.64}}
	
	@INPROCEEDINGS{7884616,
		author={Xavier, Laerte and Brito, Aline and Hora, Andre and Valente, Marco Tulio},
		booktitle={2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)}, 
		title={Historical and impact analysis of API breaking changes: A large-scale study}, 
		year={2017},
		volume={},
		number={},
		pages={138-147},
		keywords={Libraries;Java;Time-frequency analysis;Contracts;Software;Maintenance engineering;Software Evolution;API Usage;API Stability;Backwards Compatibility},
		doi={10.1109/SANER.2017.7884616}}
	@article{10.1007/s11219-016-9344-4,
		author = {Hora, Andr\'{e} and Robbes, Romain and Valente, Marco Tulio and Anquetil, Nicolas and Etien, Anne and Ducasse, St\'{e}phane},
		title = {How do developers react to API evolution? A large-scale empirical study},
		year = {2018},
		issue_date = {March     2018},
		publisher = {Kluwer Academic Publishers},
		address = {USA},
		volume = {26},
		number = {1},
		issn = {0963-9314},
		url = {https://doi.org/10.1007/s11219-016-9344-4},
		doi = {10.1007/s11219-016-9344-4},
		abstract = {Software engineering research now considers that no system is an island, but it is part of an ecosystem involving other systems, developers, and users. When a framework or a library evolves, its clients often must adapt. For example, client developers might need to adapt to functionalities, client systems might need to be adapted to a new API, and client users might need to adapt to a new user interface. The consequences of these changes are yet unclear: what proportion of the ecosystem might be expected to react, how long might it take for a change to diffuse in the ecosystem, do all clients react in the same way? This paper reports an exploratory study aimed at observing API evolution and its impact on a large software ecosystem, Pharo, which has about 3600 distinct systems, and 6 years of evolution. We analyze 118 API changes in the context of method replacement and suggestion, and answer research questions regarding the magnitude, duration, extension, and consistency of such changes in the ecosystem. The results of this study help to characterize the impact of API evolution in large software ecosystems and provide the basis to better understand how such impact can be alleviated.},
		journal = {Software Quality Journal},
		month = mar,
		pages = {161–191},
		numpages = {31},
		keywords = {API deprecation, API evolution, Empirical study, Software ecosystem}
	}
	@article{10.1007/s10664-017-9521-5,
		author = {Kula, Raula Gaikovina and German, Daniel M. and Ouni, Ali and Ishio, Takashi and Inoue, Katsuro},
		title = {Do developers update their library dependencies?},
		year = {2018},
		issue_date = {February  2018},
		publisher = {Kluwer Academic Publishers},
		address = {USA},
		volume = {23},
		number = {1},
		issn = {1382-3256},
		url = {https://doi.org/10.1007/s10664-017-9521-5},
		doi = {10.1007/s10664-017-9521-5},
		abstract = {Third-party library reuse has become common practice in contemporary software development, as it includes several benefits for developers. Library dependencies are constantly evolving, with newly added features and patches that fix bugs in older versions. To take full advantage of third-party reuse, developers should always keep up to date with the latest versions of their library dependencies. In this paper, we investigate the extent of which developers update their library dependencies. Specifically, we conducted an empirical study on library migration that covers over 4,600 GitHub software projects and 2,700 library dependencies. Results show that although many of these systems rely heavily on dependencies, 81.5\% of the studied systems still keep their outdated dependencies. In the case of updating a vulnerable dependency, the study reveals that affected developers are not likely to respond to a security advisory. Surveying these developers, we find that 69\% of the interviewees claimed to be unaware of their vulnerable dependencies. Moreover, developers are not likely to prioritize a library update, as it is perceived to be extra workload and responsibility. This study concludes that even though third-party reuse is common practice, updating a dependency is not as common for many developers.},
		journal = {Empirical Softw. Engg.},
		month = feb,
		pages = {384–417},
		numpages = {34},
		keywords = {Software reuse, Software maintenance, Security vulnerabilities}
	}
	
	%lib side
	@article{10.1016/j.infsof.2017.09.007,
		author = {Kula, Raula Gaikovina and Ouni, Ali and German, Daniel M. and Inoue, Katsuro},
		title = {An empirical study on the impact of refactoring activities on evolving client-used APIs},
		year = {2018},
		issue_date = {January 2018},
		publisher = {Butterworth-Heinemann},
		address = {USA},
		volume = {93},
		number = {C},
		issn = {0950-5849},
		url = {https://doi.org/10.1016/j.infsof.2017.09.007},
		doi = {10.1016/j.infsof.2017.09.007},
		abstract = {ContextRefactoring is recognized as an effective practice to maintain evolving software systems. For software libraries, we study how library developers refactor their Application Programming Interfaces (APIs), especially when it impacts client users by breaking an API of the library. ObjectiveOur work aims to understand how clients that use a library API are affected by refactoring activities. We target popular libraries that potentially impact more library client users. MethodWe distinguish between library APIs based on their client-usage (referred to as client-used APIs) in order to understand the extent to which API breakages relate to refactorings. Our tool-based approach allows for a large-scale study across eight libraries (i.e.,totaling 183 consecutive versions) with around 900 clients projects. ResultsWe find that library maintainers are less likely to break client-used API classes. Quantitatively, we find that refactoring activities break less than 37\% of all client-used APIs. In a more qualitative analysis, we show two documented cases of where non-refactoring API breaking changes are motivated other maintenance issues (i.e., bug fix and new features) and involve more complex refactoring operations. ConclusionUsing our automated approach, we find that library developers are less likely to break APIs and tend to break client-used APIs when performing maintenance issues.},
		journal = {Inf. Softw. Technol.},
		month = jan,
		pages = {186–199},
		numpages = {14},
		keywords = {API Breakages, Refactoring, Software evolution, Software libraries}
	}
	%both 
	@article{10.1016/j.infsof.2015.02.014,
		author = {Jezek, Kamil and Dietrich, Jens and Brada, Premek},
		title = {How Java APIs break - An empirical study},
		year = {2015},
		issue_date = {September 2015},
		publisher = {Butterworth-Heinemann},
		address = {USA},
		volume = {65},
		number = {C},
		issn = {0950-5849},
		url = {https://doi.org/10.1016/j.infsof.2015.02.014},
		doi = {10.1016/j.infsof.2015.02.014},
		abstract = {ContextIt has become common practice to build programs by using libraries. While the benefits of reuse are well known, an often overlooked risk are system runtime failures due to API changes in libraries that evolve independently. Traditionally, the consistency between a program and the libraries it uses is checked at build time when the entire system is compiled and tested. However, the trend towards partially upgrading systems by redeploying only evolved library versions results in situations where these crucial verification steps are skipped. For Java programs, partial upgrades create additional interesting problems as the compiler and the virtual machine use different rule sets to enforce contracts between the providers and the consumers of APIs. ObjectiveWe have studied the extent of the problem in real world programs. We were interested in two aspects: the compatibility of API changes as libraries evolve, and the impact this has on programs using these libraries. MethodThis study is based on the qualitas corpus version 20120401. A data set consisting of 109 Java open-source programs and 564 program versions was used from this corpus. We have investigated two types of library dependencies: explicit dependencies to embedded libraries, and dependencies defined by symbolic references in Maven build files that are resolved at build time. We have used JaCC for API analysis, this tool is based on the popular ASM byte code analysis library. ResultsWe found that for most of the programs we investigated, APIs are unstable as incompatible changes are common. Surprisingly, there are more compatibility problems in projects that use automated dependency resolution. However, we found only a few cases where this has an actual impact on other programs using such an API. ConclusionIt is concluded that API instability is common and causes problems for programs using these APIs. Therefore, better tools and methods are needed to safeguard library evolution.},
		journal = {Inf. Softw. Technol.},
		month = sep,
		pages = {129–146},
		numpages = {18},
		keywords = {API evolution, Backward compatibility, Binary compatibility, Byte-code, Java}
	}
	@phdthesis{zaytsev:tel-03998632,
		TITLE = {{Data Mining-based tools to support library update}},
		AUTHOR = {Zaytsev, Oleksandr},
		URL = {https://theses.hal.science/tel-03998632},
		NUMBER = {2022ULILB028},
		SCHOOL = {{Universit{\'e} de Lille}},
		YEAR = {2022},
		MONTH = Oct,
		KEYWORDS = {Software Evolution ; Library Update ; Library Migration ; Data Mining ; Artificial Intelligence ; Software Engineering ; {\'E}volution Logicielle ; Mise {\`a} jour des biblioth{\`e}ques},
		TYPE = {Theses},
		PDF = {https://theses.hal.science/tel-03998632v1/file/These_ZAYTSEV_Oleksandr.pdf},
		HAL_ID = {tel-03998632},
		HAL_VERSION = {v1},
	}
	@inproceedings{10.1145/3092703.3092721,
		author = {Mostafa, Shaikh and Rodriguez, Rodney and Wang, Xiaoyin},
		title = {Experience paper: a study on behavioral backward incompatibilities of Java software libraries},
		year = {2017},
		isbn = {9781450350761},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/3092703.3092721},
		doi = {10.1145/3092703.3092721},
		abstract = {Nowadays, due to the frequent technological innovation and market changes, software libraries are evolving very quickly. Backward compatibility has always been one of the most important requirements during the evolution of software platforms and libraries. However, backward compatibility is seldom fully achieved in practice, and many relevant software failures are reported. Therefore, it is important to understand the status, major reasons, and impact of backward incompatibilities in real world software. This paper presents an empirical study to understand behavioral changes of APIs during evolution of software libraries. Specifically, we performed a large-scale cross-version regression testing on 68 consecutive version pairs from 15 popular Java software libraries. Furthermore, we collected and studied 126 real-world software bugs reports on backward incompatibilities of software libraries. Our major findings include: (1) 1,094 test failures / errors and 296 behavioral backward incompatibilities are detected from 52 of 68 consecutive version pairs; (2) there is a distribution mismatch between incompatibilities detected by library-side regression testing, and bug-inducing incompatibilities; (3) the majority of behavioral backward incompatibilities are not well documented in API documents or release notes; and (4) 67\% of fixed client bugs caused by backward incompatibilities in software libraries are fixed by client developers, through several simple change patterns made to the backward incompatible API invocation.},
		booktitle = {Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis},
		pages = {215–225},
		numpages = {11},
		keywords = {Library Evolution, Behavioral Backward Incompatibilities},
		location = {Santa Barbara, CA, USA},
		series = {ISSTA 2017}
	}
	
	% APR
	@inproceedings{10.1109/ICSE48619.2023.00129,
		author = {Xia, Chunqiu Steven and Wei, Yuxiang and Zhang, Lingming},
		title = {Automated Program Repair in the Era of Large Pre-Trained Language Models},
		year = {2023},
		isbn = {9781665457019},
		publisher = {IEEE Press},
		url = {https://doi.org/10.1109/ICSE48619.2023.00129},
		doi = {10.1109/ICSE48619.2023.00129},
		abstract = {Automated Program Repair (APR) aims to help developers automatically patch software bugs. However, current state-of-the-art traditional and learning-based APR techniques face the problem of limited patch variety, failing to fix complicated bugs. This is mainly due to the reliance on bug-fixing datasets to craft fix templates (traditional) or directly predict potential patches (learning-based). Large Pre-Trained Language Models (LLMs), trained using billions of text/code tokens, can potentially help avoid this issue. Very recently, researchers have directly leveraged LLMs for APR without relying on any bug-fixing datasets. Meanwhile, such existing work either failed to include state-of-the-art LLMs or was not evaluated on realistic datasets. Thus, the true power of modern LLMs on the important APR problem is yet to be revealed.In this work, we perform the first extensive study on directly applying LLMs for APR. We select 9 recent state-of-the-art LLMs, including both generative and infilling models, ranging from 125M to 20B in size. We designed 3 different repair settings to evaluate the different ways we can use LLMs to generate patches: 1) generate the entire patch function, 2) fill in a chunk of code given the prefix and suffix 3) output a single line fix. We apply the LLMs under these repair settings on 5 datasets across 3 different languages and compare different LLMs in the number of bugs fixed, generation speed and compilation rate. We also compare the LLMs against recent state-of-the-art APR tools. Our study demonstrates that directly applying state-of-the-art LLMs can already substantially outperform all existing APR techniques on all our datasets. Among the studied LLMs, the scaling effect exists for APR where larger models tend to achieve better performance. Also, we show for the first time that suffix code after the buggy line (adopted in infilling-style APR) is important in not only generating more fixes but more patches with higher compilation rate. Besides patch generation, the LLMs consider correct patches to be more natural than other ones, and can even be leveraged for effective patch ranking or patch correctness checking. Lastly, we show that LLM-based APR can be further substantially boosted via: 1) increasing the sample size, and 2) incorporating fix template information.},
		booktitle = {Proceedings of the 45th International Conference on Software Engineering},
		pages = {1482–1494},
		numpages = {13},
		location = {Melbourne, Victoria, Australia},
		series = {ICSE '23}
	}
	@inproceedings{10.1145/3650212.3680323,
		author = {Xia, Chunqiu Steven and Zhang, Lingming},
		title = {Automated Program Repair via Conversation: Fixing 162 out of 337 Bugs for $0.42 Each using ChatGPT},
		year = {2024},
		isbn = {9798400706127},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/3650212.3680323},
		doi = {10.1145/3650212.3680323},
		abstract = {Automated Program Repair (APR) aims to automatically generate patches for buggy programs. Traditional APR techniques suffer from a lack of patch variety as they rely heavily on handcrafted or mined bug fixing patterns and cannot easily generalize to other bug/fix types. To address this limitation, recent APR work has been focused on leveraging modern Large Language Models (LLMs) to directly generate patches for APR. Such LLM-based APR tools work by first constructing an input prompt built using the original buggy code and then querying the LLM to either fill-in (cloze-style APR) the correct code at the bug location or to produce a completely new code snippet as the patch. While the LLM-based APR tools are able to achieve state-of-the-art results, they still follow the classic Generate and Validate (GV) repair paradigm of first generating lots of patches by sampling from the same initial prompt and then validating each one afterwards. This not only leads to many repeated patches that are incorrect, but also misses the crucial and yet previously ignored information in test failures as well as in plausible patches.        To address these aforementioned limitations, we propose ChatRepair, the first fully automated conversation-driven APR approach that interleaves patch generation with instant feedback to perform APR in a conversational style. ChatRepair first feeds the LLM with relevant test failure information to start with, and then learns from both failures and successes of earlier patching attempts of the same bug for more powerful APR. For earlier patches that failed to pass all tests, we combine the incorrect patches with their corresponding relevant test failure information to construct a new prompt for the LLM to generate the next patch. In this way, we can avoid making the same    mistakes. For earlier patches that passed all the tests (i.e., plausible patches), we further ask the LLM to generate alternative variations of the original plausible patches. In this way, we can further build on and learn from earlier successes to generate more plausible patches to increase the chance of having correct patches. While our approach is general, we implement ChatRepair using state-of-the-art dialogue-based LLM  ChatGPT. Our evaluation on the widely studied Defects4j dataset shows that ChatRepair is able to achieve the new state-of-the-art in repair performance, achieving 114 and 48 correct fixes on Defects4j 1.2 and 2.0 respectively. By calculating the cost    of accessing ChatGPT, we can fix 162 out of 337 bugs for 0.42 each!},
		booktitle = {Proceedings of the 33rd ACM SIGSOFT International Symposium on Software Testing and Analysis},
		pages = {819–831},
		numpages = {13},
		keywords = {Automated Program Repair, Large Language Model},
		location = {Vienna, Austria},
		series = {ISSTA 2024}
	}
	@ARTICLE{9749899,
		author={Chen, Liushan and Pei, Yu and Pan, Minxue and Zhang, Tian and Wang, Qixin and Furia, Carlo A.},
		journal={IEEE Transactions on Software Engineering}, 
		title={Program Repair With Repeated Learning}, 
		year={2023},
		volume={49},
		number={2},
		pages={831-848},
		keywords={Java;Fitting;Computer bugs;Machine learning;Maintenance engineering;Benchmark testing;Context modeling;Automated program repair (APR);generate-and-validate APR;learning-to-rank;repeated learning},
		doi={10.1109/TSE.2022.3164662}}
	@inproceedings{zhang2024copilot,
		title={Copilot-in-the-Loop: Fixing Code Smells in Copilot-Generated Python Code using Copilot},
		author={Zhang, Beiqi and Liang, Peng and Feng, Qiong and Fu, Yujia and Li, Zengyang},
		booktitle={Proceedings of the 39th IEEE/ACM International Conference on Automated Software Engineering},
		pages={2230--2234},
		year={2024}
	}
	@article{DIROCCO2025107588,
		title = {DeepMig: A transformer-based approach to support coupled library and code migrations},
		journal = {Information and Software Technology},
		volume = {177},
		pages = {107588},
		year = {2025},
		issn = {0950-5849},
		doi = {https://doi.org/10.1016/j.infsof.2024.107588},
		url = {https://www.sciencedirect.com/science/article/pii/S0950584924001939},
		author = {Juri {Di Rocco} and Phuong T. Nguyen and Claudio {Di Sipio} and Riccardo Rubei and Davide {Di Ruscio} and Massimiliano {Di Penta}},
		keywords = {Recommender system, Library migration, Transformers},
		abstract = {Context:
		While working on software projects, developers often replace third-party libraries (TPLs) with different ones offering similar functionalities. However, choosing a suitable TPL to migrate to is a complex task. As TPLs provide developers with Application Programming Interfaces (APIs) to allow for the invocation of their functionalities after adopting a new TPL, projects need to be migrated by the methods containing the affected API calls. Altogether, the coupled migration of TPLs and code is a strenuous process, requiring massive development effort. Most of the existing approaches either deal with library or API call migration but usually fail to solve both problems coherently simultaneously.
		Objective:
		This paper presents DeepMig, a novel approach to the coupled migration of TPLs and API calls. We aim to support developers in managing their projects, at the library and API level, allowing them to increase their productivity.
		Methods:
		DeepMig is based on a transformer architecture, accepts a set of libraries to predict a new set of libraries. Then, it looks for the changed API calls and recommends a migration plan for the affected methods. We evaluate DeepMig using datasets of Java projects collected from the Maven Central Repository, ensuring an assessment based on real-world dependency configurations.
		Results:
		Our evaluation reveals promising outcomes: DeepMig recommends both libraries and code; by several projects, it retrieves a perfect match for the recommended items, obtaining an accuracy of 1.0. Moreover, being fed with proper training data, DeepMig provides comparable code migration steps of a static API migrator, a baseline for the code migration task.
		Conclusion:
		We conclude that DeepMig is capable of recommending both TPL and API migration, providing developers with a practical tool to migrate the entire project.}
	}
	@article{10.1007/s10270-012-0313-5,
		author = {Levendovszky, Tihamer and Balasubramanian, Daniel and Narayanan, Anantha and Shi, Feng and Buskirk, Chris and Karsai, Gabor},
		title = {A semi-formal description of migrating domain-specific models with evolving domains},
		year = {2014},
		issue_date = {May       2014},
		publisher = {Springer-Verlag},
		address = {Berlin, Heidelberg},
		volume = {13},
		number = {2},
		issn = {1619-1366},
		url = {https://doi.org/10.1007/s10270-012-0313-5},
		doi = {10.1007/s10270-012-0313-5},
		abstract = {One of the main advantages of defining a domain-specific modeling language (DSML) is the flexibility to adjust the language definition to changing requirements or in response to a deeper understanding of the domain. With the industrial applications of domain-specific modeling environments, models are valuable investments. If the modeling language evolves, these models must be seamlessly migrated to the evolved DSML. Although the changes stemming from the language evolution are not abrupt in nature, migrating existing models to a new language is still a challenging task. Our solution is the Model Change Language (MCL) tool set, which defines a DSML to describe the migration rules and then performs the model migration automatically. In this paper, we describe the precise semantics of MCL and its execution, along with the confluence of the migration.},
		journal = {Softw. Syst. Model.},
		month = may,
		pages = {807–823},
		numpages = {17}
	}
	@inproceedings{pearce2022asleep,
		title={Asleep at the keyboard? assessing the security of github copilot’s code contributions},
		author={Pearce, Hammond and Ahmad, Baleegh and Tan, Benjamin and Dolan-Gavitt, Brendan and Karri, Ramesh},
		booktitle={2022 IEEE Symposium on Security and Privacy (SP)},
		pages={754--768},
		year={2022},
		organization={IEEE}
	}
	
	@inproceedings{nguyen2022empirical,
		title={An empirical evaluation of GitHub copilot's code suggestions},
		author={Nguyen, Nhan and Nadi, Sarah},
		booktitle={The 19th International Conference on Mining Software Repositories},
		pages={1--5},
		year={2022}
	}
	
	@inproceedings{nathalia2023artificial,
		title={Artificial Intelligence vs. Software Engineers: An Empirical Study on Performance and Efficiency using ChatGPT},
		author={Nathalia, Nascimento and Paulo, Alencar and Donald, Cowan},
		booktitle={The 33rd Annual International Conference on Computer Science and Software Engineering},
		pages={24--33},
		year={2023}
	}
	
	@article{yeticstiren2023evaluating,
		title={Evaluating the Code Quality of AI-Assisted Code Generation Tools: An Empirical Study on GitHub Copilot, Amazon CodeWhisperer, and ChatGPT},
		author={Yeti{\c{s}}tiren, Burak and {\"O}zsoy, I{\c{s}}{\i}k and Ayerdem, Miray and T{\"u}z{\"u}n, Eray},
		journal={arXiv preprint arXiv:2304.10778},
		year={2023}
	}
	@article{doderlein2022piloting,
		title={Piloting Copilot and Codex: Hot Temperature, Cold Prompts, or Black Magic?},
		author={D{\"o}derlein, Jean-Baptiste and Acher, Mathieu and Khelladi, Djamel Eddine and Combemale, Benoit},
		journal={arXiv preprint arXiv:2210.14699},
		year={2022}
	}
	
	@article{yeticstiren2023evaluating,
		title={Evaluating the Code Quality of AI-Assisted Code Generation Tools: An Empirical Study on GitHub Copilot, Amazon CodeWhisperer, and ChatGPT},
		author={Yeti{\c{s}}tiren, Burak and {\"O}zsoy, I{\c{s}}{\i}k and Ayerdem, Miray and T{\"u}z{\"u}n, Eray},
		journal={arXiv preprint arXiv:2304.10778},
		year={2023}
	}
	
	@article{guo2023exploring,
		title={Exploring the Potential of ChatGPT in Automated Code Refinement: An Empirical Study},
		author={Guo, Qi and Cao, Junming and Xie, Xiaofei and Liu, Shangqing and Li, Xiaohong and Chen, Bihuan and Peng, Xin},
		journal={arXiv preprint arXiv:2309.08221},
		year={2023}
	}
	@INPROCEEDINGS{AbukhalafHK23,
		author={Abukhalaf, Seif and Hamdaqa, Mohammad and Khomh, Foutse},
		booktitle={2023 IEEE/ACM 20th International Conference on Mining Software Repositories (MSR)}, 
		title={On Codex Prompt Engineering for {OCL} Generation: An Empirical Study}, 
		year={2023},
		pages={148-157}
	}
	@article{jiang2023selfevolve,
		title={SelfEvolve: A Code Evolution Framework via Large Language Models},
		author={Jiang, Shuyang and Wang, Yuhao and Wang, Yu},
		journal={arXiv preprint arXiv:2306.02907},
		year={2023}
	}
	@inproceedings{sobania2022choose,
		title={Choose your programming copilot: A comparison of the program synthesis performance of github copilot and genetic programming},
		author={Sobania, Dominik and Briesch, Martin and Rothlauf, Franz},
		booktitle={Proceedings of the genetic and evolutionary computation conference},
		pages={1019--1027},
		year={2022}
	}
	
	@inproceedings{ziegler2022productivity,
		title={Productivity assessment of neural code completion},
		author={Ziegler, Albert and Kalliamvakou, Eirini and Li, X Alice and Rice, Andrew and Rifkin, Devon and Simister, Shawn and Sittampalam, Ganesh and Aftandilian, Edward},
		booktitle={ACM SIGPLAN International Symposium on Machine Programming},
		pages={21--29},
		year={2022}
	}
	
	@inproceedings{vaithilingam2022expectation,
		title={Expectation vs. experience: Evaluating the usability of code generation tools powered by large language models},
		author={Vaithilingam, Priyan and Zhang, Tianyi and Glassman, Elena L},
		booktitle={{Chi} conference on human factors in computing systems, extended abstracts},
		pages={1--7},
		year={2022}
	}
	@article{DBLP:journals/corr/abs-2302-09419,
		author       = {Ce Zhou and
		Qian Li and
		Chen Li and
		Jun Yu and
		Yixin Liu and
		Guangjing Wang and
		Kai Zhang and
		Cheng Ji and
		Qiben Yan and
		Lifang He and
		Hao Peng and
		Jianxin Li and
		Jia Wu and
		Ziwei Liu and
		Pengtao Xie and
		Caiming Xiong and
		Jian Pei and
		Philip S. Yu and
		Lichao Sun},
		title        = {A Comprehensive Survey on Pretrained Foundation Models: {A} History
		from {BERT} to ChatGPT},
		journal      = {CoRR},
		volume       = {abs/2302.09419},
		year         = {2023},
		url          = {https://doi.org/10.48550/arXiv.2302.09419},
		doi          = {10.48550/ARXIV.2302.09419},
		eprinttype    = {arXiv},
		eprint       = {2302.09419},
		timestamp    = {Mon, 29 Jul 2024 07:57:22 +0200},
		biburl       = {https://dblp.org/rec/journals/corr/abs-2302-09419.bib},
		bibsource    = {dblp computer science bibliography, https://dblp.org}
	}
	@misc{devlin2019bertpretrainingdeepbidirectional,
		title={BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding}, 
		author={Jacob Devlin and Ming-Wei Chang and Kenton Lee and Kristina Toutanova},
		year={2019},
		eprint={1810.04805},
		archivePrefix={arXiv},
		primaryClass={cs.CL},
		url={https://arxiv.org/abs/1810.04805}, 
	}
	
	
	@misc{brown2020languagemodelsfewshotlearners,
		title={Language Models are Few-Shot Learners}, 
		author={Tom B. Brown and Benjamin Mann and Nick Ryder and Melanie Subbiah and Jared Kaplan and Prafulla Dhariwal and Arvind Neelakantan and Pranav Shyam and Girish Sastry and Amanda Askell and Sandhini Agarwal and Ariel Herbert-Voss and Gretchen Krueger and Tom Henighan and Rewon Child and Aditya Ramesh and Daniel M. Ziegler and Jeffrey Wu and Clemens Winter and Christopher Hesse and Mark Chen and Eric Sigler and Mateusz Litwin and Scott Gray and Benjamin Chess and Jack Clark and Christopher Berner and Sam McCandlish and Alec Radford and Ilya Sutskever and Dario Amodei},
		year={2020},
		eprint={2005.14165},
		archivePrefix={arXiv},
		primaryClass={cs.CL},
		url={https://arxiv.org/abs/2005.14165}, 
	}
	@article{10.1145/3560815,
		author = {Liu, Pengfei and Yuan, Weizhe and Fu, Jinlan and Jiang, Zhengbao and Hayashi, Hiroaki and Neubig, Graham},
		title = {Pre-train, Prompt, and Predict: A Systematic Survey of Prompting Methods in Natural Language Processing},
		year = {2023},
		issue_date = {September 2023},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		volume = {55},
		number = {9},
		issn = {0360-0300},
		url = {https://doi.org/10.1145/3560815},
		doi = {10.1145/3560815},
		abstract = {This article surveys and organizes research works in a new paradigm in natural language processing, which we dub “prompt-based learning.” Unlike traditional supervised learning, which trains a model to take in an input x and predict an output y as P(y|x), prompt-based learning is based on language models that model the probability of text directly. To use these models to perform prediction tasks, the original input x is modified using a template into a textual string prompt x′ that has some unfilled slots, and then the language model is used to probabilistically fill the unfilled information to obtain a final string x̂, from which the final output y can be derived. This framework is powerful and attractive for a number of reasons: It allows the language model to be pre-trained on massive amounts of raw text, and by defining a new prompting function the model is able to perform few-shot or even zero-shot learning, adapting to new scenarios with few or no labeled data. In this article, we introduce the basics of this promising paradigm, describe a unified set of mathematical notations that can cover a wide variety of existing work, and organize existing work along several dimensions, e.g.,&nbsp;the choice of pre-trained language models, prompts, and tuning strategies. To make the field more accessible to interested beginners, we not only make a systematic review of existing works and a highly structured typology of prompt-based concepts but also release other resources, e.g., a website  including constantly updated survey and paperlist.},
		journal = {ACM Comput. Surv.},
		month = jan,
		articleno = {195},
		numpages = {35},
		keywords = {Pre-trained language models, prompting}
	}
	@inproceedings{10.5555/3600270.3602070,
		author = {Wei, Jason and Wang, Xuezhi and Schuurmans, Dale and Bosma, Maarten and Ichter, Brian and Xia, Fei and Chi, Ed H. and Le, Quoc V. and Zhou, Denny},
		title = {Chain-of-thought prompting elicits reasoning in large language models},
		year = {2024},
		isbn = {9781713871088},
		publisher = {Curran Associates Inc.},
		address = {Red Hook, NY, USA},
		abstract = {We explore how generating a chain of thought—a series of intermediate reasoning steps—significantly improves the ability of large language models to perform complex reasoning. In particular, we show how such reasoning abilities emerge naturally in sufficiently large language models via a simple method called chain-of-thought prompting, where a few chain of thought demonstrations are provided as exemplars in prompting.Experiments on three large language models show that chain-of-thought prompting improves performance on a range of arithmetic, commonsense, and symbolic reasoning tasks. The empirical gains can be striking. For instance, prompting a PaLM 540B with just eight chain-of-thought exemplars achieves state-of-the-art accuracy on the GSM8K benchmark of math word problems, surpassing even finetuned GPT-3 with a verifier.},
		booktitle = {Proceedings of the 36th International Conference on Neural Information Processing Systems},
		articleno = {1800},
		numpages = {14},
		location = {New Orleans, LA, USA},
		series = {NIPS '22}
	}
	@inproceedings{10.5555/3666122.3667327,
		author = {Frieder, Simon and Pinchetti, Luca and Chevalier, Alexis and Griffiths, Ryan-Rhys and Salvatori, Tommaso and Lukasiewicz, Thomas and Petersen, Philipp and Berner, Julius},
		title = {Mathematical capabilities of ChatGPT},
		year = {2024},
		publisher = {Curran Associates Inc.},
		address = {Red Hook, NY, USA},
		abstract = {We investigate the mathematical capabilities of two versions of ChatGPT (released 9-January-2023 and 30-January-2023) and of GPT-4 by testing them on publicly available datasets, as well as hand-crafted ones, using a novel evaluation scheme. In contrast to formal mathematics, where large databases of formal proofs are available (e.g., mathlib, the Lean Mathematical Library), current datasets of natural-language mathematics used to benchmark language models either cover only elementary mathematics or are very small. We address this by publicly releasing two new datasets: GHOSTS and miniGHOSTS. These are the first natural-language datasets curated by working researchers in mathematics that (1) aim to cover graduate-level mathematics, (2) provide a holistic overview of the mathematical capabilities of language models, and (3) distinguish multiple dimensions of mathematical reasoning. These datasets test, by using 1636 human expert evaluations, whether ChatGPT and GPT-4 can be helpful assistants to professional mathematicians by emulating use cases that arise in the daily professional activities of mathematicians. We benchmark the models on a range of fine-grained performance metrics. For advanced mathematics, this is the most detailed evaluation effort to date. We find that ChatGPT and GPT-4 can be used most successfully as mathematical assistants for querying facts, acting as mathematical search engines and knowledge base interfaces. GPT-4 can additionally be used for undergraduate-level mathematics but fails on graduate-level difficulty. Contrary to many positive reports in the media about GPT-4 and ChatGPT's exam-solving abilities (a potential case of selection bias), their overall mathematical performance is well below the level of a graduate student. Hence, if you aim to use ChatGPT to pass a graduate-level math exam, you would be better off copying from your average peer!},
		booktitle = {Proceedings of the 37th International Conference on Neural Information Processing Systems},
		articleno = {1205},
		numpages = {46},
		location = {New Orleans, LA, USA},
		series = {NIPS '23}
	}
	@inproceedings{10.5555/3495724.3495883,
		author = {Brown, Tom B. and Mann, Benjamin and Ryder, Nick and Subbiah, Melanie and Kaplan, Jared and Dhariwal, Prafulla and Neelakantan, Arvind and Shyam, Pranav and Sastry, Girish and Askell, Amanda and Agarwal, Sandhini and Herbert-Voss, Ariel and Krueger, Gretchen and Henighan, Tom and Child, Rewon and Ramesh, Aditya and Ziegler, Daniel M. and Wu, Jeffrey and Winter, Clemens and Hesse, Christopher and Chen, Mark and Sigler, Eric and Litwin, Mateusz and Gray, Scott and Chess, Benjamin and Clark, Jack and Berner, Christopher and McCandlish, Sam and Radford, Alec and Sutskever, Ilya and Amodei, Dario},
		title = {Language models are few-shot learners},
		year = {2020},
		isbn = {9781713829546},
		publisher = {Curran Associates Inc.},
		address = {Red Hook, NY, USA},
		abstract = {We demonstrate that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even becoming competitive with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks. We also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora.},
		booktitle = {Proceedings of the 34th International Conference on Neural Information Processing Systems},
		articleno = {159},
		numpages = {25},
		location = {Vancouver, BC, Canada},
		series = {NIPS '20}
	}
	@article{10.5555/3648699.3648939,
		author = {Chowdhery, Aakanksha and Narang, Sharan and Devlin, Jacob and Bosma, Maarten and Mishra, Gaurav and Roberts, Adam and Barham, Paul and Chung, Hyung Won and Sutton, Charles and Gehrmann, Sebastian and Schuh, Parker and Shi, Kensen and Tsvyashchenko, Sashank and Maynez, Joshua and Rao, Abhishek and Barnes, Parker and Tay, Yi and Shazeer, Noam and Prabhakaran, Vinodkumar and Reif, Emily and Du, Nan and Hutchinson, Ben and Pope, Reiner and Bradbury, James and Austin, Jacob and Isard, Michael and Gur-Ari, Guy and Yin, Pengcheng and Duke, Toju and Levskaya, Anselm and Ghemawat, Sanjay and Dev, Sunipa and Michalewski, Henryk and Garcia, Xavier and Misra, Vedant and Robinson, Kevin and Fedus, Liam and Zhou, Denny and Ippolito, Daphne and Luan, David and Lim, Hyeontaek and Zoph, Barret and Spiridonov, Alexander and Sepassi, Ryan and Dohan, David and Agrawal, Shivani and Omernick, Mark and Dai, Andrew M. and Pillai, Thanumalayan Sankaranarayana and Pellat, Marie and Lewkowycz, Aitor and Moreira, Erica and Child, Rewon and Polozov, Oleksandr and Lee, Katherine and Zhou, Zongwei and Wang, Xuezhi and Saeta, Brennan and Diaz, Mark and Firat, Orhan and Catasta, Michele and Wei, Jason and Meier-Hellstern, Kathy and Eck, Douglas and Dean, Jeff and Petrov, Slav and Fiedel, Noah},
		title = {PaLM: scaling language modeling with pathways},
		year = {2024},
		issue_date = {January 2023},
		publisher = {JMLR.org},
		volume = {24},
		number = {1},
		issn = {1532-4435},
		abstract = {Large language models have been shown to achieve remarkable performance across a variety of natural language tasks using few-shot learning, which drastically reduces the number of task-specific training examples needed to adapt the model to a particular application. To further our understanding of the impact of scale on few-shot learning, we trained a 540- billion parameter, densely activated, Transformer language model, which we call Pathways Language Model (PaLM).We trained PaLM on 6144 TPU v4 chips using Pathways, a new ML system which enables highly efficient training across multiple TPU Pods. We demonstrate continued benefits of scaling by achieving state-of-the-art few-shot learning results on hundreds of language understanding and generation benchmarks. On a number of these tasks, PaLM 540B achieves breakthrough performance, outperforming the finetuned state-of-the-art on a suite of multi-step reasoning tasks, and outperforming average human performance on the recently released BIG-bench benchmark. A significant number of BIG-bench tasks showed discontinuous improvements from model scale, meaning that performance steeply increased as we scaled to our largest model. PaLM also has strong capabilities in multilingual tasks and source code generation, which we demonstrate on a wide array of benchmarks. We additionally provide a comprehensive analysis on bias and toxicity, and study the extent of training data memorization with respect to model scale. Finally, we discuss the ethical considerations related to large language models and discuss potential mitigation strategies.},
		journal = {J. Mach. Learn. Res.},
		month = mar,
		articleno = {240},
		numpages = {113},
		keywords = {large language models, few-shot learning, natural language processing, scalable deep learning}
	}
	@inproceedings{10.5555/3600270.3602446,
		author = {Hoffmann, Jordan and Borgeaud, Sebastian and Mensch, Arthur and Buchatskaya, Elena and Cai, Trevor and Rutherford, Eliza and de Las Casas, Diego and Hendricks, Lisa Anne and Welbl, Johannes and Clark, Aidan and Hennigan, Tom and Noland, Eric and Millican, Katie and van den Driessche, George and Damoc, Bogdan and Guy, Aurelia and Osindero, Simon and Simonyan, Karen and Elsen, Erich and Vinyals, Oriol and Rae, Jack W. and Sifre, Laurent},
		title = {Training compute-optimal large language models},
		year = {2024},
		isbn = {9781713871088},
		publisher = {Curran Associates Inc.},
		address = {Red Hook, NY, USA},
		abstract = {We investigate the optimal model size and number of tokens for training a Transformer language model under a given compute budget. We find that current large language models are significantly undertrained, a consequence of the recent focus on scaling language models whilst keeping the amount of training data constant. By training over 400 language models ranging from 70 million to over 16 billion parameters on 5 to 500 billion tokens, we find that for compute-optimal training, the model size and the number of training tokens should be scaled equally: for every doubling of model size the number of training tokens should also be doubled. We test this hypothesis by training a predicted compute-optimal model, Chinchilla, that uses the same compute budget as Gopher but with 70B parameters and 4\texttimes{} more more data. Chinchilla uniformly and significantly outperforms Gopher (280B), GPT-3 (175B), Jurassic-1 (178B), and Megatron-Turing NLG (530B) on a large range of downstream evaluation tasks. This also means that Chinchilla uses substantially less compute for fine-tuning and inference, greatly facilitating downstream usage. As a highlight, Chinchilla reaches a state-of-the-art average accuracy of 67.5\% on the MMLU benchmark, greater than a 7\% improvement over Gopher.},
		booktitle = {Proceedings of the 36th International Conference on Neural Information Processing Systems},
		articleno = {2176},
		numpages = {15},
		location = {New Orleans, LA, USA},
		series = {NIPS '22}
	}
	@INPROCEEDINGS{10685583,
		author={Yokoyama, Daiki and Nishiura, Kinari and Monden, Akito},
		booktitle={2024 IEEE/ACIS 22nd International Conference on Software Engineering Research, Management and Applications (SERA)}, 
		title={Identifying Security Bugs in Issue Reports: Comparison of BERT, N-gram IDF and ChatGPT}, 
		year={2024},
		volume={},
		number={},
		pages={328-333},
		keywords={Computer bugs;Natural languages;Machine learning;Chatbots;Transformers;Security;Online services;issue classification;bug report;bug triage;large language model},
		doi={10.1109/SERA61261.2024.10685583}}
	@inproceedings{10.5555/3295222.3295349,
		author = {Vaswani, Ashish and Shazeer, Noam and Parmar, Niki and Uszkoreit, Jakob and Jones, Llion and Gomez, Aidan N. and Kaiser, \L{}ukasz and Polosukhin, Illia},
		title = {Attention is all you need},
		year = {2017},
		isbn = {9781510860964},
		publisher = {Curran Associates Inc.},
		address = {Red Hook, NY, USA},
		abstract = {The dominant sequence transduction models are based on complex recurrent or convolutional neural networks that include an encoder and a decoder. The best performing models also connect the encoder and decoder through an attention mechanism. We propose a new simple network architecture, the Transformer, based solely on attention mechanisms, dispensing with recurrence and convolutions entirely. Experiments on two machine translation tasks show these models to be superior in quality while being more parallelizable and requiring significantly less time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-to-German translation task, improving over the existing best results, including ensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task, our model establishes a new single-model state-of-the-art BLEU score of 41.0 after training for 3.5 days on eight GPUs, a small fraction of the training costs of the best models from the literature.},
		booktitle = {Proceedings of the 31st International Conference on Neural Information Processing Systems},
		pages = {6000–6010},
		numpages = {11},
		location = {Long Beach, California, USA},
		series = {NIPS'17}
	}
	@misc{lewis2019bartdenoisingsequencetosequencepretraining,
		title={BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension}, 
		author={Mike Lewis and Yinhan Liu and Naman Goyal and Marjan Ghazvininejad and Abdelrahman Mohamed and Omer Levy and Ves Stoyanov and Luke Zettlemoyer},
		year={2019},
		eprint={1910.13461},
		archivePrefix={arXiv},
		primaryClass={cs.CL},
		url={https://arxiv.org/abs/1910.13461}, 
	}
	@ARTICLE{10113601,
		author={Wu, Tianyu and He, Shizhu and Liu, Jingping and Sun, Siqi and Liu, Kang and Han, Qing-Long and Tang, Yang},
		journal={IEEE/CAA Journal of Automatica Sinica}, 
		title={A Brief Overview of ChatGPT: The History, Status Quo and Potential Future Development}, 
		year={2023},
		volume={10},
		number={5},
		pages={1122-1136},
		keywords={Three-dimensional displays;Web and internet services;Reinforcement learning;Chatbots;Robot sensing systems;Transformers;History;AIGC;ChatGPT;GPT-3;GPT-4;human feedback;large language models},
		doi={10.1109/JAS.2023.123618}}
	@article{10.1007/s10270-013-0392-y,
		author = {L\'{o}pez-Fern\'{a}ndez, Jes\'{u}s J. and Cuadrado, Jes\'{u}s S\'{a}nchez and Guerra, Esther and Lara, Juan},
		title = {Example-driven meta-model development},
		year = {2015},
		issue_date = {October   2015},
		publisher = {Springer-Verlag},
		address = {Berlin, Heidelberg},
		volume = {14},
		number = {4},
		issn = {1619-1366},
		url = {https://doi.org/10.1007/s10270-013-0392-y},
		doi = {10.1007/s10270-013-0392-y},
		abstract = {The intensive use of models in model-driven engineering (MDE) raises the need to develop meta-models with different aims, such as the construction of textual and visual modelling languages and the specification of source and target ends of model-to-model transformations. While domain experts have the knowledge about the concepts of the domain, they usually lack the skills to build meta-models. Moreover, meta-models typically need to be tailored according to their future usage and specific implementation platform, which demands knowledge available only to engineers with great expertise in specific MDE platforms. These issues hinder a wider adoption of MDE both by domain experts and software engineers. In order to alleviate this situation, we propose an interactive, iterative approach to meta-model construction, enabling the specification of example model fragments by domain experts, with the possibility of using informal drawing tools like Dia or yED. These fragments can be annotated with hints about the intention or needs for certain elements. A meta-model is then automatically induced, which can be refactored in an interactive way, and then compiled into an implementation meta-model using profiles and patterns for different platforms and purposes. Our approach includes the use of a virtual assistant, which provides suggestions for improving the meta-model based on well-known refactorings, and a validation mode, enabling the validation of the meta-model by means of examples.},
		journal = {Softw. Syst. Model.},
		month = oct,
		pages = {1323–1347},
		numpages = {25},
		keywords = {Domain-specific modelling languages, Example-driven modelling, Interactive meta-modelling, Meta-model design exploration, Meta-model induction, Meta-model validation, Meta-modelling}
	}
	@inproceedings{barais:hal-01609576,
		TITLE = {{Language Engineering with the GEMOC Studio}},
		AUTHOR = {Barais, Olivier and Combemale, Benoit and Wortmann, Andreas},
		URL = {https://inria.hal.science/hal-01609576},
		BOOKTITLE = {{ICSAW 2017 - IEEE International Conference on Software Architecture Workshops}},
		ADDRESS = {Gothenburg, Sweden},
		EDITOR = {IEEE},
		PAGES = {3},
		YEAR = {2017},
		MONTH = Apr,
		PDF = {https://inria.hal.science/hal-01609576v1/file/language-engineering-gemoc.pdf},
		HAL_ID = {hal-01609576},
		HAL_VERSION = {v1},
	}
	@article{10.1007/s10515-009-0053-0,
		author = {Gargantini, Angelo and Riccobene, Elvinia and Scandurra, Patrizia},
		title = {A semantic framework for metamodel-based languages},
		year = {2009},
		issue_date = {December  2009},
		publisher = {Kluwer Academic Publishers},
		address = {USA},
		volume = {16},
		number = {3–4},
		issn = {0928-8910},
		url = {https://doi.org/10.1007/s10515-009-0053-0},
		doi = {10.1007/s10515-009-0053-0},
		abstract = {In the model-based development context, metamodel-based languages are increasingly being defined and adopted either for general purposes or for specific domains of interest. However, meta-languages such as the MOF (Meta Object Facility)--combined with the OCL (Object Constraint Language) for expressing constraints--used to specify metamodels focus on structural and static semantics but have no built-in support for specifying behavioral semantics. This paper introduces a formal semantic framework for the definition of the semantics of metamodel-based languages. Using metamodelling principles, we propose several techniques, some based on the translational approach while others based on the weaving approach, all showing how the Abstract State Machine formal method can be integrated with current metamodel engineering environments to endow language metamodels with precise and executable semantics.We exemplify the use of our semantic framework by applying the proposed techniques to the OMG metamodelling framework for the behaviour specification of the Finite State Machines provided in terms of a metamodel.},
		journal = {Automated Software Engg.},
		month = dec,
		pages = {415–454},
		numpages = {40},
		keywords = {Weaving behaviour, Semantic (meta-)hooking, Model-based development, Model driven engineering, Metamodelling, Language semantics, Formal methods, Abstract state machines}
	}
	
	
	
	@article{bruneliere2014modisco,
		title={Modisco: A model driven reverse engineering framework},
		author={Bruneliere, Hugo and Cabot, Jordi and Dup{\'e}, Gr{\'e}goire and Madiot, Fr{\'e}d{\'e}ric},
		journal={Information and Software Technology},
		volume={56},
		number={8},
		pages={1012--1032},
		year={2014},
		publisher={Elsevier}
	}
	
	@inproceedings{bruneliere2010modisco,
		title={MoDisco: a generic and extensible framework for model driven reverse engineering},
		author={Bruneliere, Hugo and Cabot, Jordi and Jouault, Fr{\'e}d{\'e}ric and Madiot, Fr{\'e}d{\'e}ric},
		booktitle={IEEE/ACM international conference on Automated software engineering},
		pages={173--174},
		year={2010}
	}
	
	@ARTICLE{10109345,
		author={Ozkaya, Ipek},
		journal={IEEE Software}, 
		title={Application of Large Language Models to Software Engineering Tasks: Opportunities, Risks, and Implications}, 
		year={2023},
		volume={40},
		number={3},
		pages={4-8},
		doi={10.1109/MS.2023.3248401}}
	
	@INPROCEEDINGS{AbukhalafHK23,
		author={Abukhalaf, Seif and Hamdaqa, Mohammad and Khomh, Foutse},
		booktitle={2023 IEEE/ACM 20th International Conference on Mining Software Repositories (MSR)}, 
		title={On Codex Prompt Engineering for {OCL} Generation: An Empirical Study}, 
		year={2023},
		pages={148-157}
	}
	
	@incollection{cabot2012object,
		title={Object constraint language (OCL): a definitive guide},
		author={Cabot, Jordi and Gogolla, Martin},
		booktitle={Formal methods for model-driven engineering},
		pages={58--90},
		year={2012},
		publisher={Springer}
	}
	{kessentini2018integrating,
		title={Integrating the Designer in-the-loop for Metamodel/Model Co-Evolution via Interactive Computational Search},
		author={Kessentini, Wael and Wimmer, Manuel and Sahraoui, Houari},
		booktitle={Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
		pages={101--111},
		year={2018},
		organization={ACM}
	}
	
	@article{kessentini2019automated,
		title={Automated metamodel/model co-evolution: A search-based approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		journal={Information and Software Technology},
		volume={106},
		pages={49--67},
		year={2019},
		publisher={Elsevier}
	}
	@inproceedings{cicchetti2008automating,
		title={Automating co-evolution in model-driven engineering},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
		booktitle={2008 12th International IEEE enterprise distributed object computing conference},
		pages={222--231},
		year={2008},
		organization={IEEE}
	}
	@inproceedings{herrmannsdoerfer2009cope,
		title={COPE-Automating Coupled Evolution of Metamodels and Models.},
		author={Herrmannsdoerfer, Markus and Benz, Sebastian and Juergens, Elmar},
		booktitle={ECOOP},
		volume={9},
		pages={52--76},
		year={2009},
		organization={Springer}
	}
	@inproceedings{garces2009managing,
		title={Managing model adaptation by precise detection of metamodel changes},
		author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
		booktitle={European Conf. on Model Driven Architecture-Foundations and Applications, {ECMDA-FA}},
		pages={34--49},
		year={2009},
		organization={Springer}
	}
	@inproceedings{wachsmuth2007metamodel,
		title={Metamodel adaptation and model co-adaptation},
		author={Wachsmuth, Guido},
		booktitle={ECOOP},
		volume={7},
		pages={600--624},
		year={2007},
		organization={Springer}
	}
	
	@inproceedings{batot2017heuristic,
		title={Heuristic-Based Recommendation for Metamodel—OCL Coevolution},
		author={Batot, Edouard and Kessentini, Wael and Sahraoui, Houari and Famelis, Michalis},
		booktitle={ACM/IEEE 20th Int. Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={210--220},
		year={2017},
		organization={IEEE}
	}
	@article{khelladi2017semi,
		title={A semi-automatic maintenance and co-evolution of OCL constraints with (meta) model evolution},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
		journal={Journal of Systems and Software},
		volume={134},
		pages={242--260},
		year={2017},
		publisher={Elsevier}
	}
	
	@article{correa2007refactoring,
		title={Refactoring object constraint language specifications},
		author={Correa, Alexandre and Werner, Cl{\'a}udia},
		journal={Software \& Systems Modeling},
		volume={6},
		number={2},
		pages={113--138},
		year={2007},
		publisher={Springer}
	}
	@inproceedings{kusel2015systematic,
		title={Systematic Co-Evolution of OCL Expressions},
		author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={11th {APCCM 2015}},
		volume={27},
		pages={30},
		year={2015}
	}
	
	@inproceedings{kessentini2018automated,
		title={Automated Co-evolution of Metamodels and Transformation Rules: A Search-Based Approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		booktitle={International Symposium on Search Based Software Engineering},
		pages={229--245},
		year={2018},
		organization={Springer}
	}
	
	@inproceedings{khelladi2018change,
		title={Change Propagation-based and Composition-based Co-evolution of Transformations with Evolving Metamodels},
		author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
		pages={404--414},
		year={2018},
		organization={ACM}
	}
	
	@article{garces2014adapting,
		title={Adapting transformations to metamodel changes via external transformation composition},
		author={Garc{\'e}s, Kelly and Vara, Juan M and Jouault, Fr{\'e}d{\'e}ric and Marcos, Esperanza},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={789--806},
		year={2014},
		publisher={Springer}
	}
	@inproceedings{garcia2013model,
		title={Model transformation co-evolution: A semi-automatic approach},
		author={Garc{\'\i}a, Jokin and Diaz, Oscar and Azanza, Maider},
		booktitle={Int. Conf. Software Language Engineering, {SLE}},
		pages={144--163},
		year={2013},
		organization={Springer}
	}
	
	@inproceedings{kusel2015consistent,
		title={Consistent co-evolution of models and transformations},
		author={Kusel, Angelika and Etzlstorfer, Jurgen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schwinger, Wieland and Schonbock, Johannes},
		booktitle={ACM/IEEE 18th MODELS},
		pages={116--125},
		year={2015}
	}
	
	@inproceedings{kessentini2018integrating,
		title={Integrating the Designer in-the-loop for Metamodel/Model Co-Evolution via Interactive Computational Search},
		author={Kessentini, Wael and Wimmer, Manuel and Sahraoui, Houari},
		booktitle={Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
		pages={101--111},
		year={2018},
		organization={ACM}
	}
	@inproceedings{riedl2014towards,
		title={Towards model-and-code consistency checking},
		author={Riedl-Ehrenleitner, Markus and Demuth, Andreas and Egyed, Alexander},
		booktitle={Annual Computer Software and Applications Conference},
		pages={85--90},
		year={2014},
		organization={IEEE}
	}
	
	@article{kanakis2019empirical,
		title={An Empirical Study on the Impact of Inconsistency Feedback during Model and Code Co-changing.},
		author={Kanakis, Georgios and Khelladi, Djamel Eddine and Fischer, Stefan and Tr{\"o}ls, Michael and Egyed, Alexander},
		journal={The Journal of Object Technology},
		volume={18},
		number={2},
		pages={10--1},
		year={2019}
	}
	
	@inproceedings{pham2017bidirectional,
		title={Bidirectional mapping between architecture model and code for synchronization},
		author={Pham, Van Cam and Radermacher, Ansgar and Gerard, Sebastien and Li, Shuai},
		booktitle={IEEE International Conference on Software Architecture, {ICSA}},
		pages={239--242},
		year={2017},
		organization={IEEE}
	}
	
	@inproceedings{jongeling2020towards2,
		title={Towards consistency checking between a system model and its implementation},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
		booktitle={Int. Conference on Systems Modelling and Management},
		pages={30--39},
		year={2020},
		organization={Springer}
	}
	
	@inproceedings{jongeling2022Structural,
		title={Structural consistency between a system model and its implementation: a design science study in industry},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Carlson, Jan and Cicchetti, Antonio},
		booktitle={The European Conference on Modelling Foundations and Applications (ECMFA)},
		year={2022}
	}
	
	@inproceedings{zaheri2021towards,
		title={Towards Checking Consistency-Breaking Updates between Models and Generated Artifacts},
		author={Zaheri, MohammadAmin and Famelis, Michalis and Syriani, Eugene},
		booktitle={Int. Conf. on Model Driven Engineering Languages and Systems Companion (MODELS-C)},
		pages={400--409},
		year={2021},
		organization={IEEE}
	}
	
	@inproceedings{jongeling2020towards2,
		title={Towards consistency checking between a system model and its implementation},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
		booktitle={International Conference on Systems Modelling and Management},
		pages={30--39},
		year={2020},
		organization={Springer}
	}
	@inproceedings{jongeling2020towards,
		title={Towards consistency checking between a system model and its implementation},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
		booktitle={International Conference on Systems Modelling and Management},
		pages={30--39},
		year={2020},
		organization={Springer}
	}
	
	@book{mens2008introduction,
		title={Introduction and roadmap: History and challenges of software evolution},
		author={Mens, Tom},
		year={2008},
		publisher={Springer}
	}
	
	@inproceedings{Herrmannsdoerfer2011,
		title={An extensive catalog of operators for the coupled evolution of metamodels and models},
		author={Herrmannsdoerfer, Markus and Vermolen, Sander D and Wachsmuth, Guido},
		booktitle={International Conference Software Language Engineering, {SLE}},
		pages={163--182},
		year={2011}
	}
	
	@inproceedings{vermolen2011reconstructing,
		title={Reconstructing complex metamodel evolution},
		author={Vermolen, Sander D and Wachsmuth, Guido and Visser, Eelco},
		booktitle={International Conference on Software Language Engineering},
		pages={201--221},
		year={2011},
		organization={Springer}
	}
	
	
	@inproceedings{khelladi2015detecting,
		title={Detecting complex changes during metamodel evolution},
		author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
		booktitle={Advanced Information Systems Engineering (CAiSE)},
		pages={263--278},
		year={2015},
		organization={Springer}
	}
	
	
	@inproceedings{clariso2023model,
		title={Model-Driven Prompt Engineering},
		author={Claris{\'o}, Robert and Cabot, Jordi},
		booktitle={ACM/IEEE 26th Int. Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={47--54},
		year={2023},
		organization={IEEE}
	}
	
	
	@article{camara2023assessment,
		title={On the assessment of generative AI in modeling tasks: an experience report with ChatGPT and UML},
		author={C{\'a}mara, Javier and Troya, Javier and Burgue{\~n}o, Lola and Vallecillo, Antonio},
		journal={Software and Systems Modeling},
		pages={1--13},
		year={2023},
		publisher={Springer}
	}
	
	
	@article{liu2023improving,
		title={Improving ChatGPT Prompt for Code Generation},
		author={Liu, Chao and Bao, Xuanlin and Zhang, Hongyu and Zhang, Neng and Hu, Haibo and Zhang, Xiaohong and Yan, Meng},
		journal={arXiv preprint arXiv:2305.08360},
		year={2023}
	}
	@article{hou2023large,
		title={Large language models for software engineering: A systematic literature review},
		author={Hou, Xinyi and Zhao, Yanjie and Liu, Yue and Yang, Zhou and Wang, Kailong and Li, Li and Luo, Xiapu and Lo, David and Grundy, John and Wang, Haoyu},
		journal={arXiv preprint arXiv:2308.10620},
		year={2023}
	}
	@inproceedings{yu2012maintaining,
		title={Maintaining invariant traceability through bidirectional transformations},
		author={Yu, Yijun and Lin, Yu and Hu, Zhenjiang and Hidaka, Soichiro and Kato, Hiroyuki and Montrieux, Lionel},
		booktitle={International Conference on Software Engineering (ICSE)},
		pages={540--550},
		year={2012},
		organization={IEEE}
	}
	@inproceedings{Khelladi2020,
		title={Co-evolving code with evolving metamodels},
		author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier and J{\'e}z{\'e}quel, Jean-Marc},
		booktitle={Proceedings of the ACM/IEEE 42nd international conference on software engineering},
		pages={1496--1508},
		year={2020}
	}
	
	@article{jiang2023selfevolve,
		title={SelfEvolve: A Code Evolution Framework via Large Language Models},
		author={Jiang, Shuyang and Wang, Yuhao and Wang, Yu},
		journal={arXiv preprint arXiv:2306.02907},
		year={2023}
	}
	
	@article{zhang2023multilingual,
		title={Multilingual code co-evolution using large language models},
		author={Zhang, Jiyang and Nie, Pengyu and Li, Junyi Jessy and Gligoric, Milos},
		journal={arXiv preprint arXiv:2307.14991},
		year={2023}
	}
	
	@article{doderlein2022piloting,
		title={Piloting Copilot and Codex: Hot Temperature, Cold Prompts, or Black Magic?},
		author={D{\"o}derlein, Jean-Baptiste and Acher, Mathieu and Khelladi, Djamel Eddine and Combemale, Benoit},
		journal={arXiv preprint arXiv:2210.14699},
		year={2022}
	}
	
	
	
	@inproceedings{nguyen2022empirical,
		title={An empirical evaluation of GitHub copilot's code suggestions},
		author={Nguyen, Nhan and Nadi, Sarah},
		booktitle={The 19th International Conference on Mining Software Repositories},
		pages={1--5},
		year={2022}
	}
	
	@inproceedings{nathalia2023artificial,
		title={Artificial Intelligence vs. Software Engineers: An Empirical Study on Performance and Efficiency using ChatGPT},
		author={Nathalia, Nascimento and Paulo, Alencar and Donald, Cowan},
		booktitle={The 33rd Annual International Conference on Computer Science and Software Engineering},
		pages={24--33},
		year={2023}
	}
	
	@article{yeticstiren2023evaluating,
		title={Evaluating the Code Quality of AI-Assisted Code Generation Tools: An Empirical Study on GitHub Copilot, Amazon CodeWhisperer, and ChatGPT},
		author={Yeti{\c{s}}tiren, Burak and {\"O}zsoy, I{\c{s}}{\i}k and Ayerdem, Miray and T{\"u}z{\"u}n, Eray},
		journal={arXiv preprint arXiv:2304.10778},
		year={2023}
	}
	
	@article{guo2023exploring,
		title={Exploring the Potential of ChatGPT in Automated Code Refinement: An Empirical Study},
		author={Guo, Qi and Cao, Junming and Xie, Xiaofei and Liu, Shangqing and Li, Xiaohong and Chen, Bihuan and Peng, Xin},
		journal={arXiv preprint arXiv:2309.08221},
		year={2023}
	}
	
	@article{fu2023chatgpt,
		title={ChatGPT for Vulnerability Detection, Classification, and Repair: How Far Are We?},
		author={Fu, Michael and Tantithamthavorn, Chakkrit and Nguyen, Van and Le, Trung},
		journal={arXiv preprint arXiv:2310.09810},
		year={2023}
	}
	
	@inproceedings{chaaben2023towards,
		title={Towards using few-shot prompt learning for automating model completion},
		author={Chaaben, Meriem Ben and Burgue{\~n}o, Lola and Sahraoui, Houari},
		booktitle={IEEE/ACM 45th Int. Conf. on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)},
		pages={7--12},
		year={2023},
		organization={IEEE}
	}
	
	@article{iovino2012impact,
		title={On the Impact Significance of Metamodel Evolution in MDE.},
		author={Iovino, Ludovico and Pierantonio, Alfonso and Malavolta, Ivano},
		journal={Journal of Object Technology},
		volume={11},
		number={3},
		pages={3--1},
		year={2012}
	}
	
	@inproceedings{cicchetti2009managing,
		title={Managing dependent changes in coupled evolution},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
		booktitle={Int. Conf. on Theory and Practice of Model Transformations},
		pages={35--51},
		year={2009},
		organization={Springer}
	}
	
	
	@article{Alter2015,
		abstract = {This tutorial explains the most current version of work system theory and related ideas that were developed over several decades in an attempt to create a systems analysis and design method that could be used by business professionals. This tutorial covers: 1) work system theory (WST), 2) application of WST in various versions of the work system method (WSM), and 3) extensions of WST including work system principles, work system design spaces, a work system metamodel that reinterprets basic work system ideas in a detailed way that is more directly useful for IT-related analysis and design, linkages between WST and service systems, and application of work system ideas in a theory of workarounds and proposed theory of system interactions.},
		author = {Alter, Steven},
		doi = {10.1007/978-3-319-19069-3},
		isbn = {9783319190686},
		issn = {16113349},
		journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
		keywords = {Work system,Work system framework,Work system life cycle model,Work system metamodel},
		pages = {520--521},
		title = {{Work system theory: A bridge between business and IT views of systems}},
		volume = {9097},
		year = {2015}
	}
	
	@inproceedings{williams2012searching,
		title={Searching for model migration strategies},
		author={Williams, James R and Paige, Richard F and Polack, Fiona AC},
		booktitle={Proceedings of the 6th International Workshop on Models and Evolution},
		pages={39--44},
		year={2012},
		organization={ACM}
	}
	
	
	@article{langer2013posteriori,
		title={A posteriori operation detection in evolving software models},
		author={Langer, Philip and Wimmer, Manuel and Brosch, Petra and Herrmannsd{\"o}rfer, Markus and Seidl, Martina and Wieland, Konrad and Kappel, Gerti},
		journal={Journal of Systems and Software},
		volume={86},
		number={2},
		pages={551--566},
		year={2013},
		publisher={Elsevier}
	}
	
	
	
	
	@article{Khelladi2016,
		abstract = {Evolution of metamodels can be represented at the finest grain by the trace of atomic changes such as add, delete, and update of elements. For many applications, like automatic correction of models when the metamodel evolves, a higher grained trace must be inferred, composed of complex changes, each one aggregating several atomic changes. Complex change detection is a challenging task since multiple sequences of atomic changes may define a single user intention and complex changes may overlap over the atomic change trace. In this paper, we propose a detection engine of complex changes that simultaneously addresses these two challenges of variability and overlap. We introduce three ranking heuristics to help users to decide which overlapping complex changes are likely to be correct. In our approach, we record the trace of atomic changes rather than computing them with the difference between the original and evolved metamodel. Thus, we have a complete and an ordered sequence of atomic changes without hidden changes. Furthermore, we consider the issue of undo operations (i.e. change canceling actions) while recording the sequence of atomic changes, and we illustrate how we cope with it. We validate our approach on 8 real case studies demonstrating its feasibility and its applicability. We observe that a full recall is always reached in all case studies and an average precision of 70.75%. The precision is improved by the heuristics up to 91% and 100% in some cases.},
		author = {Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie Pierre},
		issn = {03064379},
		journal = {Information Systems},
		keywords = {Complex change,Detection,Evolution,Metamodel,Refactoring},
		pages = {220--241},
		publisher = {Elsevier},
		title = {{Detecting complex changes and refactorings during (Meta)model evolution}},
		volume = {62},
		year = {2016}
	}
	
	
	@article{bettini2022executable,
		title={An executable metamodel refactoring catalog},
		author={Bettini, Lorenzo and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		journal={Software and Systems Modeling},
		volume={21},
		number={5},
		pages={1689--1709},
		year={2022},
		publisher={Springer}
	}
	
	@book{steinberg2008emf,
		title={EMF: eclipse modeling framework},
		author={Steinberg, Dave and Budinsky, Frank and Merks, Ed and Paternostro, Marcelo},
		year={2008},
		publisher={Pearson Education}
	}
	@MISC{MDTOCL,
		author = {MDT},
		title = {Model Development Tools. Object Constraints Language (OCL).},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=ocl}}
	}
	@MISC{MDTPapyrus,
		author = {MDT},
		title = {Model Development Tools. Papyrus.},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=papyrus}}
	}
	
	@MISC{MDTModisco,
		author = {MDT},
		title = {Model Development Tools. MoDisco.},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=modisco}}
	}Graphical Modeling Project
	@article{cuadrado2018quick,
		title={Quick fixing ATL transformations with speculative analysis},
		author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
		journal={Software \& Systems Modeling},
		pages={1--35},
		year={2018},
		publisher={Springer}
	}
	@inproceedings{khelladi2019detecting,
		title={Detecting and exploring side effects when repairing model inconsistencies},
		author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Proceedings of the 12th ACM SIGPLAN International Conference on Software Language Engineering},
		pages={113--126},
		year={2019}
	}
	
	@article{kabir2023empirical,
		title={An empirical study of ChatGPT-3.5 on question answering and code maintenance},
		author={Kabir, Md Mahir Asef and Hassan, Sk Adnan and Wang, Xiaoyin and Wang, Ying and Yu, Hai and Meng, Na},
		journal={arXiv preprint arXiv:2310.02104},
		year={2023}
	}
	
	@inproceedings{pearce2022asleep,
		title={Asleep at the keyboard? assessing the security of github copilot’s code contributions},
		author={Pearce, Hammond and Ahmad, Baleegh and Tan, Benjamin and Dolan-Gavitt, Brendan and Karri, Ramesh},
		booktitle={2022 IEEE Symposium on Security and Privacy (SP)},
		pages={754--768},
		year={2022},
		organization={IEEE}
	}
	
	@inproceedings{sobania2022choose,
		title={Choose your programming copilot: A comparison of the program synthesis performance of github copilot and genetic programming},
		author={Sobania, Dominik and Briesch, Martin and Rothlauf, Franz},
		booktitle={Proceedings of the genetic and evolutionary computation conference},
		pages={1019--1027},
		year={2022}
	}
	
	@inproceedings{ziegler2022productivity,
		title={Productivity assessment of neural code completion},
		author={Ziegler, Albert and Kalliamvakou, Eirini and Li, X Alice and Rice, Andrew and Rifkin, Devon and Simister, Shawn and Sittampalam, Ganesh and Aftandilian, Edward},
		booktitle={ACM SIGPLAN International Symposium on Machine Programming},
		pages={21--29},
		year={2022}
	}
	
	@inproceedings{vaithilingam2022expectation,
		title={Expectation vs. experience: Evaluating the usability of code generation tools powered by large language models},
		author={Vaithilingam, Priyan and Zhang, Tianyi and Glassman, Elena L},
		booktitle={{Chi} conference on human factors in computing systems, extended abstracts},
		pages={1--7},
		year={2022}
	}
	
	@book{wohlin2012experimentation,
		title={Experimentation in software engineering},
		author={Wohlin, Claes and Runeson, Per and H{\"o}st, Martin and Ohlsson, Magnus C and Regnell, Bj{\"o}rn and Wessl{\'e}n, Anders},
		year={2012},
		publisher={Springer Science \& Business Media}
	}
	
	@inproceedings{10344012,
		title={Automated Domain Modeling with Large Language Models: A Comparative Study},
		author={Chen, Kua and Yang, Yujing and Chen, Boqi and L{\'o}pez, Jos{\'e} Antonio Hern{\'a}ndez and Mussbacher, Gunter and Varr{\'o}, D{\'a}niel},
		booktitle={2023 ACM/IEEE 26th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={162--172},
		year={2023},
		organization={IEEE}
	}
	
	@inproceedings{khelladi2016ad,
		title={Ad-room: a tool for automatic detection of refactorings in object-oriented models},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
		booktitle={The 38th International Conference on Software Engineering Companion},
		pages={617--620},
		year={2016}
	}
	
	@inproceedings{khelladi2020power,
		title={On the power of abstraction: a model-driven co-evolution approach of software code},
		author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier},
		booktitle={Proceedings of the ACM/IEEE 42nd International conference on software engineering: new ideas and emerging results},
		pages={85--88},
		year={2020}
	}
	
	@article{kretschmer2021consistent,
		title={Consistent change propagation within models},
		author={Kretschmer, Roland and Khelladi, Djamel Eddine and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		journal={Software and Systems Modeling},
		volume={20},
		pages={539--555},
		year={2021},
		publisher={Springer}
	}
	
	@article{kretschmer2021transforming,
		title={Transforming abstract to concrete repairs with a generative approach of repair values},
		author={Kretschmer, Roland and Khelladi, Djamel Eddine and Egyed, Alexander},
		journal={Journal of Systems and Software},
		volume={175},
		pages={110889},
		year={2021},
		publisher={Elsevier}
	}
	
	@inproceedings{kretschmer2017abstract,
		title={From abstract to concrete repairs of model inconsistencies: An automated approach},
		author={Kretschmer, Roland and Khelladi, Djamel Eddine and Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		booktitle={Asia-Pacific Software Engineering Conf., {APSEC}},
		pages={456--465},
		year={2017},
		organization={IEEE}
	}
	
	@inproceedings{macedo2013model,
		title={Model repair and transformation with Echo},
		author={Macedo, Nuno and Guimaraes, Tiago and Cunha, Alcino},
		booktitle={IEEE/ACM Int. Conf. on Automated Software Engineering (ASE)},
		pages={694--697},
		year={2013},
		organization={IEEE}
	}
	
	
	@article{pinna2015resolving,
		title={Resolving model inconsistencies using automated regression planning},
		author={Pinna Puissant, Jorge and Van Der Straeten, Ragnhild and Mens, Tom},
		journal={Software \& Systems Modeling},
		volume={14},
		pages={461--481},
		year={2015},
		publisher={Springer}
	}
	
	@inproceedings{le2021untangling,
		title={Untangling spaghetti of evolutions in software histories to identify code and test co-evolutions},
		author={Le Dilavrec, Quentin and Khelladi, Djamel Eddine and Blouin, Arnaud and J{\'e}z{\'e}quel, Jean-Marc},
		booktitle={Int. Conf. on Soft. Maintenance and Evolution, {ICSME}},
		pages={206--216},
		year={2021},
		organization={IEEE}
	}
	
	@article{Bezivin2014,
		author = {B{\'{e}}zivin, Jean},
		doi = {10.1007/11877028},
		number = {January 2005},
		title = {{Model Driven Engineering : An Emerging Technical Space Model Driven Engineering : An Emerging Technical Space}},
		year = {2014}
	}
	@article{Bezivin2004,
		abstract = {In November 2000, the OMG (Object Management Group) made public the MDA™ (Model Driven Architecture) initiative, a particular variant of a new global trend called model engineering. The basic ideas of model engineering are germane to many other approaches such as generative programming, domain specific languages, model-integrated computing, software factories, etc. MDA may be defined as the realization of model engineering principles around a set of OMG standards like MOF (Meta Object Facility), XMI (XML Metadata Interchange), OCL (Object Constraint Language), UML (Unified Modeling Language), CWM (Common Warehouse Metamodel), SPEM (Software Process Engineering Metamodel), etc. Similarly to the basic principle “Everything is an object” that was important in the 80's to set up the object-oriented technology, we suggest here, in model engineering, that the basic principle “Everything is a model” may be key to identifying the essential characteristics of this new trend.},
		author = {B{\'{e}}zivin, Jean},
		journal = {Special Novatica Issue - UML and Model Engineering},
		keywords = {MDA,Meta Model,Model Driven Architecture,Model Driven Engineering.},
		number = {2},
		pages = {21--24},
		title = {{In search of a basic principle for Model Driven Engineering}},
		volume = {5},
		year = {2004}
	}
	
	@article{Hutchinson2011,
		abstract = {This paper presents some initial results from a twelve-month empirical research study of model driven engineering (MDE). Using largely qualitative questionnaire and interview methods we investigate and document a range of technical, organizational and social factors that apparently influence organizational responses to MDE: specifically, its perception as a successful or unsuccessful organizational intervention. We then outline a range of lessons learned. Whilst, as with all qualitative research, these lessons should be interpreted with care, they should also be seen as providing a greater understanding of MDE practice in industry, as well as shedding light on the varied, and occasionally surprising, social, technical and organizational factors that affect success and failure. We conclude by suggesting how the next phase of the research will attempt to investigate some of these issues from a different angle and in greater depth. {\textcopyright} 2011 ACM.},
		author = {Hutchinson, John and Whittle, Jon and Rouncefield, Mark and Kristoffersen, Steinar},
		doi = {10.1145/1985793.1985858},
		isbn = {9781450304450},
		issn = {02705257},
		journal = {Proceedings - International Conference on Software Engineering},
		keywords = {empirical software engineering,model driven engineering},
		pages = {471--480},
		title = {{Empirical assessment of MDE in industry}},
		year = {2011}
	}
	@phdthesis{khelladiPhD2016,
		author    = {Djamel E. Khelladi},
		title     = {Co-evolution of OCL constraints with evolution of metamodels.},
		school    = {Université Pierre et Marie Curie (Sorbonne universités), Paris, France},
		year      = {2016}
	}
	
	@article{Tolvanen2009,
		author = {Tolvanen, Juha Pekka and Kelly, Steven},
		doi = {10.1145/1639950.1640031},
		isbn = {9781605587660},
		journal = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA},
		keywords = {Code generation,Domain-specific languages,Domain-specific modeling,Language workbench,Metamodeling},
		number = {June 2014},
		pages = {819--820},
		title = {{MetaEdit+: Defining and using integrated domain-specific modeling languages}},
		year = {2009}
	}
	@article{Boldt2006,
		author = {Boldt, Nick and Steinberg, Dave},
		pages = {1--89},
		title = {{Introduction to the Eclipse Modeling Framework}},
		url = {http://www.eclipse.org/modeling/emf/docs/presentations/EclipseCon/EclipseCon2006_EMF_Intro.pdf},
		year = {2006}
	}
	@article{Bezivin2005,
		abstract = {In November 2000, the OMG made public the MDA™ initiative, a particular variant of a new global trend called MDE (Model Driven Engineering). The basic ideas of MDA are germane to many other approaches such as generative programming, domain specific languages, model-integrated computing, generic model management, software factories, etc. MDA may be defined as the realization of MDE principles around a set of OMG standards like MOF, XMI, OCL, UML, CWM, SPEM, etc. MDE is presently making several promises about the potential benefits that could be reaped from a move from code-centric to model-based practices. When we observe these claims, we may wonder when they may be satisfied: on the short, medium or long term or even never perhaps for some of them. This paper tries to propose a vision of the development of MDE based on some lessons learnt in the past 30 years in the development of object technology. The main message is that a basic principle ("Everything is an object") was most helpful in driving the technology in the direction of simplicity, generality and power of integration. Similarly in MDE, the basic principle that "Everything is a model" has many interesting properties, among others the capacity to generate a realistic research agenda. We postulate here that two core relations (representation and conformance) are associated to this principle, as inheritance and instantiation were associated to the object unification principle in the class-based languages of the 80's. We suggest that this may be most useful in understanding many questions about MDE in general and the MDA approach in particular. We provide some illustrative examples. The personal position taken in this paper would be useful if it could generate a critical debate on the research directions in MDE. {\textcopyright} Springer-Verlag 2004.},
		author = {B{\'{e}}zivin, Jean},
		doi = {10.1007/s10270-005-0079-0},
		issn = {16191366},
		journal = {Software and Systems Modeling},
		keywords = {MDA,MDE,Metamodels,Models},
		number = {2},
		pages = {171--188},
		title = {{On the unification power of models}},
		volume = {4},
		year = {2005}
	}
	@article{Agrawal2012,
		abstract = {Indian software industry has had a phenomenal growth in the last two decades and is expected to sustain this momentum in the foreseeable future. Based on content analysis of 25 cases, the paper identifies several human resource management challenges: managing human resources in globally distributed team, shortage of software professionals having sufficient knowledge and competencies, low-skilled nature of the work, lack of well-developed HR systems and processes, high employee turnover, lack of work-life balance, and the problems associated with the use of contract employees. The paper develops a model for managing growth linking the various variables emerging from the study. {\textcopyright} 2011 Elsevier Inc.},
		author = {Agrawal, Narendra M. and Khatri, Naresh and Srinivasan, R.},
		doi = {10.1016/j.jwb.2011.04.002},
		file = {:Users/kebaili/Downloads/MON STAGE/Managing growth- Human resource management challenges facing the Indian software industry.pdf:pdf},
		issn = {10909516},
		journal = {Journal of World Business},
		keywords = {Globally distributed teams,Human resource management practices,IT professionals,Indian software industry,Organizational growth},
		number = {2},
		pages = {159--166},
		publisher = {Elsevier Inc.},
		title = {{Managing growth: Human resource management challenges facing the Indian software industry}},
		url = {http://dx.doi.org/10.1016/j.jwb.2011.04.002},
		volume = {47},
		year = {2012}
	}
	
	@article{Steinberg2008,
		author = {Steinberg, Dave},
		file = {:Users/kebaili/Downloads/MON STAGE/EclipseCon2008_309T_Fundamentals_of_EMF.pdf:pdf},
		journal = {Eclipse Foundation, editor, eclipsecon},
		keywords = {Code Generation,EMF,Eclipse},
		pages = {2005--2008},
		title = {{Fundamentals of the eclipse modeling framework}},
		url = {http://www.eclipse.org/modeling/emf/docs/presentations/EclipseWorld/EclipseWorld2007.pdf},
		year = {2008}
	}
	
	@book{lientz1980software,
		title={Software Maintenance Management: A Study of the Maintenance of Computer Application Software in 487 Data Processing Organizations},
		author={Lientz, B.P. and Swanson, E.B.},
		isbn={9780201042054},
		lccn={80012154},
		url={https://books.google.fr/books?id=8a6gAAAAMAAJ},
		year={1980},
		publisher={Addison-Wesley}
	}
	@article{Swanson1976,
		abstract = {The area of software maintenance has been described by one author as an "iceberg." (EDP Analyzer, 1972) Much goes on here that does not currently meet the eye. In part, this is the consequence of measurement difficulties. Practitioners and researchers can benefit from an understanding of the "dimensionality" of the maintenance problem. Some measures are suggested for coming to grips with this dimensionality, and problems of utilization associated with these measures are explored.},
		author = {Swanson, E. Burton},
		file = {:Users/kebaili/Downloads/MON STAGE/Documentation/THE DIMENSIONS OF MAINTENANCE.pdf:pdf},
		issn = {02705257},
		journal = {Proceedings - International Conference on Software Engineering},
		keywords = {Performance measurement,Software maintenance},
		pages = {492--497},
		title = {{The dimensions of maintenance}},
		year = {1976}
	}
	
	@article{Brown2004,
		abstract = {Model Driven Architecture (MDA1 )is anap- proach to application modeling and generation that has received a lot of attention in recent months. Champi- oned by the Object Management Group (OMG), many organizations are now looking at the ideas of MDA as a way to organize andmanage their application solutions, tool vendors are explicitly referring to their capabilities in terms of “MDA compliance”, and the MDA lexicon of platform-specific and platform-independent models is now widely referenced in the industry. In spite of this interest and market support, there is little clear guidance on what MDA means, where we are in its evolution, what is possible with today's technology, and howto take advantage of it in practice.This paper addresses that need by providing ananalysis ofhowmodeling is used in industry today, the relevance ofMDAto today's systems, a classification ofMDA tooling support, and ex- amples of its use.The paper concludeswith a set of recom- mendations for howMDAcan be successful in practice},
		author = {Brown, Alan W.},
		doi = {10.1007/s10270-004-0061-2},
		file = {:Users/kebaili/Downloads/MON STAGE/Model_driven_architecture_Principles_and_practice.pdf:pdf},
		issn = {1619-1366},
		journal = {Software and Systems Modeling},
		keywords = {complexity to the soft-,in addition to the,many of,scale and complexity of,software architecture,software design,there is also great,these efforts,uml,unified modeling language},
		number = {August 2004},
		title = {{Model driven architecture: Principles and practice}},
		year = {2004}
	}
	
	@article{langer_posteriori_20132,
		title={A posteriori operation detection in evolving software models},
		author={Langer, Philip and Wimmer, Manuel and Brosch, Petra and Herrmannsd{\"o}rfer, Markus and Seidl, Martina and Wieland, Konrad and Kappel, Gerti},
		journal={Journal of Systems and Software},
		volume={86},
		number={2},
		pages={551--566},
		year={2013},
		publisher={Elsevier}
	}
	
	
	
	
	@article{Jiang2013,
		abstract = {In the process of software evolution, software change information can help software developers and system analysts to get a better understanding of differential part of software. In this paper, we construct different versions of source code into abstract syntax trees, and use an improved tree matching algorithm which combines multiple string matching algorithms, bilateral best match strategy and predicate information of program to improve the match result. Also a detailed change type list is defined and all the tree editing operations will be mapped to refined program change classification. We evaluated our tree match algorithm on a medium-size project of different versions. Ten typical classes were picked as a benchmark and 456 changes were specified manually. Our method show a good performance on this benchmark with the average change number bias controlled in 1.75, and the average change number error percentage is controlled fewer than 5.38%. {\textcopyright} 2013 IEEE.},
		author = {Jiang, Lu and Zhang, Zhiyi and Zhao, Zhihong},
		doi = {10.1109/WISA.2013.42},
		file = {:Users/kebaili/Downloads/MON STAGE/AST1.pdf:pdf},
		isbn = {9781479932191},
		journal = {Proceedings - 2013 10th Web Information System and Application Conference, WISA 2013},
		keywords = {Abstract Syntax Tree,Program Differential Analysis,Software Evolution},
		pages = {180--183},
		title = {{AST based JAVA software evolution analysis}},
		year = {2013}
	}
	
	@article{pandey2011object,
		title={Object constraint language (OCL) past, present and future},
		author={Pandey, RK},
		journal={ACM SIGSOFT software engineering notes},
		volume={36},
		number={1},
		pages={1--4},
		year={2011},
		publisher={ACM New York, NY, USA}
	}
	
	
	@inproceedings{palsberg1998essence,
		title={The essence of the visitor pattern},
		author={Palsberg, Jens and Jay, C Barry},
		booktitle={Proceedings. The Twenty-Second Annual International Computer Software and Applications Conference (Compsac'98)(Cat. No. 98CB 36241)},
		pages={9--15},
		year={1998},
		organization={IEEE}
	}
	
	
	
	
	@inproceedings{Mohagheghi2009,
		abstract = {Model-Driven Engineering has been promoted for some time as the solution for the main problem software industry is facing, i.e. complexity of software development, by raising the abstraction level and introducing more automation in the process. The promises are many; among them improved software quality by increased traceability between artifacts, early defect detection, reducing manual and error-prone work and including knowledge in generators. However, in our opinion MDE is still in the early adoption phase and to be successfully adopted by industry, it must prove its superiority over other development paradigms and be supported by a rich ecosystem of stable, compatible and standardized tools. It should also not introduce more complexity than it removes. The subject of this paper is the challenges in MDE adoption from our experience of using MDE in real and research projects, where MDE has potential for success and what the key success criteria are.},
		author = {Parastoo Mohagheghi and Miguel A. Fernandez and Juan A. Martell and Mathias Fritzsche and Wasif Gilani},
		doi = {10.1007/978-3-642-01648-6_6},
		isbn = {9783642016479},
		issn = {03029743},
		journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
		keywords = {Challenges,Domain-specific modeling,Model-driven engineering,Performance engineering,Traceability},
		pages = {54-59},
		title = {MDE adoption in industry: Challenges and success criteria},
		volume = {5421},
		year = {2009},
	}
	
	@article{bruneliere2014modisco,
		title={Modisco: A model driven reverse engineering framework},
		author={Bruneliere, Hugo and Cabot, Jordi and Dup{\'e}, Gr{\'e}goire and Madiot, Fr{\'e}d{\'e}ric},
		journal={Information and Software Technology},
		volume={56},
		number={8},
		pages={1012--1032},
		year={2014},
		publisher={Elsevier}
	}
	
	@inproceedings{bruneliere2010modisco,
		title={MoDisco: a generic and extensible framework for model driven reverse engineering},
		author={Bruneliere, Hugo and Cabot, Jordi and Jouault, Fr{\'e}d{\'e}ric and Madiot, Fr{\'e}d{\'e}ric},
		booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
		pages={173--174},
		year={2010}
	}
	
	@inproceedings{jongeling2020towards2,
		title={Towards consistency checking between a system model and its implementation},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
		booktitle={International Conference on Systems Modelling and Management},
		pages={30--39},
		year={2020},
		organization={Springer}
	}
	
	@INPROCEEDINGS{6606596,
		author={Meng, Na and Kim, Miryung and McKinley, Kathryn S.},
		booktitle={2013 35th International Conference on Software Engineering (ICSE)}, 
		title={Lase: Locating and applying systematic edits by learning from examples}, 
		year={2013},
		volume={},
		number={},
		pages={502-511},
		doi={10.1109/ICSE.2013.6606596}}
	
	
	
	@INPROCEEDINGS{8443580,
		author={Gerasimou, Simos and Kechagia, Maria and Kolovos, Dimitris and Paige, Richard and Gousios, Georgios},
		booktitle={2018 IEEE/ACM 2nd International Workshop on API Usage and Evolution (WAPI)}, 
		title={On Software Modernisation due to Library Obsolescence}, 
		year={2018},
		volume={},
		number={},
		pages={6-9},
		doi={}}
	
	@INPROCEEDINGS{4814159,
		author={Dagenais, Barthélémy and Robillard, Martin},
		booktitle={2008 ACM/IEEE 30th International Conference on Software Engineering}, 
		title={Recommending adaptive changes for framework evolution}, 
		year={2008},
		volume={},
		number={},
		pages={481-490},
		doi={10.1145/1368088.1368154}}
	
	@book{starfield1993model,
		title={How to model it: Problem solving for the computer age},
		author={Starfield, Anthony M and Smith, Karl and Bleloch, Andrew L},
		year={1993},
		publisher={McGraw-Hill, Inc.}
	}
	
	@inproceedings{bezivin2001towards,
		title={Towards a precise definition of the OMG/MDA framework},
		author={B{\'e}zivin, Jean and Gerb{\'e}, Olivier},
		booktitle={Automated Software Engineering, 2001.(ASE 2001). Proceedings. 16th Annual International Conference on},
		pages={273--280},
		year={2001},
		organization={IEEE}
	}
	
	@book{kleppe2003mda,
		title={MDA explained: the model driven architecture: practice and promise},
		author={Kleppe, Anneke G and Warmer, Jos B and Bast, Wim},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@article{brown2004model,
		title={Model driven architecture: Principles and practice},
		author={Brown, Alan W},
		journal={Software and Systems Modeling},
		volume={3},
		number={4},
		pages={314--327},
		year={2004},
		publisher={Springer}
	}
	
	
	
	
	@incollection{boronat2008algebraic,
		title={An algebraic semantics for MOF},
		author={Boronat, Artur and Meseguer, Jos{\'e}},
		booktitle={Fundamental Approaches to Software Engineering},
		pages={377--391},
		year={2008},
		publisher={Springer}
	}
	
	@incollection{koch2003towards,
		title={Towards a common metamodel for the development of web applications},
		author={Koch, Nora and Kraus, Andreas},
		booktitle={Web Engineering},
		pages={497--506},
		year={2003},
		publisher={Springer}
	}
	
	@article{seidewitz2003models,
		title={What models mean},
		author={Seidewitz, Ed},
		journal={IEEE software},
		volume={20},
		number={5},
		pages={26},
		year={2003},
		publisher={IEEE Computer Society}
	}
	
	@article{bezivin2005unification,
		title={On the unification power of models},
		author={B{\'e}zivin, Jean},
		journal={Software \& Systems Modeling},
		volume={4},
		number={2},
		pages={171--188},
		year={2005},
		publisher={Springer}
	}
	
	@incollection{bezivin2006model,
		title={Model driven engineering: An emerging technical space},
		author={B{\'e}zivin, Jean},
		booktitle={Generative and transformational techniques in software engineering},
		pages={36--64},
		year={2006},
		publisher={Springer}
	}
	
	@incollection{jouault2006km3,
		title={KM3: a DSL for Metamodel Specification},
		author={Jouault, Fr{\'e}d{\'e}ric and B{\'e}zivin, Jean},
		booktitle={Formal Methods for Open Object-Based Distributed Systems},
		pages={171--185},
		year={2006},
		publisher={Springer}
	}
	
	@inproceedings{bezivin2006canonical,
		title={A canonical scheme for model composition},
		author={B{\'e}zivin, Jean and Bouzitouna, Salim and Del Fabro, Marcos Didonet and Gervais, Marie-Pierre and Jouault, Fr{\'e}d{\'e}ric and Kolovos, Dimitrios and Kurtev, Ivan and Paige, Richard F},
		booktitle={Model Driven Architecture--Foundations and Applications},
		pages={346--360},
		year={2006},
		organization={Springer}
	}
	
	@article{schmidt2006model,
		title={Model-driven engineering},
		author={Schmidt, Douglas C},
		journal={COMPUTER-IEEE COMPUTER SOCIETY-},
		volume={39},
		number={2},
		pages={25},
		year={2006},
		publisher={Citeseer}
	}
	
	@article{berardi2005reasoning,
		title={Reasoning on UML class diagrams},
		author={Berardi, Daniela and Calvanese, Diego and De Giacomo, Giuseppe},
		journal={Artificial Intelligence},
		volume={168},
		number={1},
		pages={70--118},
		year={2005},
		publisher={Elsevier}
	}
	
	@inproceedings{atkinson2012symbiotic,
		title={Symbiotic general-purpose and domain-specific languages},
		author={Atkinson, Colin and Gerbig, Ralph and Kennel, Bastian},
		booktitle={Proceedings of the 34th International Conference on Software Engineering},
		pages={1269--1272},
		year={2012},
		organization={IEEE Press}
	}
	
	@inproceedings{france2007model,
		title={Model-driven development of complex software: A research roadmap},
		author={France, Robert and Rumpe, Bernhard},
		booktitle={2007 Future of Software Engineering},
		pages={37--54},
		year={2007},
		organization={IEEE Computer Society}
	}
	
	@article{fuentes2004introduction,
		title={An introduction to UML profiles},
		author={Fuentes-Fern{\'a}ndez, Lidia and Vallecillo-Moreno, Antonio},
		journal={UML and Model Engineering},
		volume={2},
		year={2004}
	}
	
	@article{atkinson2002profiles,
		title={Profiles in a strict metamodeling framework},
		author={Atkinson, Colin and K{\"u}hne, Thomas},
		journal={Science of Computer Programming},
		volume={44},
		number={1},
		pages={5--22},
		year={2002},
		publisher={Elsevier}
	}
	
	@incollection{mezei2007optimizing,
		title={An optimizing OCL compiler for metamodeling and model transformation environments},
		author={Mezei, Gergely and Levendovszky, Tiham{\'e}r and Charaf, Hassan},
		booktitle={Software Engineering Techniques: Design for Quality},
		pages={61--71},
		year={2007},
		publisher={Springer}
	}
	
	@inproceedings{CabotG12SFM,
		author    = {Jordi, Cabot and Martin, Gogolla},
		title     = {Object Constraint Language {(OCL):} {A} Definitive Guide},
		booktitle = {12th {SFM} Bertinoro, Italy},
		pages     = {58--90},
		year      = {2012},
		crossref  = {DBLP:conf/sfm/2012},
		url       = {http://dx.doi.org/10.1007/978-3-642-30982-3_3},
		doi       = {10.1007/978-3-642-30982-3_3},
		timestamp = {Wed, 04 Jul 2012 11:18:10 +0200},
		biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sfm/CabotG12},
		bibsource = {dblp computer science bibliography, http://dblp.org}
	}
	
	@article{Ashbacher2003bookreview,
		title={Book review of “The Object Constraint Language Second Edition, Getting Your Models Ready for MDA”},
		author={Charles, Ashbacher},
		journal={Journal of Object Technology},
		volume={2},
		number={6},
		pages={139--140},
		year={2003}
	}
	
	@incollection{bergmann2014translating,
		title={Translating OCL to graph patterns},
		author={Bergmann, G{\'a}bor},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={670--686},
		year={2014},
		publisher={Springer}
	}
	
	
	
	
	@MISC{OCL20,
		author = {OMG},
		title = {Object Management Group. Object Constraints Language (OCL).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/OCL/}}
	}
	
	@MISC{MOF241,
		author = {OMG},
		title = {Object Management Group. Meta Object Facility (MOF).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/MOF/}}
	}
	
	@MISC{QVT20,
		author = {OMG},  
		title = {Object Management Group. Query / Views / Transformations (QVT).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/QVT/}}
	}
	
	@inproceedings{soeken2010verifying,
		title={Verifying UML/OCL models using Boolean satisfiability},
		author={Soeken, Mathias and Wille, Robert and Kuhlmann, Mirco and Gogolla, Martin and Drechsler, Rolf},
		booktitle={Proceedings of the Conference on Design, Automation and Test in Europe},
		pages={1341--1344},
		year={2010},
		organization={European Design and Automation Association}
	}
	
	@article{gogolla2007use,
		title={USE: A UML-based specification environment for validating UML and OCL},
		author={Gogolla, Martin and B{\"u}ttner, Fabian and Richters, Mark},
		journal={Science of Computer Programming},
		volume={69},
		number={1},
		pages={27--34},
		year={2007},
		publisher={Elsevier}
	}
	
	@article{gogolla2005validating,
		title={Validating UML and OCL models in USE by automatic snapshot generation},
		author={Gogolla, Martin and Bohling, J{\"o}rn and Richters, Mark},
		journal={Software \& Systems Modeling},
		volume={4},
		number={4},
		pages={386--398},
		year={2005},
		publisher={Springer}
	}
	
	@book{warmer2003object,
		title={The object constraint language: getting your models ready for MDA},
		author={Warmer, Jos B and Kleppe, Anneke G},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@book{richters2002precise,
		title={A precise approach to validating UML models and OCL constraints},
		author={Richters, Mark and others},
		year={2002},
		publisher={Citeseer}
	}
	
	@incollection{gogolla1998constraints,
		title={On constraints and queries in UML},
		author={Gogolla, Martin and Richters, Mark},
		booktitle={The Unified Modeling Language},
		pages={109--121},
		year={1998},
		publisher={Springer}
	}
	
	@incollection{hamie1998reflections,
		title={Reflections on the object constraint language},
		author={Hamie, Ali and Civello, Franco and Howse, John and Kent, Stuart and Mitchell, Richard},
		booktitle={The Unified Modeling Language.{\guillemotleft}UML{\guillemotright}’98: Beyond the Notation},
		pages={162--172},
		year={1998},
		publisher={Springer}
	}
	
	@incollection{cook2002amsterdam,
		title={The Amsterdam manifesto on OCL},
		author={Cook, Steve and Kleppe, Anneke and Mitchell, Richard and Rumpe, Bernhard and Warmer, Jos and Wills, Alan},
		booktitle={Object Modeling with the OCL},
		pages={115--149},
		year={2002},
		publisher={Springer}
	}
	
	@incollection{richters2002ocl,
		title={OCL: Syntax, semantics, and tools},
		author={Richters, Mark and Gogolla, Martin},
		booktitle={Object Modeling with the OCL},
		pages={42--68},
		year={2002},
		publisher={Springer}
	}
	
	@incollection{hennicker2002precise,
		title={On the precise meaning of OCL constraints},
		author={Hennicker, Rolf and Hussmann, Heinrich and Bidoit, Michel},
		booktitle={Object Modeling with the OCL},
		pages={69--84},
		year={2002},
		publisher={Springer}
	}
	
	@inproceedings{dzidek2005lessons,
		title={Lessons learned from developing a dynamic OCL constraint enforcement tool for Java},
		author={Dzidek, Wojciech J and Briand, Lionel C and Labiche, Yvan},
		booktitle={Satellite Events at the MoDELS 2005 Conference},
		pages={10--19},
		year={2005},
		organization={Springer}
	}
	
	@inproceedings{briand2004controlled,
		title={A controlled experiment on the impact of the object constraint language in UML-based maintenance},
		author={Briand, Lionel C and Labiche, Yvan and Yan, HD and Di Penta, Massimiliano},
		booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on},
		pages={380--389},
		year={2004},
		organization={IEEE}
	}
	
	@incollection{moiseev2009generating,
		title={Generating assertion code from OCL: A transformational approach based on similarities of implementation languages},
		author={Moiseev, Rodion and Hayashi, Shinpei and Saeki, Motoshi},
		booktitle={Model Driven Engineering Languages and Systems},
		pages={650--664},
		year={2009},
		publisher={Springer}
	}
	
	@article{cheon2008aspect,
		title={An aspect-based approach to checking design constraints at run-time},
		author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc and Estrada, Neith and Fierro, Valeria and Romo, Jessica},
		year={2008}
	}
	
	@article{cheon2009checking,
		title={Checking design constraints at run-time using OCL and AspectJ},
		author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc},
		year={2009}
	}
	
	@inproceedings{cheon2010automating,
		title={Automating Java program testing using OCL and AspectJ},
		author={Cheon, Yoonsik and Avila, Carmen},
		booktitle={Information Technology: New Generations (ITNG), 2010 Seventh International Conference on},
		pages={1020--1025},
		year={2010},
		organization={IEEE}
	}
	
	@inproceedings{ziemann2002extension,
		title={An extension of OCL with temporal logic},
		author={Ziemann, Paul and Gogolla, Martin},
		booktitle={Critical Systems Development with UML--Proceedings of the UML},
		volume={2},
		pages={53--62},
		year={2002},
		organization={Citeseer}
	}
	
	@inproceedings{ziemann2003ocl,
		title={OCL extended with temporal logic},
		author={Ziemann, Paul and Gogolla, Martin},
		booktitle={Perspectives of System Informatics},
		pages={351--357},
		year={2003},
		organization={Springer}
	}
	
	@incollection{kanso2012temporal,
		title={Temporal constraint support for ocl},
		author={Kanso, Bilal and Taha, Safouan},
		booktitle={Software Language Engineering},
		pages={83--103},
		year={2012},
		publisher={Springer}
	}
	
	@inproceedings{lehman1997metrics,
		title={Metrics and laws of software evolution-the nineties view},
		author={Lehman, Meir M and Ramil, Juan F and Wernick, Paul D and Perry, Dewayne E and Turski, Wladyslaw M},
		booktitle={Software Metrics Symposium, 1997. Proceedings., Fourth International},
		pages={20--32},
		year={1997},
		organization={IEEE}
	}
	
	@book{lehman1978laws,
		title={Laws of program evolution-rules and tools for programming management},
		author={Lehman, Meir M},
		year={1978}
	}
	
	@article{lehman1979understanding,
		title={On understanding laws, evolution, and conservation in the large-program life cycle},
		author={Lehman, Meir M},
		journal={Journal of Systems and Software},
		volume={1},
		pages={213--221},
		year={1979},
		publisher={Elsevier}
	}
	
	@incollection{lehman1996laws,
		title={Laws of software evolution revisited},
		author={Lehman, Manny M},
		booktitle={Software process technology},
		pages={108--124},
		year={1996},
		publisher={Springer}
	}
	
	
	
	@article{lehman2003software,
		title={Software evolution—background, theory, practice},
		author={Lehman, Meir M and Ramil, Juan F},
		journal={Information Processing Letters},
		volume={88},
		number={1},
		pages={33--44},
		year={2003},
		publisher={Elsevier}
	}
	
	@article{chapin2001types,
		title={Types of software evolution and software maintenance},
		author={Chapin, Ned and Hale, Joanne E and Khan, Khaled Md and Ramil, Juan F and Tan, Wui-Gee},
		journal={Journal of software maintenance and evolution: Research and Practice},
		volume={13},
		number={1},
		pages={3--30},
		year={2001},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{favre2005languages,
		title={Languages evolve too! Changing the Software Time Scale},
		author={Favre, Jean-Marie},
		booktitle={Eighth International Workshop on Principles of Software Evolution {IWPSE}},
		pages={33--44},
		year={2005},
		organization={IEEE}
	}
	
	@article {buckley2005towards,
		author = {Buckley, Jim and Mens, Tom and Zenger, Matthias and Rashid, Awais and Kniesel, Günter},
		title = {Towards a taxonomy of software change},
		journal = {Journal of Software Maintenance and Evolution: Research and Practice},
		volume = {17},
		number = {5},
		publisher = {John Wiley & Sons, Ltd.},
		issn = {1532-0618},
		url = {http://dx.doi.org/10.1002/smr.319},
		doi = {10.1002/smr.319},
		pages = {309--332},
		keywords = {characterization, software evolution tools, refactoring browser, CVS, eLiza},
		year = {2005}
	}
	
	@inproceedings{swanson1976dimensions,
		title={The dimensions of maintenance},
		author={Swanson, E Burton},
		booktitle={Proceedings of the 2nd international conference on Software engineering},
		pages={492--497},
		year={1976},
		organization={IEEE Computer Society Press}
	}
	
	@article{lientz1980software,
		title={Software maintenance management: a study of the maintenance of computer application software in 487 data processing organizations},
		author={Lientz, Bennet P and Swanson, E Burton},
		year={1980},
		publisher={Addison-Wesley Pub (Sd)}
	}
	
	@incollection{liebel2014assessing,
		title={Assessing the state-of-practice of model-based engineering in the embedded systems domain},
		author={Liebel, Grischa and Marko, Nadja and Tichy, Matthias and Leitner, Andrea and Hansson, J{\"o}rgen},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={166--182},
		year={2014},
		publisher={Springer}
	}
	
	
	@inproceedings{shirtz2007adopting,
		title={Adopting model driven development in a large financial organization},
		author={Shirtz, Dov and Kazakov, Michael and Shaham-Gafni, Yael},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={172--183},
		year={2007},
		organization={Springer}
	}
	
	
	@inproceedings{mohagheghi2008proof,
		title={Where is the proof?-a review of experiences from applying mde in industry},
		author={Mohagheghi, Parastoo and Dehlen, Vegard},
		booktitle={Model Driven Architecture--Foundations and Applications},
		pages={432--443},
		year={2008},
		organization={Springer}
	}
	
	
	@article{hailpern2006model,
		title={Model-driven development: The good, the bad, and the ugly},
		author={Hailpern, Brent and Tarr, Peri},
		journal={IBM systems journal},
		volume={45},
		number={3},
		pages={451},
		year={2006},
		publisher={International Business Machines Corporation}
	}
	
	@inproceedings{garcia2014Caise,
		title={An adapter-based approach to co-evolve generated sql in model-to-text transformations},
		author={Garc{\'\i}a, Jokin and D{\'\i}az, Oscar and Cabot, Jordi},
		booktitle={Advanced Information Systems Engineering},
		pages={518--532},
		year={2014},
		organization={Springer}
	}
	@inproceedings{garcia2013model,
		title={Model transformation co-evolution: A semi-automatic approach},
		author={Garc{\'\i}a, Jokin and Diaz, Oscar and Azanza, Maider},
		booktitle={Software Language Engineering: 5th International Conference, SLE 2012, Dresden, Germany, September 26-28, 2012, Revised Selected Papers 5},
		pages={144--163},
		year={2013},
		organization={Springer}
	}
	@inproceedings{wachsmuth2007metamodel,
		title={Metamodel adaptation and model co-adaptation},
		author={Wachsmuth, Guido},
		booktitle={ECOOP},
		volume={7},
		pages={600--624},
		year={2007},
		organization={Springer}
	}
	@inproceedings{herrmannsdoerfer2009cope,
		title={COPE-Automating Coupled Evolution of Metamodels and Models.},
		author={Herrmannsdoerfer, Markus and Benz, Sebastian and Juergens, Elmar},
		booktitle={ECOOP},
		volume={9},
		pages={52--76},
		year={2009},
		organization={Springer}
	}
	
	@incollection{herrmannsdoerfer_cope_2011,
		title={COPE--A Workbench for the coupled evolution of metamodels and models},
		author={Herrmannsdoerfer, Markus},
		booktitle={Software Language Engineering},
		pages={286--295},
		year={2011},
		publisher={Springer}
	}
	
	@inproceedings{cicchetti2008automating,
		title={Automating co-evolution in model-driven engineering},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
		booktitle={2008 12th International IEEE enterprise distributed object computing conference},
		pages={222--231},
		year={2008},
		organization={IEEE}
	}
	@article{garces_adaptation_2008,
		title={Adaptation of models to evolving metamodels},
		author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
		year={2008}
	}
	
	@article{markovic_refactoring_2008,
		title={Refactoring OCL annotated UML class diagrams},
		author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
		journal={Software \& Systems Modeling},
		volume={7},
		number={1},
		pages={25--47},
		year={2008},
		publisher={Springer}
	}
	
	@incollection{markovic_refactoring_2005,
		title={Refactoring OCL annotated UML class diagrams},
		author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
		booktitle={Model Driven Engineering Languages and Systems},
		pages={280--294},
		year={2005},
		publisher={Springer}
	}
	
	
	@incollection{herrmannsdoerfer_extensive_2011,
		title = {An Extensive Catalog of Operators for the Coupled Evolution of Metamodels and Models},
		copyright = {©2011 Springer Berlin Heidelberg},
		isbn = {978-3-642-19439-9, 978-3-642-19440-5},
		booktitle = {Software Language Engineering},
		author = {Herrmannsdoerfer, Markus and Vermolen, Sander D. and Wachsmuth, Guido},
		editor = {Malloy and Staab and Brand},
		month = jan,
		year = {2011},
		pages = {163--182},
		publisher={Springer}
	}
	
	
	@inproceedings{garces2009managing,
		title={Managing model adaptation by precise detection of metamodel changes},
		author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
		booktitle={Model Driven Architecture-Foundations and Applications: 5th European Conference, ECMDA-FA 2009, Enschede, The Netherlands, June 23-26, 2009. Proceedings 5},
		pages={34--49},
		year={2009},
		organization={Springer}
	}
	
	@inproceedings{xing2006refactoring,
		title={Refactoring detection based on umldiff change-facts queries},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Reverse Engineering, 2006. WCRE'06. 13th Working Conference on},
		pages={263--274},
		year={2006},
		organization={IEEE}
	}
	
	@inproceedings{moghadam2012automated,
		title={Automated refactoring using design differencing},
		author={Moghadam, Iman Hemati and Cinneide, Mel O},
		booktitle={Software Maintenance and Reengineering (CSMR), 2012 16th European Conference on},
		pages={43--52},
		year={2012},
		organization={IEEE}
	}
	
	@MISC{Rijsbergen1979,
		author = {Rijsbergen, C.J.V.},
		title = {Information Retrieval. Butterworths},
		year = {1979}
	}
	
	@article{morisio2002success,
		title={Success and failure factors in software reuse},
		author={Morisio, Maurizio and Ezran, Michel and Tully, Colin},
		journal={Software Engineering, IEEE Transactions on},
		volume={28},
		number={4},
		pages={340--357},
		year={2002},
		publisher={IEEE}
	}
	
	@incollection{hemel2008code,
		title={Code generation by model transformation},
		author={Hemel, Zef and Kats, Lennart CL and Visser, Eelco},
		booktitle={{ICMT}},
		pages={183--198},
		year={2008},
		publisher={Springer}
	}
	
	@inproceedings{aichernig2005test,
		title={Test case generation by OCL mutation and constraint solving},
		author={Aichernig, Bernhard K and Salas, Percy Antonio Pari},
		booktitle={Quality Software, 2005.(QSIC 2005). Fifth International Conference on},
		pages={64--71},
		year={2005},
		organization={IEEE}
	}
	
	@inproceedings{hassam2011assistance,
		title={Assistance system for OCL constraints adaptation during metamodel evolution},
		author={Hassam, Kahina and Sadou, Salah and Gloahec, Vincent Le and Fleurquin, R{\'e}gis},
		booktitle={Software Maintenance and Reengineering (CSMR), 15th European Conference on},
		pages={151--160},
		year={2011},
		organization={IEEE}
	}
	
	@inproceedings{demuth_automatically_2012,
		title={Automatically generating and adapting model constraints to support co-evolution of design models},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		booktitle={The 27th IEEE/ACM ASE},
		pages={302--305},
		year={2012}
	}
	
	@incollection{demuth_supporting_2013,
		title={Supporting the co-evolution of metamodels and constraints through incremental constraint management},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={287--303},
		year={2013},
		publisher={Springer}
	}
	
	
	
	@article{schneidewind1987state,
		title={The state of software maintenance},
		author={Schneidewind, Norman F.},
		journal={IEEE Transactions on Software Engineering},
		volume={13},
		number={3},
		pages={303},
		year={1987},
		publisher={IEEE Computer Society}
	}
	
	@inproceedings{bennett2000software,
		title={Software maintenance and evolution: a roadmap},
		author={Bennett, Keith H and Rajlich, V{\'a}clav T},
		booktitle={Proceedings of the Conference on the Future of Software Engineering},
		pages={73--87},
		year={2000},
		organization={ACM}
	}
	
	@inproceedings{godfrey2008past,
		title={The past, present, and future of software evolution},
		author={Godfrey, Michael W and German, Daniel M},
		booktitle={Frontiers of Software Maintenance, 2008. FoSM 2008.},
		pages={129--138},
		year={2008},
		organization={IEEE}
	}
	
	@article{vigder2001evolution,
		title={The evolution, maintenance, and management of component-based systems},
		author={Vigder, Mark},
		journal={Component-Based Software Engineering: Putting the Pieces Together},
		pages={527--539},
		year={2001},
		publisher={Citeseer}
	}
	
	@phdthesis{opdyke1992refactoring,
		title={Refactoring object-oriented frameworks},
		author={Opdyke, William F},
		year={1992},
		school={University of Illinois at Urbana-Champaign}
	}
	
	@book{arnold1986introduction,
		title={An introduction to software restructuring},
		author={Arnold, Robert S},
		year={1986},
		publisher={IEEE Computer Society Press, Washington, DC}
	}
	
	@article{mens2004survey,
		title={A survey of software refactoring},
		author={Mens, Tom and Tourw{\'e}, Tom},
		journal={Software Engineering, IEEE Transactions on},
		volume={30},
		number={2},
		pages={126--139},
		year={2004},
		publisher={IEEE}
	}
	
	@incollection{sunye2001refactoring,
		title={Refactoring UML models},
		author={Suny{\'e}, Gerson and Pollet, Damien and Le Traon, Yves and J{\'e}z{\'e}quel, Jean-Marc},
		booktitle={{UML}2001—The Unified Modeling Language. Modeling Languages, Concepts, and Tools},
		pages={134--148},
		year={2001},
		publisher={Springer}
	}
	
	
	@incollection{rose2010comparison,
		title={A comparison of model migration tools},
		author={Rose, Louis M and Herrmannsdoerfer, Markus and Williams, James R and Kolovos, Dimitrios S and Garc{\'e}s, Kelly and Paige, Richard F and Polack, Fiona AC},
		booktitle={MODELS},
		pages={61--75},
		year={2010},
		publisher={Springer}
	}
	
	@CONFERENCE {ReginaApsec2015,
		author    = {Regina Hebig and Djamel Eddine Khelladi and Reda Bendraou},
		title     = {Surveying the Corpus of Model Resolution Strategies for Metamodel Evolution},
		booktitle = {The 22nd Asia-Pacific Software Engineering Conference {APSEC}},
		year      = {2015}
	}
	
	@article{demuth2015constraint,
		title={Constraint-driven modeling through transformation},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		journal={Software \& Systems Modeling},
		volume={14},
		number={2},
		pages={573--596},
		year={2015},
		publisher={Springer}
	}
	
	
	
	@inproceedings{toulme2006presentation,
		title={Presentation of EMF compare utility},
		author={Toulm{\'e}, Antoine and Inc, I},
		booktitle={Eclipse Modeling Symposium},
		pages={1--8},
		year={2006}
	}
	
	@inproceedings{xing2005umldiff,
		title={UMLDiff: an algorithm for object-oriented design differencing},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
		pages={54--65},
		year={2005},
		organization={ACM}
	}
	
	@article{lin2007dsmdiff,
		title={DSMDiff: a differentiation tool for domain-specific models},
		author={Lin, Yuehua and Gray, Jeff and Jouault, Fr{\'e}d{\'e}ric},
		journal={European Journal of Information Systems},
		volume={16},
		number={4},
		pages={349--361},
		year={2007},
		publisher={Nature Publishing Group}
	}
	
	
	@inproceedings{di2011needed,
		title={What is needed for managing co-evolution in mde?},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
		pages={30--38},
		year={2011},
		organization={ACM}
	}
	
	@article{levendovszky2014semi,
		title={A semi-formal description of migrating domain-specific models with evolving domains},
		author={Levendovszky, Tihamer and Balasubramanian, Daniel and Narayanan, Anantha and Shi, Feng and van Buskirk, Chris and Karsai, Gabor},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={807--823},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{blanc2008detecting,
		title={Detecting model inconsistency through operation-based model construction},
		author={Blanc, Xavier and Mounier, Isabelle and Mougenot, Alix and Mens, Tom},
		booktitle={Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference on},
		pages={511--520},
		year={2008},
		organization={IEEE}
	}
	
	@incollection{cabot2004automatic,
		title={Automatic integrity constraint evolution due to model subtract operations},
		author={Cabot, Jordi and Conesa, Jordi},
		booktitle={Conceptual Modeling for Advanced Application Domains},
		pages={350--362},
		year={2004},
		publisher={Springer}
	}
	
	@inproceedings{buttner2005towards,
		title={Towards transformation of integrity constraints and database states},
		author={B{\"u}ttner, Fabian and Bauerdick, Hanna and Gogolla, Martin},
		booktitle={Database and Expert Systems Applications, 2005. Proceedings. Sixteenth International Workshop on},
		pages={823--828},
		year={2005},
		organization={IEEE}
	}
	
	@article{cabot2007transformation,
		title={Transformation techniques for OCL constraints},
		author={Cabot, Jordi and Teniente, Ernest},
		journal={Science of Computer Programming},
		volume={68},
		number={3},
		pages={179--195},
		year={2007},
		publisher={Elsevier}
	}
	
	
	@article{kuselsystematic,
		title={A Systematic Taxonomy of Metamodel Evolution Impacts on OCL Expressions},
		author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={Workshop on Models and Evolution at {MODELS}},
		year={ME@MODELS, 2015}
	}
	
	@book{kleppe2003mda,
		title={MDA explained: the model driven architecture: practice and promise},
		author={Kleppe, Anneke G and Warmer, Jos B and Bast, Wim},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@article{clarke1996formal,
		title={Formal methods: State of the art and future directions},
		author={Clarke, Edmund M and Wing, Jeannette M},
		journal={ACM Computing Surveys (CSUR)},
		volume={28},
		number={4},
		pages={626--643},
		year={1996},
		publisher={ACM}
	}
	
	@book{clarke1999model,
		title={Model checking},
		author={Clarke, Edmund M and Grumberg, Orna and Peled, Doron},
		year={1999},
		publisher={MIT press}
	}
	
	@book{volter2013model,
		title={Model-driven software development: technology, engineering, management},
		author={Volter, Markus and Stahl, Thomas and Bettin, Jorn and Haase, Arno and Helsen, Simon},
		year={2013},
		publisher={John Wiley \& Sons}
	}
	
	@incollection{cabot2007declarative,
		title={From declarative to imperative UML/OCL operation specifications},
		author={Cabot, Jordi},
		booktitle={Conceptual Modeling-ER 2007},
		pages={198--213},
		year={2007},
		publisher={Springer}
	}
	
	@article{rose2014epsilon,
		title={Epsilon Flock: a model migration language},
		author={Rose, Louis M and Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC and Poulding, Simon},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={735--755},
		year={2014},
		publisher={Springer}
	}
	
	
	
	@MISC{GMF,
		author = {GMP},
		title = {Graphical Modeling Project. Graphical Modeling Framework (GMF).},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/gmp/}}
	}
	
	@MISC{OMG,
		author = {OMG},
		title = {Object Management Group.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/}}
	}
	
	@MISC{SMM,
		author = {OMG},
		title = {Structured Metrics Metamodel.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/SMM/}}
	}
	
	
	@MISC{UPDM,
		author = {OMG},
		title = {Unified Profile for the Department of Defense Architecture Framework (DoDAF) and the Ministry of Defence Architecture Framework (MODAF).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/UPDM/}}
	}
	
	@MISC{NIEM,
		author = {OMG},
		title = {UML Profile for National Information Exchange Model.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/NIEM-UML/}}
	}
	
	@MISC{EXPRESS,
		author = {OMG},
		title = {Reference Metamodel for the EXPRESS Information Modeling Language.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/EXPRESS/}}
	}
	
	@MISC{ReqIF,
		author = {OMG},
		title = {Requirements Interchange Format.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/ReqIF/}}
	}
	
	@inproceedings{jouault2005transforming,
		title={Transforming models with ATL},
		author={Jouault, Fr{\'e}d{\'e}ric and Kurtev, Ivan},
		booktitle={satellite events at the MoDELS 2005 Conference},
		pages={128--138},
		year={2005},
		organization={Springer}
	}
	
	@incollection{kolovos2008epsilon,
		title={The epsilon transformation language},
		author={Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC},
		booktitle={Theory and practice of model transformations},
		pages={46--60},
		year={2008},
		publisher={Springer}
	}
	
	
	@incollection{herrmannsdoerfer_language_2010,
		title = {Language Evolution in Practice: The History of {GMF}},
		copyright = {©2010 Springer-Verlag Berlin Heidelberg},
		isbn = {978-3-642-12106-7, 978-3-642-12107-4},
		shorttitle = {Language Evolution in Practice},
		urldate = {2014-04-30},
		booktitle = {Software Language Engineering},
		author = {Herrmannsdoerfer, Markus and Ratiu, Daniel and Wachsmuth, Guido},
		editor = {Brand, Mark van den and Gasevic, Dragan and Gray, Jeff},
		month = jan,
		year = {2010},
		keywords = {Logics and Meanings of Programs, Management of Computing and Information Systems, Programming Languages, Compilers, Interpreters, Simulation and Modeling, Software engineering},
		pages = {3--22}
	}
	
	
	
	@inproceedings{bendraou2012support,
		title={Support for Deviation Detections in the Context of Multi-Viewpoint-Based Development Processes.},
		author={Bendraou, Reda and da Silva, Marcos Aur{\'e}lio Almeida and Gervais, Marie-Pierre and Blanc, Xavier},
		booktitle={CAiSE},
		pages={23--31},
		year={2012}
	}
	
	@inproceedings{blanc2009incremental,
		title={Incremental detection of model inconsistencies based on model operations},
		author={Blanc, Xavier and Mougenot, Alix and Mounier, Isabelle and Mens, Tom},
		booktitle={CAiSE},
		pages={32--46},
		year={2009},
		organization={Springer}
	}
	
	@inproceedings{da2011deviation,
		title={Deviation management during process execution},
		author={da Silva, Marcos Aurelio Almeida and Blanc, Xavier and Bendraou, Reda},
		booktitle={26th IEEE/ACM ASE},
		pages={528--531},
		year={2011}
	}
	
	@phdthesis{mougenot2010praxis,
		title={Praxis: Detection of inconsistency within distributed models},
		author={Mougenot, Alix},
		year={2010},
		school={Paris 6}
	}
	
	@inproceedings{Kessentini2016automated,
		title={Automated Metamodel/Model Co-Evolution using a Multi-Objective Optimization Approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		booktitle={12th ECMFA},
		year={2016}
	}
	
	
	
	@inproceedings{bruneliere2015lightweight,
		title={On Lightweight Metamodel Extension to Support Modeling Tools Agility},
		author={Bruneliere, Hugo and Garcia, Jokin and Desfray, Philippe and Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Cabot, Jordi},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={62--74},
		year={2015},
		organization={Springer}
	}
	
	@inproceedings{khelladi2016supporting,
		title={Supporting the co-adaption of process properties},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
		booktitle={Proceedings of the International Workshop on Software and Systems Process},
		pages={1--5},
		year={2016},
		organization={ACM}
	}
	
	@inproceedings{khelladi2015framework,
		title={A framework to formally verify conformance of a software process to a software method},
		author={Khelladi, Djamel-Eddine and Bendraou, Reda and Baarir, Souheib and Laurent, Yoann and Gervais, Marie-Pierre},
		booktitle={The 30th Symposium on Applied Computing},
		pages={1518--1525},
		year={2015},
		organization={ACM}
	}
	
	@article{khelladi2016detecting,
		title={Detecting complex changes and refactorings during (meta) model evolution},
		author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
		journal={Information Systems},
		year={2016},
		publisher={Elsevier}
	}
	
	
	
	@inproceedings{khelladi2016ad,
		title={Ad-room: a tool for automatic detection of refactorings in object-oriented models},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
		booktitle={ICSE Companion},
		pages={617--620},
		year={2016},
		organization={ACM}
	}
	
	
	
	@book{kelly2008domain,
		title={Domain-specific modeling: enabling full code generation},
		author={Kelly, Steven and Tolvanen, Juha-Pekka},
		year={2008},
		publisher={John Wiley \& Sons}
	}
	
	@inproceedings{jouault2006km3,
		title={KM3: a DSL for Metamodel Specification},
		author={Jouault, Fr{\'e}d{\'e}ric and B{\'e}zivin, Jean},
		booktitle={International Conference on Formal Methods for Open Object-Based Distributed Systems},
		pages={171--185},
		year={2006},
		organization={Springer}
	}
	
	@book{witten2005data,
		title={Data Mining: Practical machine learning tools and techniques},
		author={Witten, Ian H and Frank, Eibe},
		year={2005},
		publisher={Morgan Kaufmann}
	}
	
	@book{deb2001multi,
		title={Multi-objective optimization using evolutionary algorithms},
		author={Deb, Kalyanmoy},
		volume={16},
		year={2001},
		publisher={John Wiley \& Sons}
	}
	
	@incollection{deb2014multi,
		title={Multi-objective optimization},
		author={Deb, Kalyanmoy},
		booktitle={Search methodologies},
		pages={403--449},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{schoenboeck2014care,
		title={CARE: A Constraint-based Approach for Re-establishing Conformance-relationships},
		author={Schoenboeck, Johannes and Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Schwinger, Wieland and Wimmer, Manuel and Wischenbart, Martin},
		booktitle={Proceedings of the Tenth Asia-Pacific Conference on Conceptual Modelling-Volume 154},
		pages={19--28},
		year={2014},
		organization={Australian Computer Society, Inc.}
	}
	
	
	@article{kitchenham2004procedures,
		title={Procedures for performing systematic reviews},
		author={Kitchenham, Barbara},
		journal={Keele, UK, Keele University},
		volume={33},
		number={2004},
		pages={1--26},
		year={2004}
	}
	
	
	@inproceedings{correa2004applying,
		title={Applying refactoring techniques to UML/OCL models},
		author={Correa, Alexandre and Werner, Cl{\'a}udia},
		booktitle={UML},
		pages={173--187},
		year={2004},
		organization={Springer}
	}
	
	
	
	@inproceedings{schonbock2015model,
		title={Model-Driven Co-evolution for Agile Development},
		author={Sch{\"o}nb{\"o}ck, Johannes and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Kusel, Angelika and Retschitzegger, Werner and Schwinger, Wieland},
		booktitle={System Sciences (HICSS), 48th Hawaii International Conference on},
		pages={5094--5103},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{reimann2012tool,
		title={Tool supported OCL refactoring catalogue},
		author={Reimann, Jan and Wilke, Claas and Demuth, Birgit and Muck, Michael and A{\ss}mann, Uwe},
		booktitle={Proceedings of the 12th Workshop on OCL and Textual Modelling},
		pages={7--12},
		year={2012},
		organization={ACM}
	}
	
	@inproceedings{khelladi2016SAC-OCL,
		title={SAC-OCL: A Tool for A Semi Automatic Co-evolution of OCL Constraints},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
		booktitle={Demonstraions@MODELS},
		pages={40--47},
		year={2016}
	}
	
	
	
	@inproceedings{hassam2010adapting,
		title={Adapting ocl constraints after a refactoring of their model using an mde process},
		author={Hassam, Kahina and Sadou, Salah and Fleurquin, R{\'e}gis},
		booktitle={9th edition of the BElgian-NEtherlands software eVOLution seminar (BENEVOL 2010)},
		pages={16--27},
		year={2010}
	}
	
	@inproceedings{demuth2011cross,
		title={Cross-layer modeler: a tool for flexible multilevel modeling with consistency checking},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		booktitle={The 19th ACM SIGSOFT FSE and the 13th ESEC},
		pages={452--455},
		year={2011}
	}
	
	@inproceedings{demuth2012enabling,
		title={Enabling dynamic metamodels through constraint-driven modeling},
		author={Demuth, Andreas},
		booktitle={Proceedings of the 34th International Conference on Software Engineering},
		pages={1622--1624},
		year={2012},
		organization={IEEE Press}
	}
	
	@article{demuth2015constraint,
		title={Constraint-driven modeling through transformation},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		journal={Software \& Systems Modeling},
		volume={14},
		number={2},
		pages={573--596},
		year={2015},
		publisher={Springer}
	}
	
	
	@article{mengerink2016complete,
		title={A complete operator library for DSL evolution specification},
		author={Mengerink, JGM and Serebrenik, A and Schiffelers, RRH and van den Brand, MGJ},
		year={2016},
		publisher={ICSME}
	}
	
	@article{harman2012search,
		title={Search-based software engineering: Trends, techniques and applications},
		author={Harman, Mark and Mansouri, S Afshin and Zhang, Yuanyuan},
		journal={ACM Computing Surveys},
		volume={45},
		number={1},
		pages={11},
		year={2012},
		publisher={ACM}
	}
	
	
	
	@incollection{liebel2014assessing,
		title={Assessing the state-of-practice of model-based engineering in the embedded systems domain},
		author={Liebel, Grischa and Marko, Nadja and Tichy, Matthias and Leitner, Andrea and Hansson, J{\"o}rgen},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={166--182},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{shirtz2007adopting,
		title={Adopting model driven development in a large financial organization},
		author={Shirtz, Dov and Kazakov, Michael and Shaham-Gafni, Yael},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={172--183},
		year={2007},
		organization={Springer}
	}
	
	
	
	@incollection{herrmannsdorfer2014coupled,
		title={Coupled evolution of software metamodels and models},
		author={Herrmannsd{\"o}rfer, Markus and Wachsmuth, Guido},
		booktitle={Evolving Software Systems},
		pages={33--63},
		year={2014},
		publisher={Springer}
	}
	
	@article{rose2014graph,
		title={Graph and model transformation tools for model migration},
		author={Rose, Louis M and Herrmannsdoerfer, Markus and Mazanek, Steffen and Van Gorp, Pieter and Buchwald, Sebastian and Horn, Tassilo and Kalnina, Elina and Koch, Andreas and Lano, Kevin and Sch{\"a}tz, Bernhard and others},
		journal={Software \& Systems Modeling},
		volume={13},
		number={1},
		pages={323--359},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{usman2008survey,
		title={A survey of consistency checking techniques for UML models},
		author={Usman, Muhammad and Nadeem, Aamer and Kim, Tai-hoon and Cho, Eun-suk},
		booktitle={Advanced Software Engineering and Its Applications, 2008. ASEA 2008},
		pages={57--62},
		year={2008},
		organization={IEEE}
	}
	
	
	@inproceedings{cabot2006constraint,
		title={Constraint Support in MDA tools: a Survey},
		author={Cabot, Jordi and Teniente, Ernest},
		booktitle={European Conference on Model Driven Architecture-Foundations and Applications},
		pages={256--267},
		year={2006},
		organization={Springer}
	}
	
	@article{toval2003emerging,
		title={Emerging OCL tools},
		author={Toval, Ambrosio and Requena, V{\'\i}ctor and Fern{\'a}ndez, Jos{\'e} Luis},
		journal={Software \& Systems Modeling},
		volume={2},
		number={4},
		pages={248--261},
		year={2003},
		publisher={Springer}
	}
	
	@inproceedings{li2007test,
		title={Test case automate generation from UML sequence diagram and OCL expression},
		author={Li, Bao-Lin and Li, Zhi-shu and Qing, Li and Chen, Yan-Hong},
		booktitle={Computational Intelligence and Security, 2007 International Conference on},
		pages={1048--1052},
		year={2007},
		organization={IEEE}
	}
	
	@article{ali2013generating,
		title={Generating test data from OCL constraints with search techniques},
		author={Ali, Shaukat and Iqbal, Muhammad Zohaib and Arcuri, Andrea and Briand, Lionel C},
		journal={IEEE Transactions on Software Engineering},
		volume={39},
		number={10},
		pages={1376--1402},
		year={2013},
		publisher={IEEE}
	}
	
	@article{frisch2008essence,
		title={Essence: A constraint language for specifying combinatorial problems},
		author={Frisch, Alan M and Harvey, Warwick and Jefferson, Chris and Mart{\'\i}nez-Hern{\'a}ndez, Bernadette and Miguel, Ian},
		journal={Constraints},
		volume={13},
		number={3},
		pages={268--306},
		year={2008},
		publisher={Springer}
	}
	
	@article{mens2006taxonomy,
		title={A taxonomy of model transformation},
		author={Mens, Tom and Van Gorp, Pieter},
		journal={Electronic Notes in Theoretical Computer Science},
		volume={152},
		pages={125--142},
		year={2006},
		publisher={Elsevier}
	}
	
	@inproceedings{konemann2010semantic,
		title={Semantic grouping of model changes},
		author={K{\"o}nemann, Patrick},
		booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
		pages={50--55},
		year={2010},
		organization={ACM}
	}
	
	@article{kessentini2016search,
		title={Search-based detection of model level changes},
		author={Kessentini, Marouane and Mansoor, Usman and Wimmer, Manuel and Ouni, Ali and Deb, Kalyanmoy},
		journal={Empirical Software Engineering},
		pages={1--46},
		year={2016},
		publisher={Springer}
	}
	
	@inproceedings{ben2012search,
		title={Search-based detection of high-level model changes},
		author={ben Fadhel, Ameni and Kessentini, Marouane and Langer, Philip and Wimmer, Manuel},
		booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
		pages={212--221},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{kehrer2012understanding,
		title={Understanding model evolution through semantically lifting model differences with SiLift},
		author={Kehrer, Timo and Kelter, Udo and Ohrndorf, Manuel and Sollbach, Tim},
		booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
		pages={638--641},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{koshima2015rucord,
		title={RuCORD: Rule-based composite operation recovering and detection to support cooperative edition of (Meta) models},
		author={Koshima, Amanuel and Englebert, Vincent},
		booktitle={Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
		pages={1--7},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{mendez2012effective,
		title={Effective detection of model changes},
		author={M{\'e}ndez-Acu{\~n}a, David and Casallas, Rubby},
		booktitle={Computing Congress (CCC), 2012 7th Colombian},
		pages={1--5},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{herrmannsdoerfer2010towards,
		title={Towards a generic operation recorder for model evolution},
		author={Herrmannsdoerfer, Markus and Koegel, Maximilian},
		booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
		pages={76--81},
		year={2010},
		organization={ACM}
	}
	
	@inproceedings{herrmannsdoerfer2009operation,
		title={Operation-based versioning of metamodels with COPE},
		author={Herrmannsdoerfer, Markus},
		booktitle={Comparison and Versioning of Software Models, 2009. CVSM'09. ICSE Workshop on},
		pages={49--54},
		year={2009},
		organization={IEEE}
	}
	
	@article{cicchetti2007metamodel,
		title={A metamodel independent approach to difference representation.},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
		journal={Journal of Object Technology},
		volume={6},
		number={9},
		pages={165--185},
		year={2007}
	}
	
	@inproceedings{cicchetti2008meta,
		title={Meta-model differences for supporting model co-evolution},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd Workshop on Model-Driven Software Evolution-MODSE},
		pages={1--10},
		year={2008}
	}
	
	@inproceedings{xing2005umldiff,
		title={UMLDiff: an algorithm for object-oriented design differencing},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
		pages={54--65},
		year={2005},
		organization={ACM}
	}
	
	@inproceedings{xing2010model,
		title={Model comparison with GenericDiff},
		author={Xing, Zhenchang},
		booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
		pages={135--138},
		year={2010},
		organization={ACM}
	}
	
	@article{zhang2017detection,
		title={Detection of Composite Operation in Model Management},
		author={Zhang, Renwei and Qin, Zheng and Song, Houbing and Li, Shengnan and Yang, Xiao},
		journal={IEEE Access},
		volume={5},
		pages={771--780},
		year={2017},
		publisher={IEEE}
	}
	
	@inproceedings{kehrer2013consistency,
		title={Consistency-preserving edit scripts in model versioning},
		author={Kehrer, Timo and Kelter, Udo and Taentzer, Gabriele},
		booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
		pages={191--201},
		year={2013},
		organization={IEEE}
	}
	
	@inproceedings{boger2002refactoring,
		title={Refactoring browser for UML},
		author={Boger, Marko and Sturm, Thorsten and Fragemann, Per},
		booktitle={Net. ObjectDays: International Conference on Object-Oriented and Internet-Based Technologies, Concepts, and Applications for a Networked World},
		pages={366--377},
		year={2002},
		organization={Springer}
	}
	
	@article{altmanninger2009survey,
		title={A survey on model versioning approaches},
		author={Altmanninger, Kerstin and Seidl, Martina and Wimmer, Manuel},
		journal={International Journal of Web Information Systems},
		volume={5},
		number={3},
		pages={271--304},
		year={2009},
		publisher={Emerald Group Publishing Limited}
	}
	
	@book{kelly2008domain,
		title={Domain-specific modeling: enabling full code generation},
		author={Kelly, Steven and Tolvanen, Juha-Pekka},
		year={2008},
		publisher={John Wiley \& Sons}
	}
	
	@article{whittle2014state,
		title={The state of practice in model-driven engineering},
		author={Whittle, Jon and Hutchinson, John and Rouncefield, Mark},
		journal={IEEE software},
		volume={31},
		number={3},
		pages={79--85},
		year={2014},
		publisher={IEEE}
	}
	
	@article{utting2012taxonomy,
		title={A taxonomy of model-based testing approaches},
		author={Utting, Mark and Pretschner, Alexander and Legeard, Bruno},
		journal={Software Testing, Verification and Reliability},
		volume={22},
		number={5},
		pages={297--312},
		year={2012},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{pretschner2005model,
		title={Model-based testing},
		author={Pretschner, Alexander},
		booktitle={Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference on},
		pages={722--723},
		year={2005},
		organization={IEEE}
	}
	
	
	
	@inproceedings{taentzer2013customizable,
		title={Customizable model migration schemes for meta-model evolutions with multiplicity changes},
		author={Taentzer, Gabriele and Mantz, Florian and Arendt, Thorsten and Lamo, Yngve},
		booktitle={International Conference on Model Driven Engineering Languages and Systems},
		pages={254--270},
		year={2013},
		organization={Springer}
	}
	
	@inproceedings{altmanninger2008amor,
		title={AMOR--towards adaptable model versioning},
		author={Altmanninger, Kerstin and Kappel, Gerti and Kusel, Angelika and Retschitzegger, Werner and Seidl, Martina and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={1st International Workshop on Model Co-Evolution and Consistency Management, in conjunction with MODELS},
		volume={8},
		pages={4--50},
		year={2008}
	}
	
	@inproceedings{kogel2008towards,
		title={Towards software configuration management for unified models},
		author={K{\"o}gel, Maximilian},
		booktitle={Proceedings of the 2008 international workshop on Comparison and versioning of software models},
		pages={19--24},
		year={2008},
		organization={ACM}
	}
	
	@inproceedings{alkhazi2016automated,
		title={Automated refactoring of ATL model transformations: a search-based approach},
		author={Alkhazi, Bader and Ruas, Terry and Kessentini, Marouane and Wimmer, Manuel and Grosky, William I},
		booktitle={The ACM/IEEE 19th MODELS},
		pages={295--304},
		year={2016}
	}
	
	
	
	@inproceedings{di2013methodological,
		title={A methodological approach for the coupled evolution of metamodels and atl transformations},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={ICMT},
		pages={60--75},
		year={2013},
		organization={Springer}
	}
	
	@inproceedings{di2014dealing,
		title={Dealing with the Coupled Evolution of Metamodels and Model-to-text Transformations.},
		author={Di Rocco, Juri and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={ME@ MoDELS},
		pages={22--31},
		year={2014}
	}
	
	@inproceedings{salman2015students,
		title={Are students representatives of professionals in software engineering experiments?},
		author={Salman, Iflaah and Misirli, Ayse Tosun and Juristo, Natalia},
		booktitle={ICSE-Volume 1},
		pages={666--676},
		year={2015},
		organization={IEEE Press}
	}
	
	@inproceedings{runeson2003using,
		title={Using students as experiment subjects--an analysis on graduate and freshmen student data},
		author={Runeson, Per},
		booktitle={Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering},
		pages={95--102},
		year={2003}
	}
	
	@article{host2000using,
		title={Using students as subjects—a comparative study of students and professionals in lead-time impact assessment},
		author={H{\"o}st, Martin and Regnell, Bj{\"o}rn and Wohlin, Claes},
		journal={Empirical Software Engineering},
		volume={5},
		number={3},
		pages={201--214},
		year={2000},
		publisher={Springer}
	}
	
	@inproceedings{berander2004using,
		title={Using students as subjects in requirements prioritization},
		author={Berander, Patrik},
		booktitle={Empirical Software Engineering, 2004. ISESE'04. Proceedings. 2004 International Symposium on},
		pages={167--176},
		year={2004},
		organization={IEEE}
	}
	
	@inproceedings{svahnberg2008using,
		title={Using students as subjects-an empirical evaluation},
		author={Svahnberg, Mikael and Aurum, Ayb{\"u}ke and Wohlin, Claes},
		booktitle={2nd ESEM},
		pages={288--290},
		year={2008},
		organization={ACM}
	}
	
	@article{mendez2010towards,
		title={Towards transformation migration after metamodel evolution},
		author={Mendez, David and Etien, Anne and Muller, Alexis and Casallas, Rubby},
		journal={ME Wokshop@MODELS},
		year={2010}
	}
	
	****************
	
	@article{jakumeit2014survey,
		title={A survey and comparison of transformation tools based on the transformation tool contest},
		author={Jakumeit, Edgar and Buchwald, Sebastian and Wagelaar, Dennis and Dan, Li and Heged{\"u}s, {\'A}bel and Herrmannsd{\"o}rfer, Markus and Horn, Tassilo and Kalnina, Elina and Krause, Christian and Lano, Kevin and others},
		journal={Science of computer programming},
		volume={85},
		pages={41--99},
		year={2014},
		publisher={Elsevier}
	}
	
	
	@article{taentzer2005model,
		title={Model transformation by graph transformation: A comparative study},
		author={Taentzer, Gabriele and Ehrig, Karsten and Guerra, Esther and Lara, Juan de and Lengyel, Laszlo and Levendovszky, Tihamer and Prange, Ulrike and Varr{\'o}, D{\'a}niel and Varr{\'o}-Gyapay, Szilvia},
		year={2005}
	}
	
	@inproceedings{gronmo2009comparison,
		title={Comparison of three model transformation languages},
		author={Gr{\o}nmo, Roy and M{\o}ller-Pedersen, Birger and Olsen, G{\o}ran K},
		booktitle={ECMDA-FA},
		pages={2--17},
		year={2009},
		organization={Springer}
	}
	
	@article{perez2010case,
		title={A case study to evaluate the suitability of graph transformation tools for program refactoring},
		author={P{\'e}rez, Javier and Crespo, Yania and Hoffmann, Berthold and Mens, Tom},
		journal={International Journal on Software Tools for Technology Transfer (STTT)},
		volume={12},
		number={3},
		pages={183--199},
		year={2010},
		publisher={Springer}
	}
	
	@inproceedings{rose2010comparing,
		title={Comparing model-metamodel and transformation-metamodel coevolution},
		author={Rose, Louis and Etien, Anne and Mendez, David and Kolovos, Dimitrios and Paige, Richard and Polack, Fiona},
		booktitle={International workshop on models and evolutions},
		year={2010}
	}
	
	@article{sendall2003model,
		title={Model transformation: The heart and soul of model-driven software development},
		author={Sendall, Shane and Kozaczynski, Wojtek},
		journal={IEEE software},
		volume={20},
		number={5},
		pages={42--45},
		year={2003},
		publisher={IEEE}
	}
	
	@inproceedings{czarnecki2003classification,
		title={Classification of model transformation approaches},
		author={Czarnecki, Krzysztof and Helsen, Simon},
		booktitle={Proceedings of the 2nd OOPSLA Workshop on Generative Techniques in the Context of the Model Driven Architecture},
		volume={45},
		number={3},
		pages={1--17},
		year={2003},
		organization={USA}
	}
	
	@article{mens2006taxonomy,
		title={A taxonomy of model transformation},
		author={Mens, Tom and Van Gorp, Pieter},
		journal={Electronic Notes in Theoretical Computer Science},
		volume={152},
		pages={125--142},
		year={2006},
		publisher={Elsevier}
	}
	
	@article{hemel2008code,
		title={Code generation by model transformation},
		author={Hemel, Zef and Kats, Lennart and Visser, Eelco},
		journal={Theory and Practice of Model Transformations},
		pages={183--198},
		year={2008},
		publisher={Springer}
	}
	
	@article{hemel2010code,
		title={Code generation by model transformation: a case study in transformation modularity},
		author={Hemel, Zef and Kats, Lennart CL and Groenewegen, Danny M and Visser, Eelco},
		journal={Software and Systems Modeling},
		volume={9},
		number={3},
		pages={375--402},
		year={2010},
		publisher={Springer}
	}
	
	@inproceedings{burger2010change,
		title={A Change Metamodel for the Evolution of MOF-Based Metamodels.},
		author={Burger, Erik and Gruschko, Boris},
		booktitle={Modellierung},
		volume={2010},
		pages={285--300},
		year={2010}
	}
	
	@article{mens2007analysing,
		title={Analysing refactoring dependencies using graph transformation},
		author={Mens, Tom and Taentzer, Gabriele and Runge, Olga},
		journal={Software and Systems Modeling},
		volume={6},
		number={3},
		pages={269},
		year={2007},
		publisher={Springer}
	}
	
	@article{zhang2005generic,
		title={Generic and domain-specific model refactoring using a model transformation engine},
		author={Zhang, Jing and Lin, Yuehua and Gray, Jeff},
		journal={Model-driven Software Development},
		volume={23},
		year={2005},
		publisher={Springer}
	}
	
	
	
	@inproceedings{hebig2015surveying,
		title={Surveying the corpus of model resolution strategies for metamodel evolution},
		author={Hebig, Regina and Khelladi, Djamel Eddine and Bendraou, Reda},
		booktitle={2015 Asia-Pacific Software Engineering Conference (APSEC)},
		pages={135--142},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{khelladi2017exploratory,
		title={An Exploratory Experiment on Metamodel-Transformation Co-Evolution},
		author={Khelladi, Djamel Eddine and Rodriguez, Horacio Hoyos and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Asia-Pacific Software Engineering Conference (APSEC), 2017 24th},
		pages={576--581},
		year={2017},
		organization={IEEE}
	}
	
	@inproceedings{combemale2007towards,
		title={Towards a Formal Verification of Process Model's Properties-SimplePDL and TOCL Case Study},
		author={Combemale, Beno{\^\i}t and Garoche, Pierre-Lo{\"\i}c and Cr{\'e}gut, Xavier and Thirioux, Xavier and Vernadat, Fran{\c{c}}ois},
		booktitle={9th International Conference on Enterprise Information Systems},
		pages={80--89},
		year={2007}
	}
	
	@inproceedings{cregut2010generative,
		title={Generative technologies for model animation in the TopCased platform},
		author={Cr{\'e}gut, Xavier and Combemale, Benoit and Pantel, Marc and Faudoux, Rapha{\"e}l and Pavei, Jonatas},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={90--103},
		year={2010},
		organization={Springer}
	}
	
	@inproceedings{hassan2004predicting,
		title={Predicting change propagation in software systems},
		author={Hassan, Ahmed E and Holt, Richard C},
		booktitle={Software maintenance, 2004. proceedings. 20th ieee international conference on},
		pages={284--293},
		year={2004},
		organization={IEEE}
	}
	
	
	@inproceedings{vcubranic2003hipikat,
		title={Hipikat: Recommending pertinent software development artifacts},
		author={{\v{C}}ubrani{\'c}, Davor and Murphy, Gail C},
		booktitle={Proceedings of the 25th international Conference on Software Engineering},
		pages={408--418},
		year={2003},
		organization={IEEE Computer Society}
	}
	
	@inproceedings{robillard2002concern,
		title={Concern graphs: finding and describing concerns using structural program dependencies},
		author={Robillard, MR and Murphy, Gail C},
		booktitle={Software Engineering, 2002. ICSE 2002. Proceedings of the 24rd International Conference on},
		pages={406--416},
		year={2002},
		organization={IEEE}
	}
	
	@article{vieira2016towards,
		title={Towards Measuring the Change Impact in ATL Model Transformations},
		author={Vieira, Andreza and Ramalho, Franklin},
		journal={International Journal of Software Engineering and Knowledge Engineering},
		volume={26},
		number={02},
		pages={153--181},
		year={2016},
		publisher={World Scientific}
	}
	
	@inproceedings{vieira2014metrics,
		title={Metrics to measure the change impact in ATL model transformations},
		author={Vieira, Andreza and Ramalho, Franklin},
		booktitle={International Conference on Product-Focused Software Process Improvement},
		pages={254--268},
		year={2014},
		organization={Springer}
	}
	
	@inproceedings{di2011needed,
		title={What is needed for managing co-evolution in mde?},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
		pages={30--38},
		year={2011},
		organization={ACM}
	}
	
	@article{cuadrado2018quick,
		title={Quick fixing ATL transformations with speculative analysis},
		author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
		journal={Software \& Systems Modeling},
		pages={1--35},
		year={2018},
		publisher={Springer}
	}
	
	@inproceedings{cuadrado2015quick,
		title={Quick fixing ATL model transformations},
		author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
		booktitle={2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={146--155},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{di2017feature,
		title={A feature-based approach for variability exploration and resolution in model transformation migration},
		author={Di Ruscio, Davide and Etzlstorfer, Juergen and Iovino, Ludovico and Pierantonio, Alfonso and Schwinger, Wieland},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={71--89},
		year={2017},
		organization={Springer}
	}
	
	
	
	@article{van2000domain,
		title={Domain-specific languages: An annotated bibliography},
		author={Van Deursen, Arie and Klint, Paul and Visser, Joost},
		journal={ACM Sigplan Notices},
		volume={35},
		number={6},
		pages={26--36},
		year={2000},
		publisher={ACM}
	}
	
	@book{gronback2009eclipse,
		title={Eclipse modeling project: a domain-specific language (DSL) toolkit},
		author={Gronback, Richard C},
		year={2009},
		publisher={Pearson Education}
	}
	
	
	@article{geiger2007emf,
		title={EMF code generation with Fujaba},
		author={Geiger, Leif and Buchmann, Thomas and Dotor, Alexander},
		journal={Fujaba days},
		pages={25--29},
		year={2007}
	}
	
	
	
	
	
	
	@book{fowler2010domain,
		title={Domain-specific languages},
		author={Fowler, Martin},
		year={2010},
		publisher={Pearson Education}
	}
	
	@article{monperrus2018automatic,
		title={Automatic software repair: a bibliography},
		author={Monperrus, Martin},
		journal={ACM Computing Surveys (CSUR)},
		volume={51},
		number={1},
		pages={17},
		year={2018},
		publisher={ACM}
	}
	
	
	
	@inproceedings{khelladi2020onthepower,
		title={On the Power of Abstraction: a Model-Driven Co-evolution Approach of Software Code},
		author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier},
		booktitle={2020 IEEE/ACM 42st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)},
		year={2020}
	}
	
	
	
	
	
	
	@article{goues2019automated,
		title={Automated program repair},
		author={Goues, Claire Le and Pradel, Michael and Roychoudhury, Abhik},
		journal={Communications of the ACM},
		volume={62},
		number={12},
		pages={56--65},
		year={2019},
		publisher={ACM New York, NY, USA}
	}
	
	@inproceedings{liu2020efficiency,
		title={On the efficiency of test suite based program repair: A systematic assessment of 16 automated repair systems for java programs},
		author={Liu, Kui and Wang, Shangwen and Koyuncu, Anil and Kim, Kisub and Bissyand{\'e}, Tegawend{\'e} F and Kim, Dongsun and Wu, Peng and Klein, Jacques and Mao, Xiaoguang and Traon, Yves Le},
		booktitle={Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
		pages={615--627},
		year={2020}
	}
	
	@article{gazzola2017automatic,
		title={Automatic software repair: A survey},
		author={Gazzola, Luca and Micucci, Daniela and Mariani, Leonardo},
		journal={IEEE Transactions on Software Engineering},
		volume={45},
		number={1},
		pages={34--67},
		year={2017},
		publisher={IEEE}
	}
	
	@inproceedings{bohme2013regression,
		title={Regression tests to expose change interaction errors},
		author={B{\"o}hme, Marcel and Oliveira, Bruno C d S and Roychoudhury, Abhik},
		booktitle={Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
		pages={334--344},
		year={2013}
	}
	
	
	
	@article{kanakis2019empirical,
		title={An Empirical Study on the Impact of Inconsistency Feedback during Model and Code Co-changing.},
		author={Kanakis, Georgios and Khelladi, Djamel Eddine and Fischer, Stefan and Tr{\"o}ls, Michael and Egyed, Alexander},
		journal={The Journal of Object Technology},
		volume={18},
		number={2},
		pages={10--1},
		year={2019}
	}
	
	@inproceedings{khelladi2019detecting,
		title={Detecting and exploring side effects when repairing model inconsistencies},
		author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Proceedings of the 12th ACM SIGPLAN International Conference on Software Language Engineering},
		pages={113--126},
		year={2019}
	}
	
	
	
	%%%%%%%%%%% tests for validation %%%%%%%%%%%%%%%%%
	@inproceedings{10.1145/3395363.3397374,
		author = {Godefroid, Patrice and Lehmann, Daniel and Polishchuk, Marina},
		title = {Differential Regression Testing for REST APIs},
		year = {2020},
		isbn = {9781450380089},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/3395363.3397374},
		doi = {10.1145/3395363.3397374},
		abstract = {Cloud services are programmatically accessed through REST APIs. Since REST APIs are constantly evolving, an important problem is how to prevent breaking changes of APIs, while supporting several different versions. To find such breaking changes in an automated way, we introduce differential regression testing for REST APIs. Our approach is based on two observations. First, breaking changes in REST APIs involve two software components, namely the client and the service. As such, there are also two types of regressions: regressions in the API specification, i.e., in the contract between the client and the service, and regressions in the service itself, i.e., previously working requests are "broken" in later versions of the service. Finding both kinds of regressions involves testing along two dimensions: when the service changes and when the specification changes. Second, to detect such bugs automatically, we employ differential testing. That is, we compare the behavior of different versions on the same inputs against each other, and find regressions in the observed differences. For generating inputs (sequences of HTTP requests) to services, we use RESTler, a stateful fuzzer for REST APIs. Comparing the outputs (HTTP responses) of a cloud service involves several challenges, like abstracting over minor differences, handling out-of-order requests, and non-determinism. Differential regression testing across 17 different versions of the widely-used Azure networking APIs deployed between 2016 and 2019 detected 14 regressions in total, 5 of those in the official API specifications and 9 regressions in the services themselves.},
		booktitle = {Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis},
		pages = {312–323},
		numpages = {12},
		keywords = {REST APIs, client/service version matrix, differential regression testing, service regression, specification regression},
		location = {Virtual Event, USA},
		series = {ISSTA 2020}
	}
	@ARTICLE{9079197,
		author={Lamothe, Maxime and Shang, Weiyi and Chen, Tse-Hsun Peter},
		journal={IEEE Transactions on Software Engineering}, 
		title={A3: Assisting Android API Migrations Using Code Examples}, 
		year={2022},
		volume={48},
		number={2},
		pages={417-431},
		doi={10.1109/TSE.2020.2988396}}
	
	
	@inproceedings{10.1145/3387905.3388608,
		author = {Fazzini, Mattia and Xin, Qi and Orso, Alessandro},
		title = {APIMigrator: An API-Usage Migration Tool for Android Apps},
		year = {2020},
		isbn = {9781450379595},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/3387905.3388608},
		doi = {10.1145/3387905.3388608},
		abstract = {To provide their functionality, mobile apps interact extensively with the application programming interface (API) of the underlying operating system. Given that this API evolves frequently, app developers are periodically required to migrate API usages in their apps to ensure that the apps behave as expected when running on the new API. To help developers with this tedious, error-prone, and time-consuming task, we defined a technique for automated API migration and implemented it in a tool called APIMigrator that supports Android apps. APIMigrator (1) automatically migrates API usages within an app by leveraging how developers of other apps migrated corresponding API usages and (2) validates the migrations through differential testing. We evaluated APIMigrator on a benchmark of 15 real-world apps and obtained promising results. Overall, our tool was able to migrate 85% of the API usages considered and validate 68% of these migrations. We provide a demo video of the tool at https://youtu.be/v0VfpKi_IDc.},
		booktitle = {Proceedings of the IEEE/ACM 7th International Conference on Mobile Software Engineering and Systems},
		pages = {77–80},
		numpages = {4},
		keywords = {mobile apps, API analysis, API-usage migration},
		location = {Seoul, Republic of Korea},
		series = {MOBILESoft '20}
	}
	
	
	
	
	
	@inproceedings{10.5555/2486788.2486855,
		author = {Meng, Na and Kim, Miryung and McKinley, Kathryn S.},
		title = {LASE: Locating and Applying Systematic Edits by Learning from Examples},
		year = {2013},
		isbn = {9781467330763},
		publisher = {IEEE Press},
		abstract = {Adding features and fixing bugs often require sys- tematic edits that make similar, but not identical, changes to many code locations. Finding all the relevant locations and making the correct edits is a tedious and error-prone process for developers. This paper addresses both problems using edit scripts learned from multiple examples. We design and implement a tool called LASE that (1) creates a context-aware edit script from two or more examples, and uses the script to (2) automatically identify edit locations and to (3) transform the code. We evaluate LASE on an oracle test suite of systematic edits from Eclipse JDT and SWT. LASE finds edit locations with 99% precision and 89% recall, and transforms them with 91% accuracy. We also evaluate LASE on 37 example systematic edits from other open source programs and find LASE is accurate and effective. Furthermore, we confirmed with developers that LASE found edit locations which they missed. Our novel algorithm that learns from multiple examples is critical to achieving high precision and recall; edit scripts created from only one example produce too many false positives, false negatives, or both. Our results indicate that LASE should help developers in automating systematic editing. Whereas most prior work either suggests edit locations or performs simple edits, LASE is the first to do both for nontrivial program edits.},
		booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
		pages = {502–511},
		numpages = {10},
		location = {San Francisco, CA, USA},
		series = {ICSE '13}
	}
	@INPROCEEDINGS{6062100,
		author={Wu, Wei and Guéhéneuc, Yann-Gaël and Antoniol, Giuliano and Kim, Miryung},
		booktitle={2010 ACM/IEEE 32nd International Conference on Software Engineering}, 
		title={AURA: a hybrid approach to identify framework evolution}, 
		year={2010},
		volume={1},
		number={},
		pages={325-334},
		doi={10.1145/1806799.1806848}}
	
	
	@INPROCEEDINGS{5070565,
		author={Dagenais, Barthelemy and Robillard, Martin P.},
		booktitle={2009 IEEE 31st International Conference on Software Engineering}, 
		title={SemDiff: Analysis and recommendation support for API evolution}, 
		year={2009},
		volume={},
		number={},
		pages={599-602},
		doi={10.1109/ICSE.2009.5070565}}
	
	
	
	@inproceedings{10.1145/1869459.1869486,
		author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N.},
		title = {A Graph-Based Approach to API Usage Adaptation},
		year = {2010},
		isbn = {9781450302036},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/1869459.1869486},
		doi = {10.1145/1869459.1869486},
		abstract = {Reusing existing library components is essential for reducing the cost of software development and maintenance. When library components evolve to accommodate new feature requests, to fix bugs, or to meet new standards, the clients of software libraries often need to make corresponding changes to correctly use the updated libraries. Existing API usage adaptation techniques support simple adaptation such as replacing the target of calls to a deprecated API, however, cannot handle complex adaptations such as creating a new object to be passed to a different API method, or adding an exception handling logic that surrounds the updated API method calls.This paper presents LIBSYNC that guides developers in adapting API usage code by learning complex API usage adaptation patterns from other clients that already migrated to a new library version (and also from the API usages within the library's test code). LIBSYNC uses several graph-based techniques (1) to identify changes to API declarations by comparing two library versions, (2) to extract associated API usage skeletons before and after library migration, and (3) to compare the extracted API usage skeletons to recover API usage adaptation patterns. Using the learned adaptation patterns, LIBSYNC recommends the locations and edit operations for adapting API usages. The evaluation of LIBSYNC on real-world software systems shows that it is highly correct and useful with a precision of 100% and a recall of 91%.},
		booktitle = {Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications},
		pages = {302–321},
		numpages = {20},
		keywords = {software evolution, API evolution, API usage model, program differencing, API usage adaptation},
		location = {Reno/Tahoe, Nevada, USA},
		series = {OOPSLA '10}
	}
	
	@article{10.1145/1932682.1869486,
		author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N.},
		title = {A Graph-Based Approach to API Usage Adaptation},
		year = {2010},
		issue_date = {October 2010},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		volume = {45},
		number = {10},
		issn = {0362-1340},
		url = {https://doi.org/10.1145/1932682.1869486},
		doi = {10.1145/1932682.1869486},
		abstract = {Reusing existing library components is essential for reducing the cost of software development and maintenance. When library components evolve to accommodate new feature requests, to fix bugs, or to meet new standards, the clients of software libraries often need to make corresponding changes to correctly use the updated libraries. Existing API usage adaptation techniques support simple adaptation such as replacing the target of calls to a deprecated API, however, cannot handle complex adaptations such as creating a new object to be passed to a different API method, or adding an exception handling logic that surrounds the updated API method calls.This paper presents LIBSYNC that guides developers in adapting API usage code by learning complex API usage adaptation patterns from other clients that already migrated to a new library version (and also from the API usages within the library's test code). LIBSYNC uses several graph-based techniques (1) to identify changes to API declarations by comparing two library versions, (2) to extract associated API usage skeletons before and after library migration, and (3) to compare the extracted API usage skeletons to recover API usage adaptation patterns. Using the learned adaptation patterns, LIBSYNC recommends the locations and edit operations for adapting API usages. The evaluation of LIBSYNC on real-world software systems shows that it is highly correct and useful with a precision of 100% and a recall of 91%.},
		journal = {SIGPLAN Not.},
		month = {oct},
		pages = {302–321},
		numpages = {20},
		keywords = {software evolution, API evolution, API usage adaptation, API usage model, program differencing}
	}
	
	@inproceedings{10.1145/3194793.3194798,
		author = {Gerasimou, Simos and Kechagia, Maria and Kolovos, Dimitris and Paige, Richard and Gousios, Georgios},
		title = {On Software Modernisation Due to Library Obsolescence},
		year = {2018},
		isbn = {9781450357548},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/3194793.3194798},
		doi = {10.1145/3194793.3194798},
		abstract = {Software libraries, typically accessible through Application Programming Interfaces (APIs), enhance modularity and reduce development time. Nevertheless, their use reinforces system dependency on third-party software. When libraries become obsolete or their APIs change, performing the necessary modifications to dependent systems, can be time-consuming, labour intensive and error-prone. In this paper, we propose a methodology that reduces the effort developers must spend to mitigate library obsolescence. We describe the steps comprising the methodology, i.e., source code analysis, visualisation of hot areas, code-based transformation, and verification of the modified system. Also, we present some preliminary results and describe our plan for developing a fully automated software modernisation approach.},
		booktitle = {Proceedings of the 2nd International Workshop on API Usage and Evolution},
		pages = {6–9},
		numpages = {4},
		keywords = {application programming interfaces, library evolution, visualisation, software libraries, software modernisation},
		location = {Gothenburg, Sweden},
		series = {WAPI '18}
	}
	
	@inproceedings{10.1145/3510455.3512783,
		author = {Ochoa, Lina and Degueule, Thomas and Falleri, Jean-R\'{e}my},
		title = {BreakBot: Analyzing the Impact of Breaking Changes to Assist Library Evolution},
		year = {2022},
		isbn = {9781450392242},
		publisher = {Association for Computing Machinery},
		address = {New York, NY, USA},
		url = {https://doi.org/10.1145/3510455.3512783},
		doi = {10.1145/3510455.3512783},
		abstract = {"If we make this change to our code, how will it impact our clients?" It is difficult for library maintainers to answer this simple---yet essential!---question when evolving their libraries. Library maintainers are constantly balancing between two opposing positions: make changes at the risk of breaking some of their clients, or avoid changes and maintain compatibility at the cost of immobility and growing technical debt. We argue that the lack of objective usage data and tool support leaves maintainers with their own subjective perception of their community to make these decisions.We introduce BreakBot, a bot that analyses the pull requests of Java libraries on GitHub to identify the breaking changes they introduce and their impact on client projects. Through static analysis of libraries and clients, it extracts and summarizes objective data that enrich the code review process by providing maintainers with the appropriate information to decide whether---and how---changes should be accepted, directly in the pull requests.},
		booktitle = {Proceedings of the ACM/IEEE 44th International Conference on Software Engineering: New Ideas and Emerging Results},
		pages = {26–30},
		numpages = {5},
		location = {Pittsburgh, Pennsylvania},
		series = {ICSE-NIER '22}
	}

	@INPROCEEDINGS{9283913,
		author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier and Jézéquel, Jean-Marc},
		booktitle={2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)}, 
		title={Co-Evolving Code with Evolving Metamodels}, 
		year={2020},
		volume={},
		number={},
		pages={1496-1508},
		doi={}}
	
	
	@article{https://doi.org/10.1049/sfw2.12075,
		author = {Chen, Yi-Ting and Huang, Chin-Yu and Yang, Tsung-Han},
		title = {Using multi-pattern clustering methods to improve software maintenance quality},
		journal = {IET Software},
		volume = {17},
		number = {1},
		pages = {1-22},
		keywords = {cluster analysis, maintainability, software architecture recovery, software clustering, software modularisation},
		doi = {https://doi.org/10.1049/sfw2.12075},
		url = {https://ietresearch.onlinelibrary.wiley.com/doi/abs/10.1049/sfw2.12075},
		eprint = {https://ietresearch.onlinelibrary.wiley.com/doi/pdf/10.1049/sfw2.12075},
		abstract = {Abstract In software engineering, a software development process, also known as software development life cycle (SDLC), involves several distinct activities for developing, testing, maintaining, and evolving a software system. Within the stages of SDLC, software maintenance occupies most of the total cost of the software life. However, after extended maintenance activities, software quality always degrades due to increasing size and complexity. To solve this problem, software modularisation using clustering is an intuitive way to modularise and classify code into small pieces. , A multi-pattern clustering (MPC) algorithm for software modularisation is proposed in this study. The proposed MPC algorithm can be divided into five different steps: (1) preprocessing, (2) file labelling, (3) collection of chain dependencies, (4) hierarchical agglomerative clustering, (5) modification of the clustering result. The performance of the proposed MPC algorithm to selected clustering techniques is compared by using three open-source and one closed-source software programs. Experimental results show that the modularisation quality of the proposed MPC algorithm is nearly 1.6 times better than that of the expert decomposition. Additionally, compared to other software clustering algorithms, the proposed MPC algorithm, on average, has a 13\% enhancement in producing results similar to human thinking. Consequently, it can be seen that the proposed MPC algorithm is suitable for human comprehension while producing better module quality compared to other clustering algorithms.},
		year = {2023}
	}
	
	
	@InProceedings{kent2002,
		author="Kent, Stuart",
		editor="Butler, Michael
		and Petre, Luigia
		and Sere, Kaisa",
		title="Model Driven Engineering",
		booktitle="Integrated Formal Methods",
		year="2002",
		publisher="Springer Berlin Heidelberg",
		address="Berlin, Heidelberg",
		pages="286--298",
		abstract="The Object Management Group's (OMG) Model Driven Architecture (MDA) strategy envisages a world where models play a more direct role in software production, being amenable to manipulation and transformation by machine. Model Driven Engineering (MDE) is wider in scope than MDA. MDE combines process and analysis with architecture. This article sets out a framework for model driven engineering, which can be used as a point of reference for activity in this area. It proposes an organisation of the modelling `space' and how to locate models in that space. It discusses different kinds of mappings between models. It explains why process and architecture are tightly connected. It discusses the importance and nature of tools. It identifies the need for defining families of languages and transformations, and for developing techniques for generating/configuring tools from such definitions. It concludes with a call to align metamodelling with formal language engineering techniques.",
		isbn="978-3-540-47884-3"
	}
	@book{starfield1993model,
		title={How to model it: Problem solving for the computer age},
		author={Starfield, Anthony M and Smith, Karl and Bleloch, Andrew L},
		year={1993},
		publisher={McGraw-Hill, Inc.}
	}
	
	@inproceedings{bezivin2001towards,
		title={Towards a precise definition of the OMG/MDA framework},
		author={B{\'e}zivin, Jean and Gerb{\'e}, Olivier},
		booktitle={Automated Software Engineering, 2001.(ASE 2001). Proceedings. 16th Annual International Conference on},
		pages={273--280},
		year={2001},
		organization={IEEE}
	}
	
	@book{kleppe2003mda,
		title={MDA explained: the model driven architecture: practice and promise},
		author={Kleppe, Anneke G and Warmer, Jos B and Bast, Wim},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@article{brown2004model,
		title={Model driven architecture: Principles and practice},
		author={Brown, Alan W},
		journal={Software and Systems Modeling},
		volume={3},
		number={4},
		pages={314--327},
		year={2004},
		publisher={Springer}
	}
	
	
	
	
	@Inbook{cabot2012object,
		author="Cabot, Jordi
		and Gogolla, Martin",
		editor="Bernardo, Marco
		and Cortellessa, Vittorio
		and Pierantonio, Alfonso",
		title="Object Constraint Language (OCL): A Definitive Guide",
		bookTitle="Formal Methods for Model-Driven Engineering: 12th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2012, Bertinoro, Italy, June 18-23, 2012. Advanced Lectures",
		year="2012",
		publisher="Springer Berlin Heidelberg",
		address="Berlin, Heidelberg",
		pages="58--90",
		abstract="The Object Constraint Language (OCL) started as a complement of the UML notation with the goal to overcome the limitations of UML (and in general, any graphical notation) in terms of precisely specifying detailed aspects of a system design. Since then, OCL has become a key component of any model-driven engineering (MDE) technique as the default language for expressing all kinds of (meta)model query, manipulation and specification requirements. Among many other applications, OCL is frequently used to express model transformations (as part of the source and target patterns of transformation rules), well-formedness rules (as part of the definition of new domain-specific languages), or code-generation templates (as a way to express the generation patterns and rules).",
		isbn="978-3-642-30982-3",
		doi="10.1007/978-3-642-30982-3_3",
		url="https://doi.org/10.1007/978-3-642-30982-3_3"
	}
	
	@incollection{boronat2008algebraic,
		title={An algebraic semantics for MOF},
		author={Boronat, Artur and Meseguer, Jos{\'e}},
		booktitle={Fundamental Approaches to Software Engineering},
		pages={377--391},
		year={2008},
		publisher={Springer}
	}
	
	@incollection{koch2003towards,
		title={Towards a common metamodel for the development of web applications},
		author={Koch, Nora and Kraus, Andreas},
		booktitle={Web Engineering},
		pages={497--506},
		year={2003},
		publisher={Springer}
	}
	
	@article{seidewitz2003models,
		title={What models mean},
		author={Seidewitz, Ed},
		journal={IEEE software},
		volume={20},
		number={5},
		pages={26},
		year={2003},
		publisher={IEEE Computer Society}
	}
	
	@article{bezivin2005unification,
		title={On the unification power of models},
		author={B{\'e}zivin, Jean},
		journal={Software \& Systems Modeling},
		volume={4},
		number={2},
		pages={171--188},
		year={2005},
		publisher={Springer}
	}
	
	@incollection{bezivin2006model,
		title={Model driven engineering: An emerging technical space},
		author={B{\'e}zivin, Jean},
		booktitle={Generative and transformational techniques in software engineering},
		pages={36--64},
		year={2006},
		publisher={Springer}
	}
	
	@incollection{jouault2006km3,
		title={KM3: a DSL for Metamodel Specification},
		author={Jouault, Fr{\'e}d{\'e}ric and B{\'e}zivin, Jean},
		booktitle={Formal Methods for Open Object-Based Distributed Systems},
		pages={171--185},
		year={2006},
		publisher={Springer}
	}
	
	@inproceedings{bezivin2006canonical,
		title={A canonical scheme for model composition},
		author={B{\'e}zivin, Jean and Bouzitouna, Salim and Del Fabro, Marcos Didonet and Gervais, Marie-Pierre and Jouault, Fr{\'e}d{\'e}ric and Kolovos, Dimitrios and Kurtev, Ivan and Paige, Richard F},
		booktitle={Model Driven Architecture--Foundations and Applications},
		pages={346--360},
		year={2006},
		organization={Springer}
	}
	
	@article{schmidt2006model,
		title={Model-driven engineering},
		author={Schmidt, Douglas C},
		journal={COMPUTER-IEEE COMPUTER SOCIETY-},
		volume={39},
		number={2},
		pages={25},
		year={2006},
		publisher={Citeseer}
	}
	
	@article{berardi2005reasoning,
		title={Reasoning on UML class diagrams},
		author={Berardi, Daniela and Calvanese, Diego and De Giacomo, Giuseppe},
		journal={Artificial Intelligence},
		volume={168},
		number={1},
		pages={70--118},
		year={2005},
		publisher={Elsevier}
	}
	
	@inproceedings{atkinson2012symbiotic,
		title={Symbiotic general-purpose and domain-specific languages},
		author={Atkinson, Colin and Gerbig, Ralph and Kennel, Bastian},
		booktitle={Proceedings of the 34th International Conference on Software Engineering},
		pages={1269--1272},
		year={2012},
		organization={IEEE Press}
	}
	
	@inproceedings{france2007model,
		title={Model-driven development of complex software: A research roadmap},
		author={France, Robert and Rumpe, Bernhard},
		booktitle={2007 Future of Software Engineering},
		pages={37--54},
		year={2007},
		organization={IEEE Computer Society}
	}
	
	@article{fuentes2004introduction,
		title={An introduction to UML profiles},
		author={Fuentes-Fern{\'a}ndez, Lidia and Vallecillo-Moreno, Antonio},
		journal={UML and Model Engineering},
		volume={2},
		year={2004}
	}
	
	@article{atkinson2002profiles,
		title={Profiles in a strict metamodeling framework},
		author={Atkinson, Colin and K{\"u}hne, Thomas},
		journal={Science of Computer Programming},
		volume={44},
		number={1},
		pages={5--22},
		year={2002},
		publisher={Elsevier}
	}
	
	@incollection{mezei2007optimizing,
		title={An optimizing OCL compiler for metamodeling and model transformation environments},
		author={Mezei, Gergely and Levendovszky, Tiham{\'e}r and Charaf, Hassan},
		booktitle={Software Engineering Techniques: Design for Quality},
		pages={61--71},
		year={2007},
		publisher={Springer}
	}
	
	@inproceedings{CabotG12SFM,
		author    = {Jordi, Cabot and Martin, Gogolla},
		title     = {Object Constraint Language {(OCL):} {A} Definitive Guide},
		booktitle = {12th {SFM} Bertinoro, Italy},
		pages     = {58--90},
		year      = {2012},
		crossref  = {DBLP:conf/sfm/2012},
		url       = {http://dx.doi.org/10.1007/978-3-642-30982-3_3},
		doi       = {10.1007/978-3-642-30982-3_3},
		timestamp = {Wed, 04 Jul 2012 11:18:10 +0200},
		biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sfm/CabotG12},
		bibsource = {dblp computer science bibliography, http://dblp.org}
	}
	
	@article{Ashbacher2003bookreview,
		title={Book review of “The Object Constraint Language Second Edition, Getting Your Models Ready for MDA”},
		author={Charles, Ashbacher},
		journal={Journal of Object Technology},
		volume={2},
		number={6},
		pages={139--140},
		year={2003}
	}
	
	@incollection{bergmann2014translating,
		title={Translating OCL to graph patterns},
		author={Bergmann, G{\'a}bor},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={670--686},
		year={2014},
		publisher={Springer}
	}
	
	
	@MISC{UML241,
		author = {OMG},
		title = {Object Management Group. Unified Modeling Language (UML).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/UML/}}
	}
	
	@MISC{BPMN2,
		author = {OMG},
		title = {Object Management Group. Business Process Model And Notation (BPMN).},
		year = {2015},
		howpublished={\url{https://www.omg.org/spec/BPMN/2.0/About-BPMN/}}
	}
	
	@MISC{OCL20,
		author = {OMG},
		title = {Object Management Group. Object Constraints Language (OCL).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/OCL/}}
	}
	
	@MISC{MOF241,
		author = {OMG},
		title = {Object Management Group. Meta Object Facility (MOF).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/MOF/}}
	}
	
	@MISC{QVT20,
		author = {OMG},  
		title = {Object Management Group. Query / Views / Transformations (QVT).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/QVT/}}
	}
	
	@inproceedings{soeken2010verifying,
		title={Verifying UML/OCL models using Boolean satisfiability},
		author={Soeken, Mathias and Wille, Robert and Kuhlmann, Mirco and Gogolla, Martin and Drechsler, Rolf},
		booktitle={Proceedings of the Conference on Design, Automation and Test in Europe},
		pages={1341--1344},
		year={2010},
		organization={European Design and Automation Association}
	}
	
	@article{gogolla2007use,
		title={USE: A UML-based specification environment for validating UML and OCL},
		author={Gogolla, Martin and B{\"u}ttner, Fabian and Richters, Mark},
		journal={Science of Computer Programming},
		volume={69},
		number={1},
		pages={27--34},
		year={2007},
		publisher={Elsevier}
	}
	
	@article{gogolla2005validating,
		title={Validating UML and OCL models in USE by automatic snapshot generation},
		author={Gogolla, Martin and Bohling, J{\"o}rn and Richters, Mark},
		journal={Software \& Systems Modeling},
		volume={4},
		number={4},
		pages={386--398},
		year={2005},
		publisher={Springer}
	}
	
	@book{warmer2003object,
		title={The object constraint language: getting your models ready for MDA},
		author={Warmer, Jos B and Kleppe, Anneke G},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@book{richters2002precise,
		title={A precise approach to validating UML models and OCL constraints},
		author={Richters, Mark and others},
		year={2002},
		publisher={Citeseer}
	}
	
	@incollection{gogolla1998constraints,
		title={On constraints and queries in UML},
		author={Gogolla, Martin and Richters, Mark},
		booktitle={The Unified Modeling Language},
		pages={109--121},
		year={1998},
		publisher={Springer}
	}
	
	@incollection{hamie1998reflections,
		title={Reflections on the object constraint language},
		author={Hamie, Ali and Civello, Franco and Howse, John and Kent, Stuart and Mitchell, Richard},
		booktitle={The Unified Modeling Language.{\guillemotleft}UML{\guillemotright}’98: Beyond the Notation},
		pages={162--172},
		year={1998},
		publisher={Springer}
	}
	
	@incollection{cook2002amsterdam,
		title={The Amsterdam manifesto on OCL},
		author={Cook, Steve and Kleppe, Anneke and Mitchell, Richard and Rumpe, Bernhard and Warmer, Jos and Wills, Alan},
		booktitle={Object Modeling with the OCL},
		pages={115--149},
		year={2002},
		publisher={Springer}
	}
	
	@incollection{richters2002ocl,
		title={OCL: Syntax, semantics, and tools},
		author={Richters, Mark and Gogolla, Martin},
		booktitle={Object Modeling with the OCL},
		pages={42--68},
		year={2002},
		publisher={Springer}
	}
	
	@incollection{hennicker2002precise,
		title={On the precise meaning of OCL constraints},
		author={Hennicker, Rolf and Hussmann, Heinrich and Bidoit, Michel},
		booktitle={Object Modeling with the OCL},
		pages={69--84},
		year={2002},
		publisher={Springer}
	}
	
	@inproceedings{dzidek2005lessons,
		title={Lessons learned from developing a dynamic OCL constraint enforcement tool for Java},
		author={Dzidek, Wojciech J and Briand, Lionel C and Labiche, Yvan},
		booktitle={Satellite Events at the MoDELS 2005 Conference},
		pages={10--19},
		year={2005},
		organization={Springer}
	}
	
	@inproceedings{briand2004controlled,
		title={A controlled experiment on the impact of the object constraint language in UML-based maintenance},
		author={Briand, Lionel C and Labiche, Yvan and Yan, HD and Di Penta, Massimiliano},
		booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on},
		pages={380--389},
		year={2004},
		organization={IEEE}
	}
	
	@incollection{moiseev2009generating,
		title={Generating assertion code from OCL: A transformational approach based on similarities of implementation languages},
		author={Moiseev, Rodion and Hayashi, Shinpei and Saeki, Motoshi},
		booktitle={Model Driven Engineering Languages and Systems},
		pages={650--664},
		year={2009},
		publisher={Springer}
	}
	
	@article{cheon2008aspect,
		title={An aspect-based approach to checking design constraints at run-time},
		author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc and Estrada, Neith and Fierro, Valeria and Romo, Jessica},
		year={2008}
	}
	
	@article{cheon2009checking,
		title={Checking design constraints at run-time using OCL and AspectJ},
		author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc},
		year={2009}
	}
	
	@inproceedings{cheon2010automating,
		title={Automating Java program testing using OCL and AspectJ},
		author={Cheon, Yoonsik and Avila, Carmen},
		booktitle={Information Technology: New Generations (ITNG), 2010 Seventh International Conference on},
		pages={1020--1025},
		year={2010},
		organization={IEEE}
	}
	
	@inproceedings{ziemann2002extension,
		title={An extension of OCL with temporal logic},
		author={Ziemann, Paul and Gogolla, Martin},
		booktitle={Critical Systems Development with UML--Proceedings of the UML},
		volume={2},
		pages={53--62},
		year={2002},
		organization={Citeseer}
	}
	
	@inproceedings{ziemann2003ocl,
		title={OCL extended with temporal logic},
		author={Ziemann, Paul and Gogolla, Martin},
		booktitle={Perspectives of System Informatics},
		pages={351--357},
		year={2003},
		organization={Springer}
	}
	
	@incollection{kanso2012temporal,
		title={Temporal constraint support for ocl},
		author={Kanso, Bilal and Taha, Safouan},
		booktitle={Software Language Engineering},
		pages={83--103},
		year={2012},
		publisher={Springer}
	}
	
	@inproceedings{lehman1997metrics,
		title={Metrics and laws of software evolution-the nineties view},
		author={Lehman, Meir M and Ramil, Juan F and Wernick, Paul D and Perry, Dewayne E and Turski, Wladyslaw M},
		booktitle={Software Metrics Symposium, 1997. Proceedings., Fourth International},
		pages={20--32},
		year={1997},
		organization={IEEE}
	}
	
	@book{lehman1978laws,
		title={Laws of program evolution-rules and tools for programming management},
		author={Lehman, Meir M},
		year={1978}
	}
	
	@article{lehman1979understanding,
		title={On understanding laws, evolution, and conservation in the large-program life cycle},
		author={Lehman, Meir M},
		journal={Journal of Systems and Software},
		volume={1},
		pages={213--221},
		year={1979},
		publisher={Elsevier}
	}
	
	@incollection{lehman1996laws,
		title={Laws of software evolution revisited},
		author={Lehman, Manny M},
		booktitle={Software process technology},
		pages={108--124},
		year={1996},
		publisher={Springer}
	}
	
	@Inbook{mens2008introduction,
		author="Mens, Tom",
		title="Introduction and Roadmap: History and Challenges of Software Evolution",
		bookTitle="Software Evolution",
		year="2008",
		publisher="Springer Berlin Heidelberg",
		address="Berlin, Heidelberg",
		pages="1--11",
		abstract="The ability to evolve software rapidly and reliably is a major challenge for software engineering. In this introductory chapter we start with a historic overview of the research domain of software evolution. Next, we briefly introduce the important research themes in software evolution, and identify research challenges for the years to come. Finally, we provide a roadmap of the topics treated in this book, and explain how the various chapters are related.",
		isbn="978-3-540-76440-3",
		doi="10.1007/978-3-540-76440-3_1",
		url="https://doi.org/10.1007/978-3-540-76440-3_1"
	}
	
	@article{lehman2003software,
		title={Software evolution—background, theory, practice},
		author={Lehman, Meir M and Ramil, Juan F},
		journal={Information Processing Letters},
		volume={88},
		number={1},
		pages={33--44},
		year={2003},
		publisher={Elsevier}
	}
	
	@article{chapin2001types,
		title={Types of software evolution and software maintenance},
		author={Chapin, Ned and Hale, Joanne E and Khan, Khaled Md and Ramil, Juan F and Tan, Wui-Gee},
		journal={Journal of software maintenance and evolution: Research and Practice},
		volume={13},
		number={1},
		pages={3--30},
		year={2001},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{favre2005languages,
		title={Languages evolve too! Changing the Software Time Scale},
		author={Favre, Jean-Marie},
		booktitle={Eighth International Workshop on Principles of Software Evolution {IWPSE}},
		pages={33--44},
		year={2005},
		organization={IEEE}
	}
	
	@article {buckley2005towards,
		author = {Buckley, Jim and Mens, Tom and Zenger, Matthias and Rashid, Awais and Kniesel, Günter},
		title = {Towards a taxonomy of software change},
		journal = {Journal of Software Maintenance and Evolution: Research and Practice},
		volume = {17},
		number = {5},
		publisher = {John Wiley & Sons, Ltd.},
		issn = {1532-0618},
		url = {http://dx.doi.org/10.1002/smr.319},
		doi = {10.1002/smr.319},
		pages = {309--332},
		keywords = {characterization, software evolution tools, refactoring browser, CVS, eLiza},
		year = {2005}
	}
	
	@inproceedings{swanson1976dimensions,
		title={The dimensions of maintenance},
		author={Swanson, E Burton},
		booktitle={Proceedings of the 2nd international conference on Software engineering},
		pages={492--497},
		year={1976},
		organization={IEEE Computer Society Press}
	}
	
	@article{lientz1980software,
		title={Software maintenance management: a study of the maintenance of computer application software in 487 data processing organizations},
		author={Lientz, Bennet P and Swanson, E Burton},
		year={1980},
		publisher={Addison-Wesley Pub (Sd)}
	}
	
	@incollection{liebel2014assessing,
		title={Assessing the state-of-practice of model-based engineering in the embedded systems domain},
		author={Liebel, Grischa and Marko, Nadja and Tichy, Matthias and Leitner, Andrea and Hansson, J{\"o}rgen},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={166--182},
		year={2014},
		publisher={Springer}
	}
	
	
	@inproceedings{shirtz2007adopting,
		title={Adopting model driven development in a large financial organization},
		author={Shirtz, Dov and Kazakov, Michael and Shaham-Gafni, Yael},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={172--183},
		year={2007},
		organization={Springer}
	}
	
	
	@inproceedings{mohagheghi2008proof,
		title={Where is the proof?-a review of experiences from applying mde in industry},
		author={Mohagheghi, Parastoo and Dehlen, Vegard},
		booktitle={Model Driven Architecture--Foundations and Applications},
		pages={432--443},
		year={2008},
		organization={Springer}
	}
	
	
	@article{hailpern2006model,
		title={Model-driven development: The good, the bad, and the ugly},
		author={Hailpern, Brent and Tarr, Peri},
		journal={IBM systems journal},
		volume={45},
		number={3},
		pages={451},
		year={2006},
		publisher={International Business Machines Corporation}
	}
	
	@inproceedings{garcia2014Caise,
		title={An adapter-based approach to co-evolve generated sql in model-to-text transformations},
		author={Garc{\'\i}a, Jokin and D{\'\i}az, Oscar and Cabot, Jordi},
		booktitle={Advanced Information Systems Engineering},
		pages={518--532},
		year={2014},
		organization={Springer}
	}
	
	@article{garcia_model_2013,
		title={Model transformation co-evolution: A semi-automatic approach},
		author={Garc{\'\i}a, Jokin and Diaz, Oscar and Azanza, Maider},
		journal={SLE},
		volume={7745},
		pages={144--163},
		year={2013},
		publisher={Springer}
	}
	
	@incollection{wachsmuth_metamodel_2007,
		title={Metamodel adaptation and model co-adaptation},
		author={Wachsmuth, Guido},
		booktitle={ECOOP},
		pages={600--624},
		year={2007},
		publisher={Springer}
	}
	
	@incollection{herrmannsdoerfer_cope_2009,
		title={COPE-automating coupled evolution of metamodels and models},
		author={Herrmannsdoerfer, Markus and Benz, Sebastian and Juergens, Elmar},
		booktitle={ECOOP 2009--Object-Oriented Programming},
		pages={52--76},
		year={2009},
		publisher={Springer}
	}
	
	@incollection{herrmannsdoerfer_cope_2011,
		title={COPE--A Workbench for the coupled evolution of metamodels and models},
		author={Herrmannsdoerfer, Markus},
		booktitle={Software Language Engineering},
		pages={286--295},
		year={2011},
		publisher={Springer}
	}
	
	@inproceedings{cicchetti_automating_2008,
		title={Automating co-evolution in model-driven engineering},
		author={Cicchetti, Antonio and Ruscio, Davide Di and Eramo, Romina and Pierantonio, Alfonso},
		booktitle={Enterprise Distributed Object Computing Conference, 2008. EDOC'08. 12th International IEEE},
		pages={222--231},
		year={2008},
		organization={IEEE}
	}
	
	@article{garces_adaptation_2008,
		title={Adaptation of models to evolving metamodels},
		author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
		year={2008}
	}
	
	@article{markovic_refactoring_2008,
		title={Refactoring OCL annotated UML class diagrams},
		author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
		journal={Software \& Systems Modeling},
		volume={7},
		number={1},
		pages={25--47},
		year={2008},
		publisher={Springer}
	}
	
	@incollection{markovic_refactoring_2005,
		title={Refactoring OCL annotated UML class diagrams},
		author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
		booktitle={Model Driven Engineering Languages and Systems},
		pages={280--294},
		year={2005},
		publisher={Springer}
	}
	
	
	@incollection{herrmannsdoerfer_extensive_2011,
		title = {An Extensive Catalog of Operators for the Coupled Evolution of Metamodels and Models},
		copyright = {©2011 Springer Berlin Heidelberg},
		isbn = {978-3-642-19439-9, 978-3-642-19440-5},
		booktitle = {Software Language Engineering},
		author = {Herrmannsdoerfer, Markus and Vermolen, Sander D. and Wachsmuth, Guido},
		editor = {Malloy and Staab and Brand},
		month = jan,
		year = {2011},
		pages = {163--182},
		publisher={Springer}
	}
	
	@article{langer_posteriori_2013,
		title={A posteriori operation detection in evolving software models},
		author={Langer, Philip and Wimmer, Manuel and Brosch, Petra and Herrmannsd{\"o}rfer, Markus and Seidl, Martina and Wieland, Konrad and Kappel, Gerti},
		journal={Journal of Systems and Software},
		volume={86},
		number={2},
		pages={551--566},
		year={2013},
		publisher={Elsevier}
	}
	
	@inproceedings{garces_managing_2009,
		title={Managing model adaptation by precise detection of metamodel changes},
		author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={34--49},
		year={2009},
		organization={Springer}
	}
	
	@inproceedings{xing2006refactoring,
		title={Refactoring detection based on umldiff change-facts queries},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Reverse Engineering, 2006. WCRE'06. 13th Working Conference on},
		pages={263--274},
		year={2006},
		organization={IEEE}
	}
	
	@inproceedings{moghadam2012automated,
		title={Automated refactoring using design differencing},
		author={Moghadam, Iman Hemati and Cinneide, Mel O},
		booktitle={Software Maintenance and Reengineering (CSMR), 2012 16th European Conference on},
		pages={43--52},
		year={2012},
		organization={IEEE}
	}
	
	@MISC{Rijsbergen1979,
		author = {Rijsbergen, C.J.V.},
		title = {Information Retrieval. Butterworths},
		year = {1979}
	}
	
	@article{morisio2002success,
		title={Success and failure factors in software reuse},
		author={Morisio, Maurizio and Ezran, Michel and Tully, Colin},
		journal={Software Engineering, IEEE Transactions on},
		volume={28},
		number={4},
		pages={340--357},
		year={2002},
		publisher={IEEE}
	}
	
	@incollection{hemel2008code,
		title={Code generation by model transformation},
		author={Hemel, Zef and Kats, Lennart CL and Visser, Eelco},
		booktitle={{ICMT}},
		pages={183--198},
		year={2008},
		publisher={Springer}
	}
	
	@inproceedings{aichernig2005test,
		title={Test case generation by OCL mutation and constraint solving},
		author={Aichernig, Bernhard K and Salas, Percy Antonio Pari},
		booktitle={Quality Software, 2005.(QSIC 2005). Fifth International Conference on},
		pages={64--71},
		year={2005},
		organization={IEEE}
	}
	
	@inproceedings{hassam2011assistance,
		title={Assistance system for OCL constraints adaptation during metamodel evolution},
		author={Hassam, Kahina and Sadou, Salah and Gloahec, Vincent Le and Fleurquin, R{\'e}gis},
		booktitle={Software Maintenance and Reengineering (CSMR), 15th European Conference on},
		pages={151--160},
		year={2011},
		organization={IEEE}
	}
	
	@inproceedings{demuth_automatically_2012,
		title={Automatically generating and adapting model constraints to support co-evolution of design models},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		booktitle={The 27th IEEE/ACM ASE},
		pages={302--305},
		year={2012}
	}
	
	@incollection{demuth_supporting_2013,
		title={Supporting the co-evolution of metamodels and constraints through incremental constraint management},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={287--303},
		year={2013},
		publisher={Springer}
	}
	
	@inproceedings{kusel2015systematic,
		title={Systematic Co-Evolution of OCL Expressions},
		author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={11th {APCCM 2015}},
		volume={27},
		pages={30},
		year={2015}
	}
	
	@article{schneidewind1987state,
		title={The state of software maintenance},
		author={Schneidewind, Norman F.},
		journal={IEEE Transactions on Software Engineering},
		volume={13},
		number={3},
		pages={303},
		year={1987},
		publisher={IEEE Computer Society}
	}
	
	@inproceedings{bennett2000software,
		title={Software maintenance and evolution: a roadmap},
		author={Bennett, Keith H and Rajlich, V{\'a}clav T},
		booktitle={Proceedings of the Conference on the Future of Software Engineering},
		pages={73--87},
		year={2000},
		organization={ACM}
	}
	
	@inproceedings{godfrey2008past,
		title={The past, present, and future of software evolution},
		author={Godfrey, Michael W and German, Daniel M},
		booktitle={Frontiers of Software Maintenance, 2008. FoSM 2008.},
		pages={129--138},
		year={2008},
		organization={IEEE}
	}
	
	@article{vigder2001evolution,
		title={The evolution, maintenance, and management of component-based systems},
		author={Vigder, Mark},
		journal={Component-Based Software Engineering: Putting the Pieces Together},
		pages={527--539},
		year={2001},
		publisher={Citeseer}
	}
	
	@phdthesis{opdyke1992refactoring,
		title={Refactoring object-oriented frameworks},
		author={Opdyke, William F},
		year={1992},
		school={University of Illinois at Urbana-Champaign}
	}
	
	@book{arnold1986introduction,
		title={An introduction to software restructuring},
		author={Arnold, Robert S},
		year={1986},
		publisher={IEEE Computer Society Press, Washington, DC}
	}
	
	@article{mens2004survey,
		title={A survey of software refactoring},
		author={Mens, Tom and Tourw{\'e}, Tom},
		journal={Software Engineering, IEEE Transactions on},
		volume={30},
		number={2},
		pages={126--139},
		year={2004},
		publisher={IEEE}
	}
	
	@incollection{sunye2001refactoring,
		title={Refactoring UML models},
		author={Suny{\'e}, Gerson and Pollet, Damien and Le Traon, Yves and J{\'e}z{\'e}quel, Jean-Marc},
		booktitle={{UML}2001—The Unified Modeling Language. Modeling Languages, Concepts, and Tools},
		pages={134--148},
		year={2001},
		publisher={Springer}
	}
	
	
	@incollection{rose2010comparison,
		title={A comparison of model migration tools},
		author={Rose, Louis M and Herrmannsdoerfer, Markus and Williams, James R and Kolovos, Dimitrios S and Garc{\'e}s, Kelly and Paige, Richard F and Polack, Fiona AC},
		booktitle={MODELS},
		pages={61--75},
		year={2010},
		publisher={Springer}
	}
	
	@CONFERENCE {ReginaApsec2015,
		author    = {Regina Hebig and Djamel Eddine Khelladi and Reda Bendraou},
		title     = {Surveying the Corpus of Model Resolution Strategies for Metamodel Evolution},
		booktitle = {The 22nd Asia-Pacific Software Engineering Conference {APSEC}},
		year      = {2015}
	}
	
	@article{demuth2015constraint,
		title={Constraint-driven modeling through transformation},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		journal={Software \& Systems Modeling},
		volume={14},
		number={2},
		pages={573--596},
		year={2015},
		publisher={Springer}
	}
	
	@article{demuth2016co,
		title={Co-evolution of metamodels and models through consistent change propagation},
		author={Demuth, Andreas and Riedl-Ehrenleitner, Markus and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		journal={Journal of Systems and Software},
		volume={111},
		pages={281--297},
		year={2016},
		publisher={Elsevier}
	}
	
	@inproceedings{toulme2006presentation,
		title={Presentation of EMF compare utility},
		author={Toulm{\'e}, Antoine and Inc, I},
		booktitle={Eclipse Modeling Symposium},
		pages={1--8},
		year={2006}
	}
	
	@inproceedings{xing2005umldiff,
		title={UMLDiff: an algorithm for object-oriented design differencing},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
		pages={54--65},
		year={2005},
		organization={ACM}
	}
	
	@article{lin2007dsmdiff,
		title={DSMDiff: a differentiation tool for domain-specific models},
		author={Lin, Yuehua and Gray, Jeff and Jouault, Fr{\'e}d{\'e}ric},
		journal={European Journal of Information Systems},
		volume={16},
		number={4},
		pages={349--361},
		year={2007},
		publisher={Nature Publishing Group}
	}
	
	
	@inproceedings{di2011needed,
		title={What is needed for managing co-evolution in mde?},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
		pages={30--38},
		year={2011},
		organization={ACM}
	}
	
	@article{levendovszky2014semi,
		title={A semi-formal description of migrating domain-specific models with evolving domains},
		author={Levendovszky, Tihamer and Balasubramanian, Daniel and Narayanan, Anantha and Shi, Feng and van Buskirk, Chris and Karsai, Gabor},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={807--823},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{blanc2008detecting,
		title={Detecting model inconsistency through operation-based model construction},
		author={Blanc, Xavier and Mounier, Isabelle and Mougenot, Alix and Mens, Tom},
		booktitle={Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference on},
		pages={511--520},
		year={2008},
		organization={IEEE}
	}
	
	@incollection{cabot2004automatic,
		title={Automatic integrity constraint evolution due to model subtract operations},
		author={Cabot, Jordi and Conesa, Jordi},
		booktitle={Conceptual Modeling for Advanced Application Domains},
		pages={350--362},
		year={2004},
		publisher={Springer}
	}
	
	@inproceedings{buttner2005towards,
		title={Towards transformation of integrity constraints and database states},
		author={B{\"u}ttner, Fabian and Bauerdick, Hanna and Gogolla, Martin},
		booktitle={Database and Expert Systems Applications, 2005. Proceedings. Sixteenth International Workshop on},
		pages={823--828},
		year={2005},
		organization={IEEE}
	}
	
	@article{cabot2007transformation,
		title={Transformation techniques for OCL constraints},
		author={Cabot, Jordi and Teniente, Ernest},
		journal={Science of Computer Programming},
		volume={68},
		number={3},
		pages={179--195},
		year={2007},
		publisher={Elsevier}
	}
	
	
	@article{kuselsystematic,
		title={A Systematic Taxonomy of Metamodel Evolution Impacts on OCL Expressions},
		author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={Workshop on Models and Evolution at {MODELS}},
		year={ME@MODELS, 2015}
	}
	
	@book{kleppe2003mda,
		title={MDA explained: the model driven architecture: practice and promise},
		author={Kleppe, Anneke G and Warmer, Jos B and Bast, Wim},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@article{clarke1996formal,
		title={Formal methods: State of the art and future directions},
		author={Clarke, Edmund M and Wing, Jeannette M},
		journal={ACM Computing Surveys (CSUR)},
		volume={28},
		number={4},
		pages={626--643},
		year={1996},
		publisher={ACM}
	}
	
	@book{clarke1999model,
		title={Model checking},
		author={Clarke, Edmund M and Grumberg, Orna and Peled, Doron},
		year={1999},
		publisher={MIT press}
	}
	
	@book{volter2013model,
		title={Model-driven software development: technology, engineering, management},
		author={Volter, Markus and Stahl, Thomas and Bettin, Jorn and Haase, Arno and Helsen, Simon},
		year={2013},
		publisher={John Wiley \& Sons}
	}
	
	@incollection{cabot2007declarative,
		title={From declarative to imperative UML/OCL operation specifications},
		author={Cabot, Jordi},
		booktitle={Conceptual Modeling-ER 2007},
		pages={198--213},
		year={2007},
		publisher={Springer}
	}
	
	@article{rose2014epsilon,
		title={Epsilon Flock: a model migration language},
		author={Rose, Louis M and Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC and Poulding, Simon},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={735--755},
		year={2014},
		publisher={Springer}
	}
	
	
	@article{wohlin2012experimentation,
		title={Experimentation in software engineering. Springer},
		author={Wohlin, Claes and Runeson, Per and H{\"o}st, Martin and Ohlsson, Magnus C and Regnell, Bj{\"o}rn and Wessl{\'e}n, Anders},
		year={2012},
		publisher={Springer Science \& Business Media}
	}
	
	@MISC{MDTOCL,
		author = {MDT},
		title = {Model Development Tools. Object Constraints Language (OCL).},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=ocl}}
	}
	
	@MISC{MDTPapyrus,
		author = {MDT},
		title = {Model Development Tools. Papyrus.},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=papyrus}}
	}
	
	@MISC{MDTModisco,
		author = {MDT},
		title = {Model Development Tools. MoDisco.},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/mdt/?project=modisco}}
	}Graphical Modeling Project
	
	@MISC{EclipseEMF,
		author = {Eclipse EMF},
		title = {Eclipse Modeling Framework (EMF).},
		year = {2020},
		howpublished={\url{https://github.com/eclipse-emf/org.eclipse.emf}}
	}
	
	@MISC{GMF,
		author = {GMP},
		title = {Graphical Modeling Project. Graphical Modeling Framework (GMF).},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/gmp/}}
	}
	
	@MISC{OMG,
		author = {OMG},
		title = {Object Management Group.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/}}
	}
	
	@MISC{SMM,
		author = {OMG},
		title = {Structured Metrics Metamodel.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/SMM/}}
	}
	
	
	@MISC{UPDM,
		author = {OMG},
		title = {Unified Profile for the Department of Defense Architecture Framework (DoDAF) and the Ministry of Defence Architecture Framework (MODAF).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/UPDM/}}
	}
	
	@MISC{NIEM,
		author = {OMG},
		title = {UML Profile for National Information Exchange Model.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/NIEM-UML/}}
	}
	
	@MISC{EXPRESS,
		author = {OMG},
		title = {Reference Metamodel for the EXPRESS Information Modeling Language.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/EXPRESS/}}
	}
	
	@MISC{ReqIF,
		author = {OMG},
		title = {Requirements Interchange Format.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/ReqIF/}}
	}
	
	@inproceedings{jouault2005transforming,
		title={Transforming models with ATL},
		author={Jouault, Fr{\'e}d{\'e}ric and Kurtev, Ivan},
		booktitle={satellite events at the MoDELS 2005 Conference},
		pages={128--138},
		year={2005},
		organization={Springer}
	}
	
	@incollection{kolovos2008epsilon,
		title={The epsilon transformation language},
		author={Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC},
		booktitle={Theory and practice of model transformations},
		pages={46--60},
		year={2008},
		publisher={Springer}
	}
	
	
	@incollection{herrmannsdoerfer_language_2010,
		title = {Language Evolution in Practice: The History of {GMF}},
		copyright = {©2010 Springer-Verlag Berlin Heidelberg},
		isbn = {978-3-642-12106-7, 978-3-642-12107-4},
		shorttitle = {Language Evolution in Practice},
		urldate = {2014-04-30},
		booktitle = {Software Language Engineering},
		author = {Herrmannsdoerfer, Markus and Ratiu, Daniel and Wachsmuth, Guido},
		editor = {Brand, Mark van den and Gasevic, Dragan and Gray, Jeff},
		month = jan,
		year = {2010},
		keywords = {Logics and Meanings of Programs, Management of Computing and Information Systems, Programming Languages, Compilers, Interpreters, Simulation and Modeling, Software engineering},
		pages = {3--22}
	}
	
	@article{garces2014adapting,
		title={Adapting transformations to metamodel changes via external transformation composition},
		author={Garc{\'e}s, Kelly and Vara, Juan M and Jouault, Fr{\'e}d{\'e}ric and Marcos, Esperanza},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={789--806},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{bendraou2012support,
		title={Support for Deviation Detections in the Context of Multi-Viewpoint-Based Development Processes.},
		author={Bendraou, Reda and da Silva, Marcos Aur{\'e}lio Almeida and Gervais, Marie-Pierre and Blanc, Xavier},
		booktitle={CAiSE},
		pages={23--31},
		year={2012}
	}
	
	@inproceedings{blanc2009incremental,
		title={Incremental detection of model inconsistencies based on model operations},
		author={Blanc, Xavier and Mougenot, Alix and Mounier, Isabelle and Mens, Tom},
		booktitle={CAiSE},
		pages={32--46},
		year={2009},
		organization={Springer}
	}
	
	@inproceedings{da2011deviation,
		title={Deviation management during process execution},
		author={da Silva, Marcos Aurelio Almeida and Blanc, Xavier and Bendraou, Reda},
		booktitle={26th IEEE/ACM ASE},
		pages={528--531},
		year={2011}
	}
	
	@phdthesis{mougenot2010praxis,
		title={Praxis: Detection of inconsistency within distributed models},
		author={Mougenot, Alix},
		year={2010},
		school={Paris 6}
	}
	
	@inproceedings{Kessentini2016automated,
		title={Automated Metamodel/Model Co-Evolution using a Multi-Objective Optimization Approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		booktitle={12th ECMFA},
		year={2016}
	}
	
	@article{steinberg2008emf,
		title={EMF: eclipse modeling framework. Pearson Education},
		author={Steinberg, Dave and Budinsky, Frank and Merks, Ed and Paternostro, Marcelo},
		year={2008},
		publisher={Pearson Education}
	}
	
	@inproceedings{bruneliere2015lightweight,
		title={On Lightweight Metamodel Extension to Support Modeling Tools Agility},
		author={Bruneliere, Hugo and Garcia, Jokin and Desfray, Philippe and Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Cabot, Jordi},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={62--74},
		year={2015},
		organization={Springer}
	}
	
	@inproceedings{khelladi2016supporting,
		title={Supporting the co-adaption of process properties},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
		booktitle={Proceedings of the International Workshop on Software and Systems Process},
		pages={1--5},
		year={2016},
		organization={ACM}
	}
	
	@inproceedings{khelladi2015framework,
		title={A framework to formally verify conformance of a software process to a software method},
		author={Khelladi, Djamel-Eddine and Bendraou, Reda and Baarir, Souheib and Laurent, Yoann and Gervais, Marie-Pierre},
		booktitle={The 30th Symposium on Applied Computing},
		pages={1518--1525},
		year={2015},
		organization={ACM}
	}
	
	@article{khelladi2016detecting,
		title={Detecting complex changes and refactorings during (meta) model evolution},
		author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
		journal={Information Systems},
		year={2016},
		publisher={Elsevier}
	}
	
	@inproceedings{khelladi2015detecting,
		title={Detecting complex changes during metamodel evolution},
		author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
		booktitle={CAISE},
		pages={263--278},
		year={2015},
		organization={Springer}
	}
	
	@inproceedings{khelladi2016ad,
		title={Ad-room: a tool for automatic detection of refactorings in object-oriented models},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
		booktitle={ICSE Companion},
		pages={617--620},
		year={2016},
		organization={ACM}
	}
	
	@inproceedings{khelladi2016metamodel,
		title={Metamodel and constraints co-evolution: A semi automatic maintenance of ocl constraints},
		author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
		booktitle={International Conference on Software Reuse},
		pages={333--349},
		year={2016},
		organization={Springer}
	}
	
	@book{kelly2008domain,
		title={Domain-specific modeling: enabling full code generation},
		author={Kelly, Steven and Tolvanen, Juha-Pekka},
		year={2008},
		publisher={John Wiley \& Sons}
	}
	
	@inproceedings{jouault2006km3,
		title={KM3: a DSL for Metamodel Specification},
		author={Jouault, Fr{\'e}d{\'e}ric and B{\'e}zivin, Jean},
		booktitle={International Conference on Formal Methods for Open Object-Based Distributed Systems},
		pages={171--185},
		year={2006},
		organization={Springer}
	}
	
	@book{witten2005data,
		title={Data Mining: Practical machine learning tools and techniques},
		author={Witten, Ian H and Frank, Eibe},
		year={2005},
		publisher={Morgan Kaufmann}
	}
	
	@book{deb2001multi,
		title={Multi-objective optimization using evolutionary algorithms},
		author={Deb, Kalyanmoy},
		volume={16},
		year={2001},
		publisher={John Wiley \& Sons}
	}
	
	@incollection{deb2014multi,
		title={Multi-objective optimization},
		author={Deb, Kalyanmoy},
		booktitle={Search methodologies},
		pages={403--449},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{schoenboeck2014care,
		title={CARE: A Constraint-based Approach for Re-establishing Conformance-relationships},
		author={Schoenboeck, Johannes and Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Schwinger, Wieland and Wimmer, Manuel and Wischenbart, Martin},
		booktitle={Proceedings of the Tenth Asia-Pacific Conference on Conceptual Modelling-Volume 154},
		pages={19--28},
		year={2014},
		organization={Australian Computer Society, Inc.}
	}
	
	
	@article{kitchenham2004procedures,
		title={Procedures for performing systematic reviews},
		author={Kitchenham, Barbara},
		journal={Keele, UK, Keele University},
		volume={33},
		number={2004},
		pages={1--26},
		year={2004}
	}
	
	
	@inproceedings{correa2004applying,
		title={Applying refactoring techniques to UML/OCL models},
		author={Correa, Alexandre and Werner, Cl{\'a}udia},
		booktitle={UML},
		pages={173--187},
		year={2004},
		organization={Springer}
	}
	
	@article{iovino2012impact,
		title={On the Impact Significance of Metamodel Evolution in MDE.},
		author={Iovino, Ludovico and Pierantonio, Alfonso and Malavolta, Ivano},
		journal={Journal of Object Technology},
		volume={11},
		number={3},
		pages={3--1},
		year={2012}
	}
	
	@inproceedings{schonbock2015model,
		title={Model-Driven Co-evolution for Agile Development},
		author={Sch{\"o}nb{\"o}ck, Johannes and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Kusel, Angelika and Retschitzegger, Werner and Schwinger, Wieland},
		booktitle={System Sciences (HICSS), 48th Hawaii International Conference on},
		pages={5094--5103},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{reimann2012tool,
		title={Tool supported OCL refactoring catalogue},
		author={Reimann, Jan and Wilke, Claas and Demuth, Birgit and Muck, Michael and A{\ss}mann, Uwe},
		booktitle={Proceedings of the 12th Workshop on OCL and Textual Modelling},
		pages={7--12},
		year={2012},
		organization={ACM}
	}
	
	@inproceedings{khelladi2016SAC-OCL,
		title={SAC-OCL: A Tool for A Semi Automatic Co-evolution of OCL Constraints},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
		booktitle={Demonstraions@MODELS},
		pages={40--47},
		year={2016}
	}
	
	@article{correa2007refactoring,
		title={Refactoring object constraint language specifications},
		author={Correa, Alexandre and Werner, Cl{\'a}udia},
		journal={Software \& Systems Modeling},
		volume={6},
		number={2},
		pages={113--138},
		year={2007},
		publisher={Springer}
	}
	
	@inproceedings{hassam2010adapting,
		title={Adapting ocl constraints after a refactoring of their model using an mde process},
		author={Hassam, Kahina and Sadou, Salah and Fleurquin, R{\'e}gis},
		booktitle={9th edition of the BElgian-NEtherlands software eVOLution seminar (BENEVOL 2010)},
		pages={16--27},
		year={2010}
	}
	
	@inproceedings{demuth2011cross,
		title={Cross-layer modeler: a tool for flexible multilevel modeling with consistency checking},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		booktitle={The 19th ACM SIGSOFT FSE and the 13th ESEC},
		pages={452--455},
		year={2011}
	}
	
	@inproceedings{demuth2012enabling,
		title={Enabling dynamic metamodels through constraint-driven modeling},
		author={Demuth, Andreas},
		booktitle={Proceedings of the 34th International Conference on Software Engineering},
		pages={1622--1624},
		year={2012},
		organization={IEEE Press}
	}
	
	@article{demuth2015constraint,
		title={Constraint-driven modeling through transformation},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		journal={Software \& Systems Modeling},
		volume={14},
		number={2},
		pages={573--596},
		year={2015},
		publisher={Springer}
	}
	
	
	@article{mengerink2016complete,
		title={A complete operator library for DSL evolution specification},
		author={Mengerink, JGM and Serebrenik, A and Schiffelers, RRH and van den Brand, MGJ},
		year={2016},
		publisher={ICSME}
	}
	
	@article{harman2012search,
		title={Search-based software engineering: Trends, techniques and applications},
		author={Harman, Mark and Mansouri, S Afshin and Zhang, Yuanyuan},
		journal={ACM Computing Surveys},
		volume={45},
		number={1},
		pages={11},
		year={2012},
		publisher={ACM}
	}
	
	@inproceedings{hutchinson2011empirical,
		title={Empirical assessment of MDE in industry},
		author={Hutchinson, John and Whittle, Jon and Rouncefield, Mark and Kristoffersen, Steinar},
		booktitle={Proceedings of the 33rd International Conference on Software Engineering},
		pages={471--480},
		year={2011},
		organization={ACM}
	}
	
	
	@inproceedings{hutchinson2011model,
		title={Model-driven engineering practices in industry},
		author={Hutchinson, John and Rouncefield, Mark and Whittle, Jon},
		booktitle={Proceedings of the 33rd International Conference on Software Engineering},
		pages={633--642},
		year={2011},
		organization={ACM}
	}
	
	@incollection{liebel2014assessing,
		title={Assessing the state-of-practice of model-based engineering in the embedded systems domain},
		author={Liebel, Grischa and Marko, Nadja and Tichy, Matthias and Leitner, Andrea and Hansson, J{\"o}rgen},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={166--182},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{shirtz2007adopting,
		title={Adopting model driven development in a large financial organization},
		author={Shirtz, Dov and Kazakov, Michael and Shaham-Gafni, Yael},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={172--183},
		year={2007},
		organization={Springer}
	}
	
	@inproceedings{tolvanen2009metaedit,
		title={MetaEdit+: defining and using integrated domain-specific modeling languages},
		author={Tolvanen, Juha-Pekka and Kelly, Steven},
		booktitle={The 24th ACM SIGPLAN conference companion on OOPSLA},
		pages={819--820},
		year={2009}
	}
	
	@article{paige2016evolving,
		title={Evolving models in model-driven engineering: State-of-the-art and future challenges},
		author={Paige, Richard F and Matragkas, Nicholas and Rose, Louis M},
		journal={Journal of Systems and Software},
		volume={111},
		pages={272--280},
		year={2016},
		publisher={Elsevier}
	}
	
	@incollection{herrmannsdorfer2014coupled,
		title={Coupled evolution of software metamodels and models},
		author={Herrmannsd{\"o}rfer, Markus and Wachsmuth, Guido},
		booktitle={Evolving Software Systems},
		pages={33--63},
		year={2014},
		publisher={Springer}
	}
	
	@article{rose2014graph,
		title={Graph and model transformation tools for model migration},
		author={Rose, Louis M and Herrmannsdoerfer, Markus and Mazanek, Steffen and Van Gorp, Pieter and Buchwald, Sebastian and Horn, Tassilo and Kalnina, Elina and Koch, Andreas and Lano, Kevin and Sch{\"a}tz, Bernhard and others},
		journal={Software \& Systems Modeling},
		volume={13},
		number={1},
		pages={323--359},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{usman2008survey,
		title={A survey of consistency checking techniques for UML models},
		author={Usman, Muhammad and Nadeem, Aamer and Kim, Tai-hoon and Cho, Eun-suk},
		booktitle={Advanced Software Engineering and Its Applications, 2008. ASEA 2008},
		pages={57--62},
		year={2008},
		organization={IEEE}
	}
	
	
	@inproceedings{cabot2006constraint,
		title={Constraint Support in MDA tools: a Survey},
		author={Cabot, Jordi and Teniente, Ernest},
		booktitle={European Conference on Model Driven Architecture-Foundations and Applications},
		pages={256--267},
		year={2006},
		organization={Springer}
	}
	
	@article{toval2003emerging,
		title={Emerging OCL tools},
		author={Toval, Ambrosio and Requena, V{\'\i}ctor and Fern{\'a}ndez, Jos{\'e} Luis},
		journal={Software \& Systems Modeling},
		volume={2},
		number={4},
		pages={248--261},
		year={2003},
		publisher={Springer}
	}
	
	@inproceedings{li2007test,
		title={Test case automate generation from UML sequence diagram and OCL expression},
		author={Li, Bao-Lin and Li, Zhi-shu and Qing, Li and Chen, Yan-Hong},
		booktitle={Computational Intelligence and Security, 2007 International Conference on},
		pages={1048--1052},
		year={2007},
		organization={IEEE}
	}
	
	@article{ali2013generating,
		title={Generating test data from OCL constraints with search techniques},
		author={Ali, Shaukat and Iqbal, Muhammad Zohaib and Arcuri, Andrea and Briand, Lionel C},
		journal={IEEE Transactions on Software Engineering},
		volume={39},
		number={10},
		pages={1376--1402},
		year={2013},
		publisher={IEEE}
	}
	
	@article{frisch2008essence,
		title={Essence: A constraint language for specifying combinatorial problems},
		author={Frisch, Alan M and Harvey, Warwick and Jefferson, Chris and Mart{\'\i}nez-Hern{\'a}ndez, Bernadette and Miguel, Ian},
		journal={Constraints},
		volume={13},
		number={3},
		pages={268--306},
		year={2008},
		publisher={Springer}
	}
	
	@article{mens2006taxonomy,
		title={A taxonomy of model transformation},
		author={Mens, Tom and Van Gorp, Pieter},
		journal={Electronic Notes in Theoretical Computer Science},
		volume={152},
		pages={125--142},
		year={2006},
		publisher={Elsevier}
	}
	
	@inproceedings{konemann2010semantic,
		title={Semantic grouping of model changes},
		author={K{\"o}nemann, Patrick},
		booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
		pages={50--55},
		year={2010},
		organization={ACM}
	}
	
	@article{kessentini2016search,
		title={Search-based detection of model level changes},
		author={Kessentini, Marouane and Mansoor, Usman and Wimmer, Manuel and Ouni, Ali and Deb, Kalyanmoy},
		journal={Empirical Software Engineering},
		pages={1--46},
		year={2016},
		publisher={Springer}
	}
	
	@inproceedings{ben2012search,
		title={Search-based detection of high-level model changes},
		author={ben Fadhel, Ameni and Kessentini, Marouane and Langer, Philip and Wimmer, Manuel},
		booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
		pages={212--221},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{kehrer2012understanding,
		title={Understanding model evolution through semantically lifting model differences with SiLift},
		author={Kehrer, Timo and Kelter, Udo and Ohrndorf, Manuel and Sollbach, Tim},
		booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
		pages={638--641},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{koshima2015rucord,
		title={RuCORD: Rule-based composite operation recovering and detection to support cooperative edition of (Meta) models},
		author={Koshima, Amanuel and Englebert, Vincent},
		booktitle={Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
		pages={1--7},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{mendez2012effective,
		title={Effective detection of model changes},
		author={M{\'e}ndez-Acu{\~n}a, David and Casallas, Rubby},
		booktitle={Computing Congress (CCC), 2012 7th Colombian},
		pages={1--5},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{herrmannsdoerfer2010towards,
		title={Towards a generic operation recorder for model evolution},
		author={Herrmannsdoerfer, Markus and Koegel, Maximilian},
		booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
		pages={76--81},
		year={2010},
		organization={ACM}
	}
	
	@inproceedings{herrmannsdoerfer2009operation,
		title={Operation-based versioning of metamodels with COPE},
		author={Herrmannsdoerfer, Markus},
		booktitle={Comparison and Versioning of Software Models, 2009. CVSM'09. ICSE Workshop on},
		pages={49--54},
		year={2009},
		organization={IEEE}
	}
	
	@article{cicchetti2007metamodel,
		title={A metamodel independent approach to difference representation.},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
		journal={Journal of Object Technology},
		volume={6},
		number={9},
		pages={165--185},
		year={2007}
	}
	
	@inproceedings{cicchetti2008meta,
		title={Meta-model differences for supporting model co-evolution},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd Workshop on Model-Driven Software Evolution-MODSE},
		pages={1--10},
		year={2008}
	}
	
	@inproceedings{xing2005umldiff,
		title={UMLDiff: an algorithm for object-oriented design differencing},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
		pages={54--65},
		year={2005},
		organization={ACM}
	}
	
	@inproceedings{xing2010model,
		title={Model comparison with GenericDiff},
		author={Xing, Zhenchang},
		booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
		pages={135--138},
		year={2010},
		organization={ACM}
	}
	
	@article{zhang2017detection,
		title={Detection of Composite Operation in Model Management},
		author={Zhang, Renwei and Qin, Zheng and Song, Houbing and Li, Shengnan and Yang, Xiao},
		journal={IEEE Access},
		volume={5},
		pages={771--780},
		year={2017},
		publisher={IEEE}
	}
	
	@inproceedings{kehrer2013consistency,
		title={Consistency-preserving edit scripts in model versioning},
		author={Kehrer, Timo and Kelter, Udo and Taentzer, Gabriele},
		booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
		pages={191--201},
		year={2013},
		organization={IEEE}
	}
	
	@inproceedings{boger2002refactoring,
		title={Refactoring browser for UML},
		author={Boger, Marko and Sturm, Thorsten and Fragemann, Per},
		booktitle={Net. ObjectDays: International Conference on Object-Oriented and Internet-Based Technologies, Concepts, and Applications for a Networked World},
		pages={366--377},
		year={2002},
		organization={Springer}
	}
	
	@article{altmanninger2009survey,
		title={A survey on model versioning approaches},
		author={Altmanninger, Kerstin and Seidl, Martina and Wimmer, Manuel},
		journal={International Journal of Web Information Systems},
		volume={5},
		number={3},
		pages={271--304},
		year={2009},
		publisher={Emerald Group Publishing Limited}
	}
	
	@book{kelly2008domain,
		title={Domain-specific modeling: enabling full code generation},
		author={Kelly, Steven and Tolvanen, Juha-Pekka},
		year={2008},
		publisher={John Wiley \& Sons}
	}
	
	@article{whittle2014state,
		title={The state of practice in model-driven engineering},
		author={Whittle, Jon and Hutchinson, John and Rouncefield, Mark},
		journal={IEEE software},
		volume={31},
		number={3},
		pages={79--85},
		year={2014},
		publisher={IEEE}
	}
	
	@article{utting2012taxonomy,
		title={A taxonomy of model-based testing approaches},
		author={Utting, Mark and Pretschner, Alexander and Legeard, Bruno},
		journal={Software Testing, Verification and Reliability},
		volume={22},
		number={5},
		pages={297--312},
		year={2012},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{pretschner2005model,
		title={Model-based testing},
		author={Pretschner, Alexander},
		booktitle={Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference on},
		pages={722--723},
		year={2005},
		organization={IEEE}
	}
	
	@inproceedings{kusel2015consistent,
		title={Consistent co-evolution of models and transformations},
		author={Kusel, Angelika and Etzlstorfer, Jurgen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schwinger, Wieland and Schonbock, Johannes},
		booktitle={ACM/IEEE 18th MODELS},
		pages={116--125},
		year={2015}
	}
	
	@inproceedings{taentzer2013customizable,
		title={Customizable model migration schemes for meta-model evolutions with multiplicity changes},
		author={Taentzer, Gabriele and Mantz, Florian and Arendt, Thorsten and Lamo, Yngve},
		booktitle={International Conference on Model Driven Engineering Languages and Systems},
		pages={254--270},
		year={2013},
		organization={Springer}
	}
	
	@inproceedings{altmanninger2008amor,
		title={AMOR--towards adaptable model versioning},
		author={Altmanninger, Kerstin and Kappel, Gerti and Kusel, Angelika and Retschitzegger, Werner and Seidl, Martina and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={1st International Workshop on Model Co-Evolution and Consistency Management, in conjunction with MODELS},
		volume={8},
		pages={4--50},
		year={2008}
	}
	
	@inproceedings{kogel2008towards,
		title={Towards software configuration management for unified models},
		author={K{\"o}gel, Maximilian},
		booktitle={Proceedings of the 2008 international workshop on Comparison and versioning of software models},
		pages={19--24},
		year={2008},
		organization={ACM}
	}
	
	@inproceedings{alkhazi2016automated,
		title={Automated refactoring of ATL model transformations: a search-based approach},
		author={Alkhazi, Bader and Ruas, Terry and Kessentini, Marouane and Wimmer, Manuel and Grosky, William I},
		booktitle={The ACM/IEEE 19th MODELS},
		pages={295--304},
		year={2016}
	}
	
	
	
	@inproceedings{di2013methodological,
		title={A methodological approach for the coupled evolution of metamodels and atl transformations},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={ICMT},
		pages={60--75},
		year={2013},
		organization={Springer}
	}
	
	@inproceedings{di2014dealing,
		title={Dealing with the Coupled Evolution of Metamodels and Model-to-text Transformations.},
		author={Di Rocco, Juri and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={ME@ MoDELS},
		pages={22--31},
		year={2014}
	}
	
	@inproceedings{salman2015students,
		title={Are students representatives of professionals in software engineering experiments?},
		author={Salman, Iflaah and Misirli, Ayse Tosun and Juristo, Natalia},
		booktitle={ICSE-Volume 1},
		pages={666--676},
		year={2015},
		organization={IEEE Press}
	}
	
	@inproceedings{runeson2003using,
		title={Using students as experiment subjects--an analysis on graduate and freshmen student data},
		author={Runeson, Per},
		booktitle={Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering},
		pages={95--102},
		year={2003}
	}
	
	@article{host2000using,
		title={Using students as subjects—a comparative study of students and professionals in lead-time impact assessment},
		author={H{\"o}st, Martin and Regnell, Bj{\"o}rn and Wohlin, Claes},
		journal={Empirical Software Engineering},
		volume={5},
		number={3},
		pages={201--214},
		year={2000},
		publisher={Springer}
	}
	
	@inproceedings{berander2004using,
		title={Using students as subjects in requirements prioritization},
		author={Berander, Patrik},
		booktitle={Empirical Software Engineering, 2004. ISESE'04. Proceedings. 2004 International Symposium on},
		pages={167--176},
		year={2004},
		organization={IEEE}
	}
	
	@inproceedings{svahnberg2008using,
		title={Using students as subjects-an empirical evaluation},
		author={Svahnberg, Mikael and Aurum, Ayb{\"u}ke and Wohlin, Claes},
		booktitle={2nd ESEM},
		pages={288--290},
		year={2008},
		organization={ACM}
	}
	
	@article{mendez2010towards,
		title={Towards transformation migration after metamodel evolution},
		author={Mendez, David and Etien, Anne and Muller, Alexis and Casallas, Rubby},
		journal={ME Wokshop@MODELS},
		year={2010}
	}
	
	****************
	
	@article{jakumeit2014survey,
		title={A survey and comparison of transformation tools based on the transformation tool contest},
		author={Jakumeit, Edgar and Buchwald, Sebastian and Wagelaar, Dennis and Dan, Li and Heged{\"u}s, {\'A}bel and Herrmannsd{\"o}rfer, Markus and Horn, Tassilo and Kalnina, Elina and Krause, Christian and Lano, Kevin and others},
		journal={Science of computer programming},
		volume={85},
		pages={41--99},
		year={2014},
		publisher={Elsevier}
	}
	
	
	@article{taentzer2005model,
		title={Model transformation by graph transformation: A comparative study},
		author={Taentzer, Gabriele and Ehrig, Karsten and Guerra, Esther and Lara, Juan de and Lengyel, Laszlo and Levendovszky, Tihamer and Prange, Ulrike and Varr{\'o}, D{\'a}niel and Varr{\'o}-Gyapay, Szilvia},
		year={2005}
	}
	
	@inproceedings{gronmo2009comparison,
		title={Comparison of three model transformation languages},
		author={Gr{\o}nmo, Roy and M{\o}ller-Pedersen, Birger and Olsen, G{\o}ran K},
		booktitle={ECMDA-FA},
		pages={2--17},
		year={2009},
		organization={Springer}
	}
	
	@article{perez2010case,
		title={A case study to evaluate the suitability of graph transformation tools for program refactoring},
		author={P{\'e}rez, Javier and Crespo, Yania and Hoffmann, Berthold and Mens, Tom},
		journal={International Journal on Software Tools for Technology Transfer (STTT)},
		volume={12},
		number={3},
		pages={183--199},
		year={2010},
		publisher={Springer}
	}
	
	@inproceedings{rose2010comparing,
		title={Comparing model-metamodel and transformation-metamodel coevolution},
		author={Rose, Louis and Etien, Anne and Mendez, David and Kolovos, Dimitrios and Paige, Richard and Polack, Fiona},
		booktitle={International workshop on models and evolutions},
		year={2010}
	}
	
	@article{sendall2003model,
		title={Model transformation: The heart and soul of model-driven software development},
		author={Sendall, Shane and Kozaczynski, Wojtek},
		journal={IEEE software},
		volume={20},
		number={5},
		pages={42--45},
		year={2003},
		publisher={IEEE}
	}
	
	@inproceedings{czarnecki2003classification,
		title={Classification of model transformation approaches},
		author={Czarnecki, Krzysztof and Helsen, Simon},
		booktitle={Proceedings of the 2nd OOPSLA Workshop on Generative Techniques in the Context of the Model Driven Architecture},
		volume={45},
		number={3},
		pages={1--17},
		year={2003},
		organization={USA}
	}
	
	@article{mens2006taxonomy,
		title={A taxonomy of model transformation},
		author={Mens, Tom and Van Gorp, Pieter},
		journal={Electronic Notes in Theoretical Computer Science},
		volume={152},
		pages={125--142},
		year={2006},
		publisher={Elsevier}
	}
	
	@article{hemel2008code,
		title={Code generation by model transformation},
		author={Hemel, Zef and Kats, Lennart and Visser, Eelco},
		journal={Theory and Practice of Model Transformations},
		pages={183--198},
		year={2008},
		publisher={Springer}
	}
	
	@article{hemel2010code,
		title={Code generation by model transformation: a case study in transformation modularity},
		author={Hemel, Zef and Kats, Lennart CL and Groenewegen, Danny M and Visser, Eelco},
		journal={Software and Systems Modeling},
		volume={9},
		number={3},
		pages={375--402},
		year={2010},
		publisher={Springer}
	}
	
	@inproceedings{burger2010change,
		title={A Change Metamodel for the Evolution of MOF-Based Metamodels.},
		author={Burger, Erik and Gruschko, Boris},
		booktitle={Modellierung},
		volume={2010},
		pages={285--300},
		year={2010}
	}
	
	@article{mens2007analysing,
		title={Analysing refactoring dependencies using graph transformation},
		author={Mens, Tom and Taentzer, Gabriele and Runge, Olga},
		journal={Software and Systems Modeling},
		volume={6},
		number={3},
		pages={269},
		year={2007},
		publisher={Springer}
	}
	
	@article{zhang2005generic,
		title={Generic and domain-specific model refactoring using a model transformation engine},
		author={Zhang, Jing and Lin, Yuehua and Gray, Jeff},
		journal={Model-driven Software Development},
		volume={23},
		year={2005},
		publisher={Springer}
	}
	
	@article{hebig2016approaches,
		title={Approaches to co-evolution of metamodels and models: A survey},
		author={Hebig, Regina and Khelladi, Djamel Eddine and Bendraou, Reda},
		journal={IEEE Transactions on Software Engineering},
		volume={43},
		number={5},
		pages={396--414},
		year={2016},
		publisher={IEEE}
	}
	
	@inproceedings{hebig2015surveying,
		title={Surveying the corpus of model resolution strategies for metamodel evolution},
		author={Hebig, Regina and Khelladi, Djamel Eddine and Bendraou, Reda},
		booktitle={2015 Asia-Pacific Software Engineering Conference (APSEC)},
		pages={135--142},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{khelladi2017exploratory,
		title={An Exploratory Experiment on Metamodel-Transformation Co-Evolution},
		author={Khelladi, Djamel Eddine and Rodriguez, Horacio Hoyos and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Asia-Pacific Software Engineering Conference (APSEC), 2017 24th},
		pages={576--581},
		year={2017},
		organization={IEEE}
	}
	
	@inproceedings{combemale2007towards,
		title={Towards a Formal Verification of Process Model's Properties-SimplePDL and TOCL Case Study},
		author={Combemale, Beno{\^\i}t and Garoche, Pierre-Lo{\"\i}c and Cr{\'e}gut, Xavier and Thirioux, Xavier and Vernadat, Fran{\c{c}}ois},
		booktitle={9th International Conference on Enterprise Information Systems},
		pages={80--89},
		year={2007}
	}
	
	@inproceedings{cregut2010generative,
		title={Generative technologies for model animation in the TopCased platform},
		author={Cr{\'e}gut, Xavier and Combemale, Benoit and Pantel, Marc and Faudoux, Rapha{\"e}l and Pavei, Jonatas},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={90--103},
		year={2010},
		organization={Springer}
	}
	
	@inproceedings{hassan2004predicting,
		title={Predicting change propagation in software systems},
		author={Hassan, Ahmed E and Holt, Richard C},
		booktitle={Software maintenance, 2004. proceedings. 20th ieee international conference on},
		pages={284--293},
		year={2004},
		organization={IEEE}
	}
	
	@article{khelladi2017semi,
		title={A semi-automatic maintenance and co-evolution of OCL constraints with (meta) model evolution},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
		journal={Journal of Systems and Software},
		volume={134},
		pages={242--260},
		year={2017},
		publisher={Elsevier}
	}
	
	@inproceedings{vcubranic2003hipikat,
		title={Hipikat: Recommending pertinent software development artifacts},
		author={{\v{C}}ubrani{\'c}, Davor and Murphy, Gail C},
		booktitle={Proceedings of the 25th international Conference on Software Engineering},
		pages={408--418},
		year={2003},
		organization={IEEE Computer Society}
	}
	
	@inproceedings{robillard2002concern,
		title={Concern graphs: finding and describing concerns using structural program dependencies},
		author={Robillard, MR and Murphy, Gail C},
		booktitle={Software Engineering, 2002. ICSE 2002. Proceedings of the 24rd International Conference on},
		pages={406--416},
		year={2002},
		organization={IEEE}
	}
	
	@article{vieira2016towards,
		title={Towards Measuring the Change Impact in ATL Model Transformations},
		author={Vieira, Andreza and Ramalho, Franklin},
		journal={International Journal of Software Engineering and Knowledge Engineering},
		volume={26},
		number={02},
		pages={153--181},
		year={2016},
		publisher={World Scientific}
	}
	
	@inproceedings{vieira2014metrics,
		title={Metrics to measure the change impact in ATL model transformations},
		author={Vieira, Andreza and Ramalho, Franklin},
		booktitle={International Conference on Product-Focused Software Process Improvement},
		pages={254--268},
		year={2014},
		organization={Springer}
	}
	
	@inproceedings{di2011needed,
		title={What is needed for managing co-evolution in mde?},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
		pages={30--38},
		year={2011},
		organization={ACM}
	}
	
	@article{cuadrado2018quick,
		title={Quick fixing ATL transformations with speculative analysis},
		author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
		journal={Software \& Systems Modeling},
		pages={1--35},
		year={2018},
		publisher={Springer}
	}
	
	@inproceedings{cuadrado2015quick,
		title={Quick fixing ATL model transformations},
		author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
		booktitle={2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={146--155},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{di2017feature,
		title={A feature-based approach for variability exploration and resolution in model transformation migration},
		author={Di Ruscio, Davide and Etzlstorfer, Juergen and Iovino, Ludovico and Pierantonio, Alfonso and Schwinger, Wieland},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={71--89},
		year={2017},
		organization={Springer}
	}
	
	@inproceedings{khelladi2018change,
		title={Change Propagation-based and Composition-based Co-evolution of Transformations with Evolving Metamodels},
		author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
		pages={404--414},
		year={2018},
		organization={ACM}
	}
	
	@article{van2000domain,
		title={Domain-specific languages: An annotated bibliography},
		author={Van Deursen, Arie and Klint, Paul and Visser, Joost},
		journal={ACM Sigplan Notices},
		volume={35},
		number={6},
		pages={26--36},
		year={2000},
		publisher={ACM}
	}
	
	@book{gronback2009eclipse,
		title={Eclipse modeling project: a domain-specific language (DSL) toolkit},
		author={Gronback, Richard C},
		year={2009},
		publisher={Pearson Education}
	}
	
	
	@article{geiger2007emf,
		title={EMF code generation with Fujaba},
		author={Geiger, Leif and Buchmann, Thomas and Dotor, Alexander},
		journal={Fujaba days},
		pages={25--29},
		year={2007}
	}
	
	@article{andersen2010generic,
		title={Generic patch inference},
		author={Andersen, Jesper and Lawall, Julia L},
		journal={Automated software engineering},
		volume={17},
		number={2},
		pages={119--148},
		year={2010},
		publisher={Springer}
	}
	
	@article{nguyen2010graph,
		title={A graph-based approach to API usage adaptation},
		author={Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson Jr, Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N},
		journal={ACM Sigplan Notices},
		volume={45},
		number={10},
		pages={302--321},
		year={2010},
		publisher={ACM}
	}
	
	@inproceedings{henkel2005catchup,
		title={CatchUp! Capturing and replaying refactorings to support API evolution},
		author={Henkel, Johannes and Diwan, Amer},
		booktitle={Proceedings. 27th International Conference on Software Engineering, 2005. ICSE 2005.},
		pages={274--283},
		year={2005},
		organization={IEEE}
	}
	
	@article{dagenais2011recommending,
		title={Recommending adaptive changes for framework evolution},
		author={Dagenais, Barth{\'e}l{\'e}my and Robillard, Martin P},
		journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
		volume={20},
		number={4},
		pages={19},
		year={2011},
		publisher={ACM}
	}
	
	@inproceedings{kessentini2018integrating,
		title={Integrating the Designer in-the-loop for Metamodel/Model Co-Evolution via Interactive Computational Search},
		author={Kessentini, Wael and Wimmer, Manuel and Sahraoui, Houari},
		booktitle={Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
		pages={101--111},
		year={2018},
		organization={ACM}
	}
	
	@article{kessentini2019automated,
		title={Automated metamodel/model co-evolution: A search-based approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		journal={Information and Software Technology},
		volume={106},
		pages={49--67},
		year={2019},
		publisher={Elsevier}
	}
	
	@inproceedings{batot2017heuristic,
		title={Heuristic-Based Recommendation for Metamodel—OCL Coevolution},
		author={Batot, Edouard and Kessentini, Wael and Sahraoui, Houari and Famelis, Michalis},
		booktitle={2017 ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={210--220},
		year={2017},
		organization={IEEE}
	}
	
	@inproceedings{kessentini2018automated,
		title={Automated Co-evolution of Metamodels and Transformation Rules: A Search-Based Approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		booktitle={International Symposium on Search Based Software Engineering},
		pages={229--245},
		year={2018},
		organization={Springer}
	}
	
	@book{fowler2010domain,
		title={Domain-specific languages},
		author={Fowler, Martin},
		year={2010},
		publisher={Pearson Education}
	}
	
	@article{monperrus2018automatic,
		title={Automatic software repair: a bibliography},
		author={Monperrus, Martin},
		journal={ACM Computing Surveys (CSUR)},
		volume={51},
		number={1},
		pages={17},
		year={2018},
		publisher={ACM}
	}
	
	@inproceedings{yu2012maintaining,
		title={Maintaining invariant traceability through bidirectional transformations},
		author={Yu, Yijun and Lin, Yu and Hu, Zhenjiang and Hidaka, Soichiro and Kato, Hiroyuki and Montrieux, Lionel},
		booktitle={2012 34th International Conference on Software Engineering (ICSE)},
		pages={540--550},
		year={2012},
		organization={IEEE}
	}
	
	
	@inproceedings{kessentini2020interactive,
		title={Interactive metamodel/model co-evolution using unsupervised learning and multi-objective search},
		author={Kessentini, Wael and Alizadeh, Vahid},
		booktitle={Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems},
		pages={68--78},
		year={2020}
	}
	
	@inproceedings{cherfa2021identifying,
		title={Identifying Metamodel Inaccurate Structures During Metamodel/Constraint Co-Evolution},
		author={Cherfa, Elyes and Mesli-Kesraoui, Soraya and Tibermacine, Chouki and Sadou, Salah and Fleurquin, R{\'e}gis},
		booktitle={2021 ACM/IEEE 24th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={24--34},
		year={2021},
		organization={IEEE}
	}
	
	@inproceedings{jongeling2020towards,
		title={Towards consistency checking between a system model and its implementation},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
		booktitle={Int. Conf. on Systems Modelling and Management},
		pages={30--39},
		year={2020},
		organization={Springer}
	}
	
	
	@inproceedings{jongeling2022Structural,
		title={Structural consistency between a system model and its implementation: a design science study in industry},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Carlson, Jan and Cicchetti, Antonio},
		booktitle={ECMFA},
		year={2022}
	}
	
	@inproceedings{zaheri2021towards,
		title={Towards Checking Consistency-Breaking Updates between Models and Generated Artifacts},
		author={Zaheri, MohammadAmin and Famelis, Michalis and Syriani, Eugene},
		booktitle={2021 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)},
		pages={400--409},
		year={2021},
		organization={IEEE}
	}
	
	
	@inproceedings{pham2017bidirectional,
		title={Bidirectional mapping between architecture model and code for synchronization},
		author={Pham, Van Cam and Radermacher, Ansgar and Gerard, Sebastien and Li, Shuai},
		booktitle={2017 IEEE International Conference on Software Architecture (ICSA)},
		pages={239--242},
		year={2017},
		organization={IEEE}
	}
	
	@article{goues2019automated,
		title={Automated program repair},
		author={Goues, Claire Le and Pradel, Michael and Roychoudhury, Abhik},
		journal={Communications of the ACM},
		volume={62},
		number={12},
		pages={56--65},
		year={2019},
		publisher={ACM New York, NY, USA}
	}
	
	@inproceedings{liu2020efficiency,
		title={On the efficiency of test suite based program repair: A systematic assessment of 16 automated repair systems for java programs},
		author={Liu, Kui and Wang, Shangwen and Koyuncu, Anil and Kim, Kisub and Bissyand{\'e}, Tegawend{\'e} F and Kim, Dongsun and Wu, Peng and Klein, Jacques and Mao, Xiaoguang and Traon, Yves Le},
		booktitle={Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
		pages={615--627},
		year={2020}
	}
	
	@article{gazzola2017automatic,
		title={Automatic software repair: A survey},
		author={Gazzola, Luca and Micucci, Daniela and Mariani, Leonardo},
		journal={IEEE Transactions on Software Engineering},
		volume={45},
		number={1},
		pages={34--67},
		year={2017},
		publisher={IEEE}
	}
	
	@inproceedings{bohme2013regression,
		title={Regression tests to expose change interaction errors},
		author={B{\"o}hme, Marcel and Oliveira, Bruno C d S and Roychoudhury, Abhik},
		booktitle={Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
		pages={334--344},
		year={2013}
	}
	
	@inproceedings{riedl2014towards,
		title={Towards model-and-code consistency checking},
		author={Riedl-Ehrenleitner, Markus and Demuth, Andreas and Egyed, Alexander},
		booktitle={2014 IEEE 38th Annual Computer Software and Applications Conference},
		pages={85--90},
		year={2014},
		organization={IEEE}
	}
	
	@article{kanakis2019empirical,
		title={An Empirical Study on the Impact of Inconsistency Feedback during Model and Code Co-changing.},
		author={Kanakis, Georgios and Khelladi, Djamel Eddine and Fischer, Stefan and Tr{\"o}ls, Michael and Egyed, Alexander},
		journal={The Journal of Object Technology},
		volume={18},
		number={2},
		pages={10--1},
		year={2019}
	}
	
	@inproceedings{khelladi2019detecting,
		title={Detecting and exploring side effects when repairing model inconsistencies},
		author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Proceedings of the 12th ACM SIGPLAN International Conference on Software Language Engineering},
		pages={113--126},
		year={2019}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	@article{Bezivin2014,
		author = {B{\'{e}}zivin, Jean},
		doi = {10.1007/11877028},
		file = {:Users/kebaili/Downloads/MON STAGE/Documentation/Model_Driven_Engineering_An_Emerging_Technical_Spa.pdf:pdf},
		number = {January 2005},
		title = {{Model Driven Engineering : An Emerging Technical Space Model Driven Engineering : An Emerging Technical Space}},
		year = {2014}
	}
	@article{Bezivin2004,
		abstract = {In November 2000, the OMG (Object Management Group) made public the MDA™ (Model Driven Architecture) initiative, a particular variant of a new global trend called model engineering. The basic ideas of model engineering are germane to many other approaches such as generative programming, domain specific languages, model-integrated computing, software factories, etc. MDA may be defined as the realization of model engineering principles around a set of OMG standards like MOF (Meta Object Facility), XMI (XML Metadata Interchange), OCL (Object Constraint Language), UML (Unified Modeling Language), CWM (Common Warehouse Metamodel), SPEM (Software Process Engineering Metamodel), etc. Similarly to the basic principle “Everything is an object” that was important in the 80's to set up the object-oriented technology, we suggest here, in model engineering, that the basic principle “Everything is a model” may be key to identifying the essential characteristics of this new trend.},
		author = {B{\'{e}}zivin, Jean},
		file = {:Users/kebaili/Downloads/MON STAGE/Documentation/MDE2.pdf:pdf},
		journal = {Special Novatica Issue - UML and Model Engineering},
		keywords = {MDA,Meta Model,Model Driven Architecture,Model Driven Engineering.},
		number = {2},
		pages = {21--24},
		title = {{In search of a basic principle for Model Driven Engineering}},
		volume = {5},
		year = {2004}
	}
	
	@article{Hutchinson2011,
		abstract = {This paper presents some initial results from a twelve-month empirical research study of model driven engineering (MDE). Using largely qualitative questionnaire and interview methods we investigate and document a range of technical, organizational and social factors that apparently influence organizational responses to MDE: specifically, its perception as a successful or unsuccessful organizational intervention. We then outline a range of lessons learned. Whilst, as with all qualitative research, these lessons should be interpreted with care, they should also be seen as providing a greater understanding of MDE practice in industry, as well as shedding light on the varied, and occasionally surprising, social, technical and organizational factors that affect success and failure. We conclude by suggesting how the next phase of the research will attempt to investigate some of these issues from a different angle and in greater depth. {\textcopyright} 2011 ACM.},
		author = {Hutchinson, John and Whittle, Jon and Rouncefield, Mark and Kristoffersen, Steinar},
		doi = {10.1145/1985793.1985858},
		file = {:Users/kebaili/Downloads/MON STAGE/Documentation/MDE_Industry.pdf:pdf},
		isbn = {9781450304450},
		issn = {02705257},
		journal = {Proceedings - International Conference on Software Engineering},
		keywords = {empirical software engineering,model driven engineering},
		pages = {471--480},
		title = {{Empirical assessment of MDE in industry}},
		year = {2011}
	}
	@phdthesis{khelladiPhD2016,
		author    = {Djamel E. Khelladi},
		title     = {Co-evolution of OCL constraints with evolution of metamodels.},
		school    = {Université Pierre et Marie Curie (Sorbonne universités), Paris, France},
		year      = {2016}
	}
	
	@article{Tolvanen2009,
		author = {Tolvanen, Juha Pekka and Kelly, Steven},
		doi = {10.1145/1639950.1640031},
		file = {:Users/kebaili/Downloads/MON STAGE/MetaEdit_defining_and_using_integrated_domain-spec.pdf:pdf},
		isbn = {9781605587660},
		journal = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA},
		keywords = {Code generation,Domain-specific languages,Domain-specific modeling,Language workbench,Metamodeling},
		number = {June 2014},
		pages = {819--820},
		title = {{MetaEdit+: Defining and using integrated domain-specific modeling languages}},
		year = {2009}
	}
	@article{Boldt2006,
		author = {Boldt, Nick and Steinberg, Dave},
		file = {:Users/kebaili/Downloads/MON STAGE/EclipseCon2006_EMF_Intro.pdf:pdf},
		pages = {1--89},
		title = {{Introduction to the Eclipse Modeling Framework}},
		url = {http://www.eclipse.org/modeling/emf/docs/presentations/EclipseCon/EclipseCon2006_EMF_Intro.pdf},
		year = {2006}
	}
	@article{Bezivin2005,
		abstract = {In November 2000, the OMG made public the MDA™ initiative, a particular variant of a new global trend called MDE (Model Driven Engineering). The basic ideas of MDA are germane to many other approaches such as generative programming, domain specific languages, model-integrated computing, generic model management, software factories, etc. MDA may be defined as the realization of MDE principles around a set of OMG standards like MOF, XMI, OCL, UML, CWM, SPEM, etc. MDE is presently making several promises about the potential benefits that could be reaped from a move from code-centric to model-based practices. When we observe these claims, we may wonder when they may be satisfied: on the short, medium or long term or even never perhaps for some of them. This paper tries to propose a vision of the development of MDE based on some lessons learnt in the past 30 years in the development of object technology. The main message is that a basic principle ("Everything is an object") was most helpful in driving the technology in the direction of simplicity, generality and power of integration. Similarly in MDE, the basic principle that "Everything is a model" has many interesting properties, among others the capacity to generate a realistic research agenda. We postulate here that two core relations (representation and conformance) are associated to this principle, as inheritance and instantiation were associated to the object unification principle in the class-based languages of the 80's. We suggest that this may be most useful in understanding many questions about MDE in general and the MDA approach in particular. We provide some illustrative examples. The personal position taken in this paper would be useful if it could generate a critical debate on the research directions in MDE. {\textcopyright} Springer-Verlag 2004.},
		author = {B{\'{e}}zivin, Jean},
		doi = {10.1007/s10270-005-0079-0},
		file = {:Users/kebaili/Downloads/MON STAGE/On_the_Unification_Power_of_Models (1).pdf:pdf},
		issn = {16191366},
		journal = {Software and Systems Modeling},
		keywords = {MDA,MDE,Metamodels,Models},
		number = {2},
		pages = {171--188},
		title = {{On the unification power of models}},
		volume = {4},
		year = {2005}
	}
	@article{Agrawal2012,
		abstract = {Indian software industry has had a phenomenal growth in the last two decades and is expected to sustain this momentum in the foreseeable future. Based on content analysis of 25 cases, the paper identifies several human resource management challenges: managing human resources in globally distributed team, shortage of software professionals having sufficient knowledge and competencies, low-skilled nature of the work, lack of well-developed HR systems and processes, high employee turnover, lack of work-life balance, and the problems associated with the use of contract employees. The paper develops a model for managing growth linking the various variables emerging from the study. {\textcopyright} 2011 Elsevier Inc.},
		author = {Agrawal, Narendra M. and Khatri, Naresh and Srinivasan, R.},
		doi = {10.1016/j.jwb.2011.04.002},
		file = {:Users/kebaili/Downloads/MON STAGE/Managing growth- Human resource management challenges facing the Indian software industry.pdf:pdf},
		issn = {10909516},
		journal = {Journal of World Business},
		keywords = {Globally distributed teams,Human resource management practices,IT professionals,Indian software industry,Organizational growth},
		number = {2},
		pages = {159--166},
		publisher = {Elsevier Inc.},
		title = {{Managing growth: Human resource management challenges facing the Indian software industry}},
		url = {http://dx.doi.org/10.1016/j.jwb.2011.04.002},
		volume = {47},
		year = {2012}
	}
	
	@article{Steinberg2008,
		author = {Steinberg, Dave},
		file = {:Users/kebaili/Downloads/MON STAGE/EclipseCon2008_309T_Fundamentals_of_EMF.pdf:pdf},
		journal = {Eclipse Foundation, editor, eclipsecon},
		keywords = {Code Generation,EMF,Eclipse},
		pages = {2005--2008},
		title = {{Fundamentals of the eclipse modeling framework}},
		url = {http://www.eclipse.org/modeling/emf/docs/presentations/EclipseWorld/EclipseWorld2007.pdf},
		year = {2008}
	}
	@book{lientz1980software,
		title={Software Maintenance Management: A Study of the Maintenance of Computer Application Software in 487 Data Processing Organizations},
		author={Lientz, B.P. and Swanson, E.B.},
		isbn={9780201042054},
		lccn={80012154},
		url={https://books.google.fr/books?id=8a6gAAAAMAAJ},
		year={1980},
		publisher={Addison-Wesley}
	}
	@article{Swanson1976,
		abstract = {The area of software maintenance has been described by one author as an "iceberg." (EDP Analyzer, 1972) Much goes on here that does not currently meet the eye. In part, this is the consequence of measurement difficulties. Practitioners and researchers can benefit from an understanding of the "dimensionality" of the maintenance problem. Some measures are suggested for coming to grips with this dimensionality, and problems of utilization associated with these measures are explored.},
		author = {Swanson, E. Burton},
		file = {:Users/kebaili/Downloads/MON STAGE/Documentation/THE DIMENSIONS OF MAINTENANCE.pdf:pdf},
		issn = {02705257},
		journal = {Proceedings - International Conference on Software Engineering},
		keywords = {Performance measurement,Software maintenance},
		pages = {492--497},
		title = {{The dimensions of maintenance}},
		year = {1976}
	}
	
	@article{Brown2004,
		abstract = {Model Driven Architecture (MDA1 )is anap- proach to application modeling and generation that has received a lot of attention in recent months. Champi- oned by the Object Management Group (OMG), many organizations are now looking at the ideas of MDA as a way to organize andmanage their application solutions, tool vendors are explicitly referring to their capabilities in terms of “MDA compliance”, and the MDA lexicon of platform-specific and platform-independent models is now widely referenced in the industry. In spite of this interest and market support, there is little clear guidance on what MDA means, where we are in its evolution, what is possible with today's technology, and howto take advantage of it in practice.This paper ad- dresses thatneedbyproviding ananalysis ofhowmodeling is used in industry today, the relevance ofMDAto today's systems, a classification ofMDA tooling support, and ex- amples of its use.The paper concludeswith a set of recom- mendations for howMDAcan be successful in practice},
		author = {Brown, Alan W.},
		doi = {10.1007/s10270-004-0061-2},
		file = {:Users/kebaili/Downloads/MON STAGE/Model_driven_architecture_Principles_and_practice.pdf:pdf},
		issn = {1619-1366},
		journal = {Software and Systems Modeling},
		keywords = {complexity to the soft-,in addition to the,many of,scale and complexity of,software architecture,software design,there is also great,these efforts,uml,unified modeling language},
		number = {August 2004},
		title = {{Model driven architecture: Principles and practice}},
		year = {2004}
	}
	
	@inproceedings{Khelladi2020,
		author = {Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier and J\'{e}z\'{e}quel, Jean-Marc},
		title = {Co-Evolving Code with Evolving Metamodels},
		year = {2020},
		isbn = {9781450371216},
		abstract = {Metamodels play a significant role to describe and analyze the relations between domain concepts. They are also cornerstone to build a software language (SL) for a domain and its associated tooling. Metamodel definition generally drives code generation of a core API. The latter is further enriched by developers with additional code implementing advanced functionalities, e.g., checkers, recommenders, etc. When a SL is evolved to the next version, the metamodels are evolved as well before to re-generate the core API code. As a result, the developers added code both in the core API and the SL toolings may be impacted and thus may need to be co-evolved accordingly. Many approaches support the co-evolution of various artifacts when metamodels evolve. However, not the co-evolution of code. This paper fills this gap. We propose a semi-automatic co-evolution approach based on change propagation. The premise is that knowledge of the metamodel evolution changes can be propagated by means of resolutions to drive the code co-evolution. Our approach leverages on the abstraction level of metamodels where a given metamodel element has often different usages in the code. It supports alternative co-evaluations to meet different developers needs. Our work is evaluated on three Eclipse SL implementations, namely OCL, Modisco, and Papyrus over several evolved versions of metamodels and code. In response to five different evolved metamodels, we co-evolved 976 impacts over 18 projects.A comparison of our co-evolved code with the versioned ones shows the usefulness of our approach. Our approach was able to reach a weighted average of 87.4% and 88.9% respectively of precision and recall while supporting useful alternative co-evolution that developers have manually performed.},
		booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
		pages = {1496–1508},
		numpages = {13},
		location = {Seoul, South Korea},
		series = {ICSE '20}
	}
	
	
	@article{Herrmannsdoerfer2011,
		abstract = {Modeling languages and thus their metamodels are subject to change. When a metamodel is evolved, existing models may no longer conform to it. Manual migration of these models in response to metamodel evolution is tedious and error-prone. To significantly automate model migration, operator-based approaches provide reusable coupled operators that encapsulate both metamodel evolution and model migration. The success of an operator-based approach highly depends on the library of reusable coupled operators it provides. In this paper, we thus present an extensive catalog of coupled operators that is based both on a literature survey as well as real-life case studies. The catalog is organized according to a number of criteria to ease assessing the impact on models as well as selecting the right operator for a metamodel change at hand. {\textcopyright} 2011 Springer-Verlag Berlin Heidelberg.},
		author = {Herrmannsdoerfer, Markus and Vermolen, Sander D. and Wachsmuth, Guido},
		file = {:Users/kebaili/Downloads/MON STAGE/Documentation/An Extensive Catalog of Operators for the Coupled Evolution of Metamodels and Models.pdf:pdf},
		isbn = {9783642194399},
		issn = {03029743},
		journal = {Lecture Notes in Computer Science},
		pages = {163--182},
		title = {{An extensive catalog of operators for the coupled evolution of metamodels and models}},
		volume = {6563 LNCS},
		year = {2011}
	}
	@article{Khelladi2016,
		abstract = {Evolution of metamodels can be represented at the finest grain by the trace of atomic changes such as add, delete, and update of elements. For many applications, like automatic correction of models when the metamodel evolves, a higher grained trace must be inferred, composed of complex changes, each one aggregating several atomic changes. Complex change detection is a challenging task since multiple sequences of atomic changes may define a single user intention and complex changes may overlap over the atomic change trace. In this paper, we propose a detection engine of complex changes that simultaneously addresses these two challenges of variability and overlap. We introduce three ranking heuristics to help users to decide which overlapping complex changes are likely to be correct. In our approach, we record the trace of atomic changes rather than computing them with the difference between the original and evolved metamodel. Thus, we have a complete and an ordered sequence of atomic changes without hidden changes. Furthermore, we consider the issue of undo operations (i.e. change canceling actions) while recording the sequence of atomic changes, and we illustrate how we cope with it. We validate our approach on 8 real case studies demonstrating its feasibility and its applicability. We observe that a full recall is always reached in all case studies and an average precision of 70.75%. The precision is improved by the heuristics up to 91% and 100% in some cases.},
		author = {Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie Pierre},
		doi = {10.1016/j.is.2016.05.002},
		file = {:Users/kebaili/Downloads/MON STAGE/Detecting complex changes and refactorings during (Meta) model evolution.pdf:pdf},
		issn = {03064379},
		journal = {Information Systems},
		keywords = {Complex change,Detection,Evolution,Metamodel,Refactoring},
		pages = {220--241},
		publisher = {Elsevier},
		title = {{Detecting complex changes and refactorings during (Meta)model evolution}},
		url = {http://dx.doi.org/10.1016/j.is.2016.05.002},
		volume = {62},
		year = {2016}
	}
	@article{Alter2015,
		abstract = {This tutorial explains the most current version of work system theory and related ideas that were developed over several decades in an attempt to create a systems analysis and design method that could be used by business professionals. This tutorial covers: 1) work system theory (WST), 2) application of WST in various versions of the work system method (WSM), and 3) extensions of WST including work system principles, work system design spaces, a work system metamodel that reinterprets basic work system ideas in a detailed way that is more directly useful for IT-related analysis and design, linkages between WST and service systems, and application of work system ideas in a theory of workarounds and proposed theory of system interactions.},
		author = {Alter, Steven},
		doi = {10.1007/978-3-319-19069-3},
		
		isbn = {9783319190686},
		issn = {16113349},
		journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
		keywords = {Work system,Work system framework,Work system life cycle model,Work system metamodel},
		pages = {520--521},
		title = {{Work system theory: A bridge between business and IT views of systems}},
		volume = {9097},
		year = {2015}
	}
	
	
	@inproceedings{williams2012searching,
		title={Searching for model migration strategies},
		author={Williams, James R and Paige, Richard F and Polack, Fiona AC},
		booktitle={Proceedings of the 6th International Workshop on Models and Evolution},
		pages={39--44},
		year={2012},
		organization={ACM}
	}
	
	@inproceedings{cicchetti_managing_2009,
		title={Managing dependent changes in coupled evolution},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
		booktitle={International Conference on Theory and Practice of Model Transformations},
		pages={35--51},
		year={2009},
		organization={Springer}
	}
	
	
	
	@article{langer_posteriori_20132,
		title={A posteriori operation detection in evolving software models},
		author={Langer, Philip and Wimmer, Manuel and Brosch, Petra and Herrmannsd{\"o}rfer, Markus and Seidl, Martina and Wieland, Konrad and Kappel, Gerti},
		journal={Journal of Systems and Software},
		volume={86},
		number={2},
		pages={551--566},
		year={2013},
		publisher={Elsevier}
	}
	
	@InProceedings{vermolen_reconstructing_2012,
		author="Vermolen, Sander D.
		and Wachsmuth, Guido
		and Visser, Eelco",
		editor="Sloane, Anthony
		and A{\ss}mann, Uwe",
		title="Reconstructing Complex Metamodel Evolution",
		booktitle="Software Language Engineering",
		year="2012",
		publisher="Springer Berlin Heidelberg",
		address="Berlin, Heidelberg",
		pages="201--221",
		abstract="Metamodel evolution requires model migration. To correctly migrate models, evolution needs to be made explicit. Manually describing evolution is error-prone and redundant. Metamodel matching offers a solution by automatically detecting evolution, but is only capable of detecting primitive evolution steps. In practice, primitive evolution steps are jointly applied to form a complex evolution step, which has the same effect on a metamodel as the sum of its parts, yet generally has a different effect in migration. Detection of complex evolution is therefore needed. In this paper, we present an approach to reconstruct complex evolution between two metamodel versions, using a matching result as input. It supports operator dependencies and mixed, overlapping, and incorrectly ordered complex operator components. It also supports interference between operators, where the effect of one operator is partially or completely hidden from the target metamodel by other operators.",
		isbn="978-3-642-28830-2"
	}
	
	
	@article{Jiang2013,
		abstract = {In the process of software evolution, software change information can help software developers and system analysts to get a better understanding of differential part of software. In this paper, we construct different versions of source code into abstract syntax trees, and use an improved tree matching algorithm which combines multiple string matching algorithms, bilateral best match strategy and predicate information of program to improve the match result. Also a detailed change type list is defined and all the tree editing operations will be mapped to refined program change classification. We evaluated our tree match algorithm on a medium-size project of different versions. Ten typical classes were picked as a benchmark and 456 changes were specified manually. Our method show a good performance on this benchmark with the average change number bias controlled in 1.75, and the average change number error percentage is controlled fewer than 5.38%. {\textcopyright} 2013 IEEE.},
		author = {Jiang, Lu and Zhang, Zhiyi and Zhao, Zhihong},
		doi = {10.1109/WISA.2013.42},
		file = {:Users/kebaili/Downloads/MON STAGE/AST1.pdf:pdf},
		isbn = {9781479932191},
		journal = {Proceedings - 2013 10th Web Information System and Application Conference, WISA 2013},
		keywords = {Abstract Syntax Tree,Program Differential Analysis,Software Evolution},
		pages = {180--183},
		title = {{AST based JAVA software evolution analysis}},
		year = {2013}
	}
	
	@article{pandey2011object,
		title={Object constraint language (OCL) past, present and future},
		author={Pandey, RK},
		journal={ACM SIGSOFT software engineering notes},
		volume={36},
		number={1},
		pages={1--4},
		year={2011},
		publisher={ACM New York, NY, USA}
	}
	
	
	@inproceedings{palsberg1998essence,
		title={The essence of the visitor pattern},
		author={Palsberg, Jens and Jay, C Barry},
		booktitle={Proceedings. The Twenty-Second Annual International Computer Software and Applications Conference (Compsac'98)(Cat. No. 98CB 36241)},
		pages={9--15},
		year={1998},
		organization={IEEE}
	}
	
	
	
	
	@inproceedings{Mohagheghi2009,
		abstract = {Model-Driven Engineering has been promoted for some time as the solution for the main problem software industry is facing, i.e. complexity of software development, by raising the abstraction level and introducing more automation in the process. The promises are many; among them improved software quality by increased traceability between artifacts, early defect detection, reducing manual and error-prone work and including knowledge in generators. However, in our opinion MDE is still in the early adoption phase and to be successfully adopted by industry, it must prove its superiority over other development paradigms and be supported by a rich ecosystem of stable, compatible and standardized tools. It should also not introduce more complexity than it removes. The subject of this paper is the challenges in MDE adoption from our experience of using MDE in real and research projects, where MDE has potential for success and what the key success criteria are.},
		author = {Parastoo Mohagheghi and Miguel A. Fernandez and Juan A. Martell and Mathias Fritzsche and Wasif Gilani},
		doi = {10.1007/978-3-642-01648-6_6},
		isbn = {9783642016479},
		issn = {03029743},
		journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
		keywords = {Challenges,Domain-specific modeling,Model-driven engineering,Performance engineering,Traceability},
		pages = {54-59},
		title = {MDE adoption in industry: Challenges and success criteria},
		volume = {5421},
		year = {2009},
	}
	
	@article{bruneliere2014modisco,
		title={Modisco: A model driven reverse engineering framework},
		author={Bruneliere, Hugo and Cabot, Jordi and Dup{\'e}, Gr{\'e}goire and Madiot, Fr{\'e}d{\'e}ric},
		journal={Information and Software Technology},
		volume={56},
		number={8},
		pages={1012--1032},
		year={2014},
		publisher={Elsevier}
	}
	
	@inproceedings{bruneliere2010modisco,
		title={MoDisco: a generic and extensible framework for model driven reverse engineering},
		author={Bruneliere, Hugo and Cabot, Jordi and Jouault, Fr{\'e}d{\'e}ric and Madiot, Fr{\'e}d{\'e}ric},
		booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
		pages={173--174},
		year={2010}
	}
	
	@inproceedings{jongeling2020towards2,
		title={Towards consistency checking between a system model and its implementation},
		author={Jongeling, Robbert and Fredriksson, Johan and Ciccozzi, Federico and Cicchetti, Antonio and Carlson, Jan},
		booktitle={International Conference on Systems Modelling and Management},
		pages={30--39},
		year={2020},
		organization={Springer}
	}
	
	@article{DANGLOT2019110398,
		title = {A snowballing literature study on test amplification},
		journal = {Journal of Systems and Software},
		volume = {157},
		pages = {110398},
		year = {2019},
		issn = {0164-1212},
		doi = {https://doi.org/10.1016/j.jss.2019.110398},
		url = {https://www.sciencedirect.com/science/article/pii/S0164121219301736},
		author = {Benjamin Danglot and Oscar Vera-Perez and Zhongxing Yu and Andy Zaidman and Martin Monperrus and Benoit Baudry},
		keywords = {Test amplification, Test augmentation, Test optimization, Test regeneration, Automatic testing},
		abstract = {The adoption of agile approaches has put an increased emphasis on testing, resulting in extensive test suites. These suites include a large number of tests, in which developers embed knowledge about meaningful input data and expected properties as oracles. This article surveys works that exploit this knowledge to enhance manually written tests with respect to an engineering goal (e.g., improve coverage or refine fault localization). While these works rely on various techniques and address various goals, we believe they form an emerging and coherent field of research, which we coin “test amplification”. We devised a first set of papers from DBLP, searching for all papers containing “test” and “amplification” in their title. We reviewed the 70 papers in this set and selected the 4 papers that fit the definition of test amplification. We use them as the seeds for our snowballing study, and systematically followed the citation graph. This study is the first that draws a comprehensive picture of the different engineering goals proposed in the literature for test amplification. We believe that this survey will help researchers and practitioners entering this new field to understand more quickly and more deeply the intuitions, concepts and techniques used for test amplification.}
	}
	@article{https://doi.org/10.1002/stvr.1601,
		author = {Rojas, José Miguel and Fraser, Gordon and Arcuri, Andrea},
		title = {Seeding strategies in search-based unit test generation},
		journal = {Software Testing, Verification and Reliability},
		volume = {26},
		number = {5},
		pages = {366-401},
		keywords = {test case generation, search-based testing, testing classes, search-based software engineering, JUnit, Java},
		doi = {https://doi.org/10.1002/stvr.1601},
		url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.1601},
		eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/stvr.1601},
		abstract = {Summary Search-based techniques have been applied successfully to the task of generating unit tests for object-oriented software. However, as for any meta-heuristic search, the efficiency heavily depends on many factors; seeding, which refers to the use of previous related knowledge to help solve the testing problem at hand, is one such factor that may strongly influence this efficiency. This paper investigates different seeding strategies for unit test generation, in particular seeding of numerical and string constants derived statically and dynamically, seeding of type information and seeding of previously generated tests. To understand the effects of these seeding strategies, the results of a large empirical analysis carried out on a large collection of open-source projects from the SF110 corpus and the Apache Commons repository are reported. These experiments show with strong statistical confidence that, even for a testing tool already able to achieve high coverage, the use of appropriate seeding strategies can further improve performance. © 2016 The Authors. Software Testing, Verification and Reliability Published by John Wiley \& Sons Ltd.},
		year = {2016}
	}
	
	@book{starfield1993model,
		title={How to model it: Problem solving for the computer age},
		author={Starfield, Anthony M and Smith, Karl and Bleloch, Andrew L},
		year={1993},
		publisher={McGraw-Hill, Inc.}
	}
	
	@inproceedings{bezivin2001towards,
		title={Towards a precise definition of the OMG/MDA framework},
		author={B{\'e}zivin, Jean and Gerb{\'e}, Olivier},
		booktitle={Automated Software Engineering, 2001.(ASE 2001). Proceedings. 16th Annual International Conference on},
		pages={273--280},
		year={2001},
		organization={IEEE}
	}
	
	@book{kleppe2003mda,
		title={MDA explained: the model driven architecture: practice and promise},
		author={Kleppe, Anneke G and Warmer, Jos B and Bast, Wim},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@article{brown2004model,
		title={Model driven architecture: Principles and practice},
		author={Brown, Alan W},
		journal={Software and Systems Modeling},
		volume={3},
		number={4},
		pages={314--327},
		year={2004},
		publisher={Springer}
	}
	
	
	
	@incollection{boronat2008algebraic,
		title={An algebraic semantics for MOF},
		author={Boronat, Artur and Meseguer, Jos{\'e}},
		booktitle={Fundamental Approaches to Software Engineering},
		pages={377--391},
		year={2008},
		publisher={Springer}
	}
	
	@incollection{koch2003towards,
		title={Towards a common metamodel for the development of web applications},
		author={Koch, Nora and Kraus, Andreas},
		booktitle={Web Engineering},
		pages={497--506},
		year={2003},
		publisher={Springer}
	}
	
	@article{seidewitz2003models,
		title={What models mean},
		author={Seidewitz, Ed},
		journal={IEEE software},
		volume={20},
		number={5},
		pages={26},
		year={2003},
		publisher={IEEE Computer Society}
	}
	
	@article{bezivin2005unification,
		title={On the unification power of models},
		author={B{\'e}zivin, Jean},
		journal={Software \& Systems Modeling},
		volume={4},
		number={2},
		pages={171--188},
		year={2005},
		publisher={Springer}
	}
	
	@incollection{bezivin2006model,
		title={Model driven engineering: An emerging technical space},
		author={B{\'e}zivin, Jean},
		booktitle={Generative and transformational techniques in software engineering},
		pages={36--64},
		year={2006},
		publisher={Springer}
	}
	
	@incollection{jouault2006km3,
		title={KM3: a DSL for Metamodel Specification},
		author={Jouault, Fr{\'e}d{\'e}ric and B{\'e}zivin, Jean},
		booktitle={Formal Methods for Open Object-Based Distributed Systems},
		pages={171--185},
		year={2006},
		publisher={Springer}
	}
	
	@inproceedings{bezivin2006canonical,
		title={A canonical scheme for model composition},
		author={B{\'e}zivin, Jean and Bouzitouna, Salim and Del Fabro, Marcos Didonet and Gervais, Marie-Pierre and Jouault, Fr{\'e}d{\'e}ric and Kolovos, Dimitrios and Kurtev, Ivan and Paige, Richard F},
		booktitle={Model Driven Architecture--Foundations and Applications},
		pages={346--360},
		year={2006},
		organization={Springer}
	}
	
	@article{schmidt2006model,
		title={Model-driven engineering},
		author={Schmidt, Douglas C},
		journal={COMPUTER-IEEE COMPUTER SOCIETY-},
		volume={39},
		number={2},
		pages={25},
		year={2006},
		publisher={Citeseer}
	}
	
	@article{berardi2005reasoning,
		title={Reasoning on UML class diagrams},
		author={Berardi, Daniela and Calvanese, Diego and De Giacomo, Giuseppe},
		journal={Artificial Intelligence},
		volume={168},
		number={1},
		pages={70--118},
		year={2005},
		publisher={Elsevier}
	}
	
	@inproceedings{atkinson2012symbiotic,
		title={Symbiotic general-purpose and domain-specific languages},
		author={Atkinson, Colin and Gerbig, Ralph and Kennel, Bastian},
		booktitle={Proceedings of the 34th International Conference on Software Engineering},
		pages={1269--1272},
		year={2012},
		organization={IEEE Press}
	}
	
	@inproceedings{france2007model,
		title={Model-driven development of complex software: A research roadmap},
		author={France, Robert and Rumpe, Bernhard},
		booktitle={2007 Future of Software Engineering},
		pages={37--54},
		year={2007},
		organization={IEEE Computer Society}
	}
	
	@article{fuentes2004introduction,
		title={An introduction to UML profiles},
		author={Fuentes-Fern{\'a}ndez, Lidia and Vallecillo-Moreno, Antonio},
		journal={UML and Model Engineering},
		volume={2},
		year={2004}
	}
	
	@article{atkinson2002profiles,
		title={Profiles in a strict metamodeling framework},
		author={Atkinson, Colin and K{\"u}hne, Thomas},
		journal={Science of Computer Programming},
		volume={44},
		number={1},
		pages={5--22},
		year={2002},
		publisher={Elsevier}
	}
	
	@incollection{mezei2007optimizing,
		title={An optimizing OCL compiler for metamodeling and model transformation environments},
		author={Mezei, Gergely and Levendovszky, Tiham{\'e}r and Charaf, Hassan},
		booktitle={Software Engineering Techniques: Design for Quality},
		pages={61--71},
		year={2007},
		publisher={Springer}
	}
	
	@inproceedings{CabotG12SFM,
		author    = {Jordi, Cabot and Martin, Gogolla},
		title     = {Object Constraint Language {(OCL):} {A} Definitive Guide},
		booktitle = {12th {SFM} Bertinoro, Italy},
		pages     = {58--90},
		year      = {2012},
		crossref  = {DBLP:conf/sfm/2012},
		url       = {http://dx.doi.org/10.1007/978-3-642-30982-3_3},
		doi       = {10.1007/978-3-642-30982-3_3},
		timestamp = {Wed, 04 Jul 2012 11:18:10 +0200},
		biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sfm/CabotG12},
		bibsource = {dblp computer science bibliography, http://dblp.org}
	}
	
	@article{Ashbacher2003bookreview,
		title={Book review of “The Object Constraint Language Second Edition, Getting Your Models Ready for MDA”},
		author={Charles, Ashbacher},
		journal={Journal of Object Technology},
		volume={2},
		number={6},
		pages={139--140},
		year={2003}
	}
	
	@incollection{bergmann2014translating,
		title={Translating OCL to graph patterns},
		author={Bergmann, G{\'a}bor},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={670--686},
		year={2014},
		publisher={Springer}
	}
	
	
	
	
	@MISC{OCL20,
		author = {OMG},
		title = {Object Management Group. Object Constraints Language (OCL).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/OCL/}}
	}
	
	@MISC{MOF241,
		author = {OMG},
		title = {Object Management Group. Meta Object Facility (MOF).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/MOF/}}
	}
	
	@MISC{QVT20,
		author = {OMG},  
		title = {Object Management Group. Query / Views / Transformations (QVT).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/QVT/}}
	}
	
	@inproceedings{soeken2010verifying,
		title={Verifying UML/OCL models using Boolean satisfiability},
		author={Soeken, Mathias and Wille, Robert and Kuhlmann, Mirco and Gogolla, Martin and Drechsler, Rolf},
		booktitle={Proceedings of the Conference on Design, Automation and Test in Europe},
		pages={1341--1344},
		year={2010},
		organization={European Design and Automation Association}
	}
	
	@article{gogolla2007use,
		title={USE: A UML-based specification environment for validating UML and OCL},
		author={Gogolla, Martin and B{\"u}ttner, Fabian and Richters, Mark},
		journal={Science of Computer Programming},
		volume={69},
		number={1},
		pages={27--34},
		year={2007},
		publisher={Elsevier}
	}
	
	@article{gogolla2005validating,
		title={Validating UML and OCL models in USE by automatic snapshot generation},
		author={Gogolla, Martin and Bohling, J{\"o}rn and Richters, Mark},
		journal={Software \& Systems Modeling},
		volume={4},
		number={4},
		pages={386--398},
		year={2005},
		publisher={Springer}
	}
	
	@book{warmer2003object,
		title={The object constraint language: getting your models ready for MDA},
		author={Warmer, Jos B and Kleppe, Anneke G},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@book{richters2002precise,
		title={A precise approach to validating UML models and OCL constraints},
		author={Richters, Mark and others},
		year={2002},
		publisher={Citeseer}
	}
	
	@incollection{gogolla1998constraints,
		title={On constraints and queries in UML},
		author={Gogolla, Martin and Richters, Mark},
		booktitle={The Unified Modeling Language},
		pages={109--121},
		year={1998},
		publisher={Springer}
	}
	
	@incollection{hamie1998reflections,
		title={Reflections on the object constraint language},
		author={Hamie, Ali and Civello, Franco and Howse, John and Kent, Stuart and Mitchell, Richard},
		booktitle={The Unified Modeling Language.{\guillemotleft}UML{\guillemotright}’98: Beyond the Notation},
		pages={162--172},
		year={1998},
		publisher={Springer}
	}
	
	@incollection{cook2002amsterdam,
		title={The Amsterdam manifesto on OCL},
		author={Cook, Steve and Kleppe, Anneke and Mitchell, Richard and Rumpe, Bernhard and Warmer, Jos and Wills, Alan},
		booktitle={Object Modeling with the OCL},
		pages={115--149},
		year={2002},
		publisher={Springer}
	}
	
	@incollection{richters2002ocl,
		title={OCL: Syntax, semantics, and tools},
		author={Richters, Mark and Gogolla, Martin},
		booktitle={Object Modeling with the OCL},
		pages={42--68},
		year={2002},
		publisher={Springer}
	}
	
	@incollection{hennicker2002precise,
		title={On the precise meaning of OCL constraints},
		author={Hennicker, Rolf and Hussmann, Heinrich and Bidoit, Michel},
		booktitle={Object Modeling with the OCL},
		pages={69--84},
		year={2002},
		publisher={Springer}
	}
	
	@inproceedings{dzidek2005lessons,
		title={Lessons learned from developing a dynamic OCL constraint enforcement tool for Java},
		author={Dzidek, Wojciech J and Briand, Lionel C and Labiche, Yvan},
		booktitle={Satellite Events at the MoDELS 2005 Conference},
		pages={10--19},
		year={2005},
		organization={Springer}
	}
	
	@inproceedings{briand2004controlled,
		title={A controlled experiment on the impact of the object constraint language in UML-based maintenance},
		author={Briand, Lionel C and Labiche, Yvan and Yan, HD and Di Penta, Massimiliano},
		booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on},
		pages={380--389},
		year={2004},
		organization={IEEE}
	}
	
	@incollection{moiseev2009generating,
		title={Generating assertion code from OCL: A transformational approach based on similarities of implementation languages},
		author={Moiseev, Rodion and Hayashi, Shinpei and Saeki, Motoshi},
		booktitle={Model Driven Engineering Languages and Systems},
		pages={650--664},
		year={2009},
		publisher={Springer}
	}
	
	@article{cheon2008aspect,
		title={An aspect-based approach to checking design constraints at run-time},
		author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc and Estrada, Neith and Fierro, Valeria and Romo, Jessica},
		year={2008}
	}
	
	@article{cheon2009checking,
		title={Checking design constraints at run-time using OCL and AspectJ},
		author={Cheon, Yoonsik and Avila, Carmen and Roach, Steve and Munoz, Cuauhtemoc},
		year={2009}
	}
	
	@inproceedings{cheon2010automating,
		title={Automating Java program testing using OCL and AspectJ},
		author={Cheon, Yoonsik and Avila, Carmen},
		booktitle={Information Technology: New Generations (ITNG), 2010 Seventh International Conference on},
		pages={1020--1025},
		year={2010},
		organization={IEEE}
	}
	
	@inproceedings{ziemann2002extension,
		title={An extension of OCL with temporal logic},
		author={Ziemann, Paul and Gogolla, Martin},
		booktitle={Critical Systems Development with UML--Proceedings of the UML},
		volume={2},
		pages={53--62},
		year={2002},
		organization={Citeseer}
	}
	
	@inproceedings{ziemann2003ocl,
		title={OCL extended with temporal logic},
		author={Ziemann, Paul and Gogolla, Martin},
		booktitle={Perspectives of System Informatics},
		pages={351--357},
		year={2003},
		organization={Springer}
	}
	
	@incollection{kanso2012temporal,
		title={Temporal constraint support for ocl},
		author={Kanso, Bilal and Taha, Safouan},
		booktitle={Software Language Engineering},
		pages={83--103},
		year={2012},
		publisher={Springer}
	}
	
	@inproceedings{lehman1997metrics,
		title={Metrics and laws of software evolution-the nineties view},
		author={Lehman, Meir M and Ramil, Juan F and Wernick, Paul D and Perry, Dewayne E and Turski, Wladyslaw M},
		booktitle={Software Metrics Symposium, 1997. Proceedings., Fourth International},
		pages={20--32},
		year={1997},
		organization={IEEE}
	}
	
	@book{lehman1978laws,
		title={Laws of program evolution-rules and tools for programming management},
		author={Lehman, Meir M},
		year={1978}
	}
	
	@article{lehman1979understanding,
		title={On understanding laws, evolution, and conservation in the large-program life cycle},
		author={Lehman, Meir M},
		journal={Journal of Systems and Software},
		volume={1},
		pages={213--221},
		year={1979},
		publisher={Elsevier}
	}
	
	@incollection{lehman1996laws,
		title={Laws of software evolution revisited},
		author={Lehman, Manny M},
		booktitle={Software process technology},
		pages={108--124},
		year={1996},
		publisher={Springer}
	}
	
	
	@article{lehman2003software,
		title={Software evolution—background, theory, practice},
		author={Lehman, Meir M and Ramil, Juan F},
		journal={Information Processing Letters},
		volume={88},
		number={1},
		pages={33--44},
		year={2003},
		publisher={Elsevier}
	}
	
	@article{chapin2001types,
		title={Types of software evolution and software maintenance},
		author={Chapin, Ned and Hale, Joanne E and Khan, Khaled Md and Ramil, Juan F and Tan, Wui-Gee},
		journal={Journal of software maintenance and evolution: Research and Practice},
		volume={13},
		number={1},
		pages={3--30},
		year={2001},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{favre2005languages,
		title={Languages evolve too! Changing the Software Time Scale},
		author={Favre, Jean-Marie},
		booktitle={Eighth International Workshop on Principles of Software Evolution {IWPSE}},
		pages={33--44},
		year={2005},
		organization={IEEE}
	}
	
	@article {buckley2005towards,
		author = {Buckley, Jim and Mens, Tom and Zenger, Matthias and Rashid, Awais and Kniesel, Günter},
		title = {Towards a taxonomy of software change},
		journal = {Journal of Software Maintenance and Evolution: Research and Practice},
		volume = {17},
		number = {5},
		publisher = {John Wiley & Sons, Ltd.},
		issn = {1532-0618},
		url = {http://dx.doi.org/10.1002/smr.319},
		doi = {10.1002/smr.319},
		pages = {309--332},
		keywords = {characterization, software evolution tools, refactoring browser, CVS, eLiza},
		year = {2005}
	}
	
	@inproceedings{swanson1976dimensions,
		title={The dimensions of maintenance},
		author={Swanson, E Burton},
		booktitle={Proceedings of the 2nd international conference on Software engineering},
		pages={492--497},
		year={1976},
		organization={IEEE Computer Society Press}
	}
	
	@article{lientz1980software,
		title={Software maintenance management: a study of the maintenance of computer application software in 487 data processing organizations},
		author={Lientz, Bennet P and Swanson, E Burton},
		year={1980},
		publisher={Addison-Wesley Pub (Sd)}
	}
	
	@incollection{liebel2014assessing,
		title={Assessing the state-of-practice of model-based engineering in the embedded systems domain},
		author={Liebel, Grischa and Marko, Nadja and Tichy, Matthias and Leitner, Andrea and Hansson, J{\"o}rgen},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={166--182},
		year={2014},
		publisher={Springer}
	}
	
	
	@inproceedings{shirtz2007adopting,
		title={Adopting model driven development in a large financial organization},
		author={Shirtz, Dov and Kazakov, Michael and Shaham-Gafni, Yael},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={172--183},
		year={2007},
		organization={Springer}
	}
	
	
	@inproceedings{mohagheghi2008proof,
		title={Where is the proof?-a review of experiences from applying mde in industry},
		author={Mohagheghi, Parastoo and Dehlen, Vegard},
		booktitle={Model Driven Architecture--Foundations and Applications},
		pages={432--443},
		year={2008},
		organization={Springer}
	}
	
	
	@article{hailpern2006model,
		title={Model-driven development: The good, the bad, and the ugly},
		author={Hailpern, Brent and Tarr, Peri},
		journal={IBM systems journal},
		volume={45},
		number={3},
		pages={451},
		year={2006},
		publisher={International Business Machines Corporation}
	}
	
	@inproceedings{garcia2014Caise,
		title={An adapter-based approach to co-evolve generated sql in model-to-text transformations},
		author={Garc{\'\i}a, Jokin and D{\'\i}az, Oscar and Cabot, Jordi},
		booktitle={Advanced Information Systems Engineering},
		pages={518--532},
		year={2014},
		organization={Springer}
	}
	
	@article{garcia_model_2013,
		title={Model transformation co-evolution: A semi-automatic approach},
		author={Garc{\'\i}a, Jokin and Diaz, Oscar and Azanza, Maider},
		journal={SLE},
		volume={7745},
		pages={144--163},
		year={2013},
		publisher={Springer}
	}
	
	@incollection{wachsmuth_metamodel_2007,
		title={Metamodel adaptation and model co-adaptation},
		author={Wachsmuth, Guido},
		booktitle={ECOOP},
		pages={600--624},
		year={2007},
		publisher={Springer}
	}
	
	@incollection{herrmannsdoerfer_cope_2009,
		title={COPE-automating coupled evolution of metamodels and models},
		author={Herrmannsdoerfer, Markus and Benz, Sebastian and Juergens, Elmar},
		booktitle={ECOOP 2009--Object-Oriented Programming},
		pages={52--76},
		year={2009},
		publisher={Springer}
	}
	
	@incollection{herrmannsdoerfer_cope_2011,
		title={COPE--A Workbench for the coupled evolution of metamodels and models},
		author={Herrmannsdoerfer, Markus},
		booktitle={Software Language Engineering},
		pages={286--295},
		year={2011},
		publisher={Springer}
	}
	
	@inproceedings{cicchetti_automating_2008,
		title={Automating co-evolution in model-driven engineering},
		author={Cicchetti, Antonio and Ruscio, Davide Di and Eramo, Romina and Pierantonio, Alfonso},
		booktitle={Enterprise Distributed Object Computing Conference, 2008. EDOC'08. 12th International IEEE},
		pages={222--231},
		year={2008},
		organization={IEEE}
	}
	
	@article{garces_adaptation_2008,
		title={Adaptation of models to evolving metamodels},
		author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
		year={2008}
	}
	
	@article{markovic_refactoring_2008,
		title={Refactoring OCL annotated UML class diagrams},
		author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
		journal={Software \& Systems Modeling},
		volume={7},
		number={1},
		pages={25--47},
		year={2008},
		publisher={Springer}
	}
	
	@incollection{markovic_refactoring_2005,
		title={Refactoring OCL annotated UML class diagrams},
		author={Markovi{\'c}, Slavi{\v{s}}a and Baar, Thomas},
		booktitle={Model Driven Engineering Languages and Systems},
		pages={280--294},
		year={2005},
		publisher={Springer}
	}
	
	
	@incollection{herrmannsdoerfer_extensive_2011,
		title = {An Extensive Catalog of Operators for the Coupled Evolution of Metamodels and Models},
		copyright = {©2011 Springer Berlin Heidelberg},
		isbn = {978-3-642-19439-9, 978-3-642-19440-5},
		booktitle = {Software Language Engineering},
		author = {Herrmannsdoerfer, Markus and Vermolen, Sander D. and Wachsmuth, Guido},
		editor = {Malloy and Staab and Brand},
		month = jan,
		year = {2011},
		pages = {163--182},
		publisher={Springer}
	}
	
	
	@inproceedings{garces_managing_2009,
		title={Managing model adaptation by precise detection of metamodel changes},
		author={Garc{\'e}s, Kelly and Jouault, Fr{\'e}d{\'e}ric and Cointe, Pierre and B{\'e}zivin, Jean},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={34--49},
		year={2009},
		organization={Springer}
	}
	
	@inproceedings{xing2006refactoring,
		title={Refactoring detection based on umldiff change-facts queries},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Reverse Engineering, 2006. WCRE'06. 13th Working Conference on},
		pages={263--274},
		year={2006},
		organization={IEEE}
	}
	
	@inproceedings{moghadam2012automated,
		title={Automated refactoring using design differencing},
		author={Moghadam, Iman Hemati and Cinneide, Mel O},
		booktitle={Software Maintenance and Reengineering (CSMR), 2012 16th European Conference on},
		pages={43--52},
		year={2012},
		organization={IEEE}
	}
	
	@MISC{Rijsbergen1979,
		author = {Rijsbergen, C.J.V.},
		title = {Information Retrieval. Butterworths},
		year = {1979}
	}
	
	@article{morisio2002success,
		title={Success and failure factors in software reuse},
		author={Morisio, Maurizio and Ezran, Michel and Tully, Colin},
		journal={Software Engineering, IEEE Transactions on},
		volume={28},
		number={4},
		pages={340--357},
		year={2002},
		publisher={IEEE}
	}
	
	@incollection{hemel2008code,
		title={Code generation by model transformation},
		author={Hemel, Zef and Kats, Lennart CL and Visser, Eelco},
		booktitle={{ICMT}},
		pages={183--198},
		year={2008},
		publisher={Springer}
	}
	
	@inproceedings{aichernig2005test,
		title={Test case generation by OCL mutation and constraint solving},
		author={Aichernig, Bernhard K and Salas, Percy Antonio Pari},
		booktitle={Quality Software, 2005.(QSIC 2005). Fifth International Conference on},
		pages={64--71},
		year={2005},
		organization={IEEE}
	}
	
	@inproceedings{hassam2011assistance,
		title={Assistance system for OCL constraints adaptation during metamodel evolution},
		author={Hassam, Kahina and Sadou, Salah and Gloahec, Vincent Le and Fleurquin, R{\'e}gis},
		booktitle={Software Maintenance and Reengineering (CSMR), 15th European Conference on},
		pages={151--160},
		year={2011},
		organization={IEEE}
	}
	
	@inproceedings{demuth_automatically_2012,
		title={Automatically generating and adapting model constraints to support co-evolution of design models},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		booktitle={The 27th IEEE/ACM ASE},
		pages={302--305},
		year={2012}
	}
	
	@incollection{demuth_supporting_2013,
		title={Supporting the co-evolution of metamodels and constraints through incremental constraint management},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={287--303},
		year={2013},
		publisher={Springer}
	}
	
	
	
	@article{schneidewind1987state,
		title={The state of software maintenance},
		author={Schneidewind, Norman F.},
		journal={IEEE Transactions on Software Engineering},
		volume={13},
		number={3},
		pages={303},
		year={1987},
		publisher={IEEE Computer Society}
	}
	
	@inproceedings{bennett2000software,
		title={Software maintenance and evolution: a roadmap},
		author={Bennett, Keith H and Rajlich, V{\'a}clav T},
		booktitle={Proceedings of the Conference on the Future of Software Engineering},
		pages={73--87},
		year={2000},
		organization={ACM}
	}
	
	@inproceedings{godfrey2008past,
		title={The past, present, and future of software evolution},
		author={Godfrey, Michael W and German, Daniel M},
		booktitle={Frontiers of Software Maintenance, 2008. FoSM 2008.},
		pages={129--138},
		year={2008},
		organization={IEEE}
	}
	
	@article{vigder2001evolution,
		title={The evolution, maintenance, and management of component-based systems},
		author={Vigder, Mark},
		journal={Component-Based Software Engineering: Putting the Pieces Together},
		pages={527--539},
		year={2001},
		publisher={Citeseer}
	}
	
	@phdthesis{opdyke1992refactoring,
		title={Refactoring object-oriented frameworks},
		author={Opdyke, William F},
		year={1992},
		school={University of Illinois at Urbana-Champaign}
	}
	
	@book{arnold1986introduction,
		title={An introduction to software restructuring},
		author={Arnold, Robert S},
		year={1986},
		publisher={IEEE Computer Society Press, Washington, DC}
	}
	
	@article{mens2004survey,
		title={A survey of software refactoring},
		author={Mens, Tom and Tourw{\'e}, Tom},
		journal={Software Engineering, IEEE Transactions on},
		volume={30},
		number={2},
		pages={126--139},
		year={2004},
		publisher={IEEE}
	}
	
	@incollection{sunye2001refactoring,
		title={Refactoring UML models},
		author={Suny{\'e}, Gerson and Pollet, Damien and Le Traon, Yves and J{\'e}z{\'e}quel, Jean-Marc},
		booktitle={{UML}2001—The Unified Modeling Language. Modeling Languages, Concepts, and Tools},
		pages={134--148},
		year={2001},
		publisher={Springer}
	}
	
	
	@incollection{rose2010comparison,
		title={A comparison of model migration tools},
		author={Rose, Louis M and Herrmannsdoerfer, Markus and Williams, James R and Kolovos, Dimitrios S and Garc{\'e}s, Kelly and Paige, Richard F and Polack, Fiona AC},
		booktitle={MODELS},
		pages={61--75},
		year={2010},
		publisher={Springer}
	}
	
	@CONFERENCE {ReginaApsec2015,
		author    = {Regina Hebig and Djamel Eddine Khelladi and Reda Bendraou},
		title     = {Surveying the Corpus of Model Resolution Strategies for Metamodel Evolution},
		booktitle = {The 22nd Asia-Pacific Software Engineering Conference {APSEC}},
		year      = {2015}
	}
	
	@article{demuth2015constraint,
		title={Constraint-driven modeling through transformation},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		journal={Software \& Systems Modeling},
		volume={14},
		number={2},
		pages={573--596},
		year={2015},
		publisher={Springer}
	}
	
	
	
	@inproceedings{toulme2006presentation,
		title={Presentation of EMF compare utility},
		author={Toulm{\'e}, Antoine and Inc, I},
		booktitle={Eclipse Modeling Symposium},
		pages={1--8},
		year={2006}
	}
	
	@inproceedings{xing2005umldiff,
		title={UMLDiff: an algorithm for object-oriented design differencing},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
		pages={54--65},
		year={2005},
		organization={ACM}
	}
	
	@article{lin2007dsmdiff,
		title={DSMDiff: a differentiation tool for domain-specific models},
		author={Lin, Yuehua and Gray, Jeff and Jouault, Fr{\'e}d{\'e}ric},
		journal={European Journal of Information Systems},
		volume={16},
		number={4},
		pages={349--361},
		year={2007},
		publisher={Nature Publishing Group}
	}
	
	
	@inproceedings{di2011needed,
		title={What is needed for managing co-evolution in mde?},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
		pages={30--38},
		year={2011},
		organization={ACM}
	}
	
	@article{levendovszky2014semi,
		title={A semi-formal description of migrating domain-specific models with evolving domains},
		author={Levendovszky, Tihamer and Balasubramanian, Daniel and Narayanan, Anantha and Shi, Feng and van Buskirk, Chris and Karsai, Gabor},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={807--823},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{blanc2008detecting,
		title={Detecting model inconsistency through operation-based model construction},
		author={Blanc, Xavier and Mounier, Isabelle and Mougenot, Alix and Mens, Tom},
		booktitle={Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference on},
		pages={511--520},
		year={2008},
		organization={IEEE}
	}
	
	@incollection{cabot2004automatic,
		title={Automatic integrity constraint evolution due to model subtract operations},
		author={Cabot, Jordi and Conesa, Jordi},
		booktitle={Conceptual Modeling for Advanced Application Domains},
		pages={350--362},
		year={2004},
		publisher={Springer}
	}
	
	@inproceedings{buttner2005towards,
		title={Towards transformation of integrity constraints and database states},
		author={B{\"u}ttner, Fabian and Bauerdick, Hanna and Gogolla, Martin},
		booktitle={Database and Expert Systems Applications, 2005. Proceedings. Sixteenth International Workshop on},
		pages={823--828},
		year={2005},
		organization={IEEE}
	}
	
	@article{cabot2007transformation,
		title={Transformation techniques for OCL constraints},
		author={Cabot, Jordi and Teniente, Ernest},
		journal={Science of Computer Programming},
		volume={68},
		number={3},
		pages={179--195},
		year={2007},
		publisher={Elsevier}
	}
	
	
	@article{kuselsystematic,
		title={A Systematic Taxonomy of Metamodel Evolution Impacts on OCL Expressions},
		author={Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Retschitzegger, Werner and Schoenboeck, Johannes and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={Workshop on Models and Evolution at {MODELS}},
		year={ME@MODELS, 2015}
	}
	
	@book{kleppe2003mda,
		title={MDA explained: the model driven architecture: practice and promise},
		author={Kleppe, Anneke G and Warmer, Jos B and Bast, Wim},
		year={2003},
		publisher={Addison-Wesley Professional}
	}
	
	@article{clarke1996formal,
		title={Formal methods: State of the art and future directions},
		author={Clarke, Edmund M and Wing, Jeannette M},
		journal={ACM Computing Surveys (CSUR)},
		volume={28},
		number={4},
		pages={626--643},
		year={1996},
		publisher={ACM}
	}
	
	@book{clarke1999model,
		title={Model checking},
		author={Clarke, Edmund M and Grumberg, Orna and Peled, Doron},
		year={1999},
		publisher={MIT press}
	}
	
	@book{volter2013model,
		title={Model-driven software development: technology, engineering, management},
		author={Volter, Markus and Stahl, Thomas and Bettin, Jorn and Haase, Arno and Helsen, Simon},
		year={2013},
		publisher={John Wiley \& Sons}
	}
	
	@incollection{cabot2007declarative,
		title={From declarative to imperative UML/OCL operation specifications},
		author={Cabot, Jordi},
		booktitle={Conceptual Modeling-ER 2007},
		pages={198--213},
		year={2007},
		publisher={Springer}
	}
	
	@article{rose2014epsilon,
		title={Epsilon Flock: a model migration language},
		author={Rose, Louis M and Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC and Poulding, Simon},
		journal={Software \& Systems Modeling},
		volume={13},
		number={2},
		pages={735--755},
		year={2014},
		publisher={Springer}
	}
	
	
	
	
	@MISC{GMF,
		author = {GMP},
		title = {Graphical Modeling Project. Graphical Modeling Framework (GMF).},
		year = {2015},
		howpublished={\url{http://www.eclipse.org/modeling/gmp/}}
	}
	
	@MISC{OMG,
		author = {OMG},
		title = {Object Management Group.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/}}
	}
	
	@MISC{SMM,
		author = {OMG},
		title = {Structured Metrics Metamodel.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/SMM/}}
	}
	
	
	@MISC{UPDM,
		author = {OMG},
		title = {Unified Profile for the Department of Defense Architecture Framework (DoDAF) and the Ministry of Defence Architecture Framework (MODAF).},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/UPDM/}}
	}
	
	@MISC{NIEM,
		author = {OMG},
		title = {UML Profile for National Information Exchange Model.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/NIEM-UML/}}
	}
	
	@MISC{EXPRESS,
		author = {OMG},
		title = {Reference Metamodel for the EXPRESS Information Modeling Language.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/EXPRESS/}}
	}
	
	@MISC{ReqIF,
		author = {OMG},
		title = {Requirements Interchange Format.},
		year = {2015},
		howpublished={\url{http://www.omg.org/spec/ReqIF/}}
	}
	
	@inproceedings{jouault2005transforming,
		title={Transforming models with ATL},
		author={Jouault, Fr{\'e}d{\'e}ric and Kurtev, Ivan},
		booktitle={satellite events at the MoDELS 2005 Conference},
		pages={128--138},
		year={2005},
		organization={Springer}
	}
	
	@incollection{kolovos2008epsilon,
		title={The epsilon transformation language},
		author={Kolovos, Dimitrios S and Paige, Richard F and Polack, Fiona AC},
		booktitle={Theory and practice of model transformations},
		pages={46--60},
		year={2008},
		publisher={Springer}
	}
	
	
	@incollection{herrmannsdoerfer_language_2010,
		title = {Language Evolution in Practice: The History of {GMF}},
		copyright = {©2010 Springer-Verlag Berlin Heidelberg},
		isbn = {978-3-642-12106-7, 978-3-642-12107-4},
		shorttitle = {Language Evolution in Practice},
		urldate = {2014-04-30},
		booktitle = {Software Language Engineering},
		author = {Herrmannsdoerfer, Markus and Ratiu, Daniel and Wachsmuth, Guido},
		editor = {Brand, Mark van den and Gasevic, Dragan and Gray, Jeff},
		month = jan,
		year = {2010},
		keywords = {Logics and Meanings of Programs, Management of Computing and Information Systems, Programming Languages, Compilers, Interpreters, Simulation and Modeling, Software engineering},
		pages = {3--22}
	}
	
	
	
	@inproceedings{bendraou2012support,
		title={Support for Deviation Detections in the Context of Multi-Viewpoint-Based Development Processes.},
		author={Bendraou, Reda and da Silva, Marcos Aur{\'e}lio Almeida and Gervais, Marie-Pierre and Blanc, Xavier},
		booktitle={CAiSE},
		pages={23--31},
		year={2012}
	}
	
	@inproceedings{blanc2009incremental,
		title={Incremental detection of model inconsistencies based on model operations},
		author={Blanc, Xavier and Mougenot, Alix and Mounier, Isabelle and Mens, Tom},
		booktitle={CAiSE},
		pages={32--46},
		year={2009},
		organization={Springer}
	}
	
	@inproceedings{da2011deviation,
		title={Deviation management during process execution},
		author={da Silva, Marcos Aurelio Almeida and Blanc, Xavier and Bendraou, Reda},
		booktitle={26th IEEE/ACM ASE},
		pages={528--531},
		year={2011}
	}
	
	@phdthesis{mougenot2010praxis,
		title={Praxis: Detection of inconsistency within distributed models},
		author={Mougenot, Alix},
		year={2010},
		school={Paris 6}
	}
	
	@inproceedings{Kessentini2016automated,
		title={Automated Metamodel/Model Co-Evolution using a Multi-Objective Optimization Approach},
		author={Kessentini, Wael and Sahraoui, Houari and Wimmer, Manuel},
		booktitle={12th ECMFA},
		year={2016}
	}
	
	
	@inproceedings{bruneliere2015lightweight,
		title={On Lightweight Metamodel Extension to Support Modeling Tools Agility},
		author={Bruneliere, Hugo and Garcia, Jokin and Desfray, Philippe and Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Cabot, Jordi},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={62--74},
		year={2015},
		organization={Springer}
	}
	
	@inproceedings{khelladi2016supporting,
		title={Supporting the co-adaption of process properties},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Hebig, Regina and Gervais, Marie-Pierre},
		booktitle={Proceedings of the International Workshop on Software and Systems Process},
		pages={1--5},
		year={2016},
		organization={ACM}
	}
	
	@inproceedings{khelladi2015framework,
		title={A framework to formally verify conformance of a software process to a software method},
		author={Khelladi, Djamel-Eddine and Bendraou, Reda and Baarir, Souheib and Laurent, Yoann and Gervais, Marie-Pierre},
		booktitle={The 30th Symposium on Applied Computing},
		pages={1518--1525},
		year={2015},
		organization={ACM}
	}
	
	@article{khelladi2016detecting,
		title={Detecting complex changes and refactorings during (meta) model evolution},
		author={Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Robin, Jacques and Gervais, Marie-Pierre},
		journal={Information Systems},
		year={2016},
		publisher={Elsevier}
	}
	
	
	
	@inproceedings{khelladi2016ad,
		title={Ad-room: a tool for automatic detection of refactorings in object-oriented models},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
		booktitle={ICSE Companion},
		pages={617--620},
		year={2016},
		organization={ACM}
	}
	
	
	
	@book{kelly2008domain,
		title={Domain-specific modeling: enabling full code generation},
		author={Kelly, Steven and Tolvanen, Juha-Pekka},
		year={2008},
		publisher={John Wiley \& Sons}
	}
	
	@inproceedings{jouault2006km3,
		title={KM3: a DSL for Metamodel Specification},
		author={Jouault, Fr{\'e}d{\'e}ric and B{\'e}zivin, Jean},
		booktitle={International Conference on Formal Methods for Open Object-Based Distributed Systems},
		pages={171--185},
		year={2006},
		organization={Springer}
	}
	
	@book{witten2005data,
		title={Data Mining: Practical machine learning tools and techniques},
		author={Witten, Ian H and Frank, Eibe},
		year={2005},
		publisher={Morgan Kaufmann}
	}
	
	@book{deb2001multi,
		title={Multi-objective optimization using evolutionary algorithms},
		author={Deb, Kalyanmoy},
		volume={16},
		year={2001},
		publisher={John Wiley \& Sons}
	}
	
	@incollection{deb2014multi,
		title={Multi-objective optimization},
		author={Deb, Kalyanmoy},
		booktitle={Search methodologies},
		pages={403--449},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{schoenboeck2014care,
		title={CARE: A Constraint-based Approach for Re-establishing Conformance-relationships},
		author={Schoenboeck, Johannes and Kusel, Angelika and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Schwinger, Wieland and Wimmer, Manuel and Wischenbart, Martin},
		booktitle={Proceedings of the Tenth Asia-Pacific Conference on Conceptual Modelling-Volume 154},
		pages={19--28},
		year={2014},
		organization={Australian Computer Society, Inc.}
	}
	
	
	@article{kitchenham2004procedures,
		title={Procedures for performing systematic reviews},
		author={Kitchenham, Barbara},
		journal={Keele, UK, Keele University},
		volume={33},
		number={2004},
		pages={1--26},
		year={2004}
	}
	
	
	@inproceedings{correa2004applying,
		title={Applying refactoring techniques to UML/OCL models},
		author={Correa, Alexandre and Werner, Cl{\'a}udia},
		booktitle={UML},
		pages={173--187},
		year={2004},
		organization={Springer}
	}
	
	
	@inproceedings{schonbock2015model,
		title={Model-Driven Co-evolution for Agile Development},
		author={Sch{\"o}nb{\"o}ck, Johannes and Etzlstorfer, Juergen and Kapsammer, Elisabeth and Kusel, Angelika and Retschitzegger, Werner and Schwinger, Wieland},
		booktitle={System Sciences (HICSS), 48th Hawaii International Conference on},
		pages={5094--5103},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{reimann2012tool,
		title={Tool supported OCL refactoring catalogue},
		author={Reimann, Jan and Wilke, Claas and Demuth, Birgit and Muck, Michael and A{\ss}mann, Uwe},
		booktitle={Proceedings of the 12th Workshop on OCL and Textual Modelling},
		pages={7--12},
		year={2012},
		organization={ACM}
	}
	
	@inproceedings{khelladi2016SAC-OCL,
		title={SAC-OCL: A Tool for A Semi Automatic Co-evolution of OCL Constraints},
		author={Khelladi, Djamel Eddine and Bendraou, Reda and Gervais, Marie-Pierre},
		booktitle={Demonstraions@MODELS},
		pages={40--47},
		year={2016}
	}
	
	
	@inproceedings{hassam2010adapting,
		title={Adapting ocl constraints after a refactoring of their model using an mde process},
		author={Hassam, Kahina and Sadou, Salah and Fleurquin, R{\'e}gis},
		booktitle={9th edition of the BElgian-NEtherlands software eVOLution seminar (BENEVOL 2010)},
		pages={16--27},
		year={2010}
	}
	
	@inproceedings{demuth2011cross,
		title={Cross-layer modeler: a tool for flexible multilevel modeling with consistency checking},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto E and Egyed, Alexander},
		booktitle={The 19th ACM SIGSOFT FSE and the 13th ESEC},
		pages={452--455},
		year={2011}
	}
	
	@inproceedings{demuth2012enabling,
		title={Enabling dynamic metamodels through constraint-driven modeling},
		author={Demuth, Andreas},
		booktitle={Proceedings of the 34th International Conference on Software Engineering},
		pages={1622--1624},
		year={2012},
		organization={IEEE Press}
	}
	
	@article{demuth2015constraint,
		title={Constraint-driven modeling through transformation},
		author={Demuth, Andreas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
		journal={Software \& Systems Modeling},
		volume={14},
		number={2},
		pages={573--596},
		year={2015},
		publisher={Springer}
	}
	
	
	@article{mengerink2016complete,
		title={A complete operator library for DSL evolution specification},
		author={Mengerink, JGM and Serebrenik, A and Schiffelers, RRH and van den Brand, MGJ},
		year={2016},
		publisher={ICSME}
	}
	
	@article{harman2012search,
		title={Search-based software engineering: Trends, techniques and applications},
		author={Harman, Mark and Mansouri, S Afshin and Zhang, Yuanyuan},
		journal={ACM Computing Surveys},
		volume={45},
		number={1},
		pages={11},
		year={2012},
		publisher={ACM}
	}
	
	
	
	
	
	@incollection{liebel2014assessing,
		title={Assessing the state-of-practice of model-based engineering in the embedded systems domain},
		author={Liebel, Grischa and Marko, Nadja and Tichy, Matthias and Leitner, Andrea and Hansson, J{\"o}rgen},
		booktitle={Model-Driven Engineering Languages and Systems},
		pages={166--182},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{shirtz2007adopting,
		title={Adopting model driven development in a large financial organization},
		author={Shirtz, Dov and Kazakov, Michael and Shaham-Gafni, Yael},
		booktitle={Model Driven Architecture-Foundations and Applications},
		pages={172--183},
		year={2007},
		organization={Springer}
	}
	
	
	
	@incollection{herrmannsdorfer2014coupled,
		title={Coupled evolution of software metamodels and models},
		author={Herrmannsd{\"o}rfer, Markus and Wachsmuth, Guido},
		booktitle={Evolving Software Systems},
		pages={33--63},
		year={2014},
		publisher={Springer}
	}
	
	@article{rose2014graph,
		title={Graph and model transformation tools for model migration},
		author={Rose, Louis M and Herrmannsdoerfer, Markus and Mazanek, Steffen and Van Gorp, Pieter and Buchwald, Sebastian and Horn, Tassilo and Kalnina, Elina and Koch, Andreas and Lano, Kevin and Sch{\"a}tz, Bernhard and others},
		journal={Software \& Systems Modeling},
		volume={13},
		number={1},
		pages={323--359},
		year={2014},
		publisher={Springer}
	}
	
	@inproceedings{usman2008survey,
		title={A survey of consistency checking techniques for UML models},
		author={Usman, Muhammad and Nadeem, Aamer and Kim, Tai-hoon and Cho, Eun-suk},
		booktitle={Advanced Software Engineering and Its Applications, 2008. ASEA 2008},
		pages={57--62},
		year={2008},
		organization={IEEE}
	}
	
	
	@inproceedings{cabot2006constraint,
		title={Constraint Support in MDA tools: a Survey},
		author={Cabot, Jordi and Teniente, Ernest},
		booktitle={European Conference on Model Driven Architecture-Foundations and Applications},
		pages={256--267},
		year={2006},
		organization={Springer}
	}
	
	@article{toval2003emerging,
		title={Emerging OCL tools},
		author={Toval, Ambrosio and Requena, V{\'\i}ctor and Fern{\'a}ndez, Jos{\'e} Luis},
		journal={Software \& Systems Modeling},
		volume={2},
		number={4},
		pages={248--261},
		year={2003},
		publisher={Springer}
	}
	
	@inproceedings{li2007test,
		title={Test case automate generation from UML sequence diagram and OCL expression},
		author={Li, Bao-Lin and Li, Zhi-shu and Qing, Li and Chen, Yan-Hong},
		booktitle={Computational Intelligence and Security, 2007 International Conference on},
		pages={1048--1052},
		year={2007},
		organization={IEEE}
	}
	
	@article{ali2013generating,
		title={Generating test data from OCL constraints with search techniques},
		author={Ali, Shaukat and Iqbal, Muhammad Zohaib and Arcuri, Andrea and Briand, Lionel C},
		journal={IEEE Transactions on Software Engineering},
		volume={39},
		number={10},
		pages={1376--1402},
		year={2013},
		publisher={IEEE}
	}
	
	@article{frisch2008essence,
		title={Essence: A constraint language for specifying combinatorial problems},
		author={Frisch, Alan M and Harvey, Warwick and Jefferson, Chris and Mart{\'\i}nez-Hern{\'a}ndez, Bernadette and Miguel, Ian},
		journal={Constraints},
		volume={13},
		number={3},
		pages={268--306},
		year={2008},
		publisher={Springer}
	}
	
	@article{mens2006taxonomy,
		title={A taxonomy of model transformation},
		author={Mens, Tom and Van Gorp, Pieter},
		journal={Electronic Notes in Theoretical Computer Science},
		volume={152},
		pages={125--142},
		year={2006},
		publisher={Elsevier}
	}
	
	@inproceedings{konemann2010semantic,
		title={Semantic grouping of model changes},
		author={K{\"o}nemann, Patrick},
		booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
		pages={50--55},
		year={2010},
		organization={ACM}
	}
	
	@article{kessentini2016search,
		title={Search-based detection of model level changes},
		author={Kessentini, Marouane and Mansoor, Usman and Wimmer, Manuel and Ouni, Ali and Deb, Kalyanmoy},
		journal={Empirical Software Engineering},
		pages={1--46},
		year={2016},
		publisher={Springer}
	}
	
	@inproceedings{ben2012search,
		title={Search-based detection of high-level model changes},
		author={ben Fadhel, Ameni and Kessentini, Marouane and Langer, Philip and Wimmer, Manuel},
		booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
		pages={212--221},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{kehrer2012understanding,
		title={Understanding model evolution through semantically lifting model differences with SiLift},
		author={Kehrer, Timo and Kelter, Udo and Ohrndorf, Manuel and Sollbach, Tim},
		booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
		pages={638--641},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{koshima2015rucord,
		title={RuCORD: Rule-based composite operation recovering and detection to support cooperative edition of (Meta) models},
		author={Koshima, Amanuel and Englebert, Vincent},
		booktitle={Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
		pages={1--7},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{mendez2012effective,
		title={Effective detection of model changes},
		author={M{\'e}ndez-Acu{\~n}a, David and Casallas, Rubby},
		booktitle={Computing Congress (CCC), 2012 7th Colombian},
		pages={1--5},
		year={2012},
		organization={IEEE}
	}
	
	@inproceedings{herrmannsdoerfer2010towards,
		title={Towards a generic operation recorder for model evolution},
		author={Herrmannsdoerfer, Markus and Koegel, Maximilian},
		booktitle={Proceedings of the 1st International Workshop on Model Comparison in Practice},
		pages={76--81},
		year={2010},
		organization={ACM}
	}
	
	@inproceedings{herrmannsdoerfer2009operation,
		title={Operation-based versioning of metamodels with COPE},
		author={Herrmannsdoerfer, Markus},
		booktitle={Comparison and Versioning of Software Models, 2009. CVSM'09. ICSE Workshop on},
		pages={49--54},
		year={2009},
		organization={IEEE}
	}
	
	@article{cicchetti2007metamodel,
		title={A metamodel independent approach to difference representation.},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Pierantonio, Alfonso},
		journal={Journal of Object Technology},
		volume={6},
		number={9},
		pages={165--185},
		year={2007}
	}
	
	@inproceedings{cicchetti2008meta,
		title={Meta-model differences for supporting model co-evolution},
		author={Cicchetti, Antonio and Di Ruscio, Davide and Eramo, Romina and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd Workshop on Model-Driven Software Evolution-MODSE},
		pages={1--10},
		year={2008}
	}
	
	@inproceedings{xing2005umldiff,
		title={UMLDiff: an algorithm for object-oriented design differencing},
		author={Xing, Zhenchang and Stroulia, Eleni},
		booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
		pages={54--65},
		year={2005},
		organization={ACM}
	}
	
	@inproceedings{xing2010model,
		title={Model comparison with GenericDiff},
		author={Xing, Zhenchang},
		booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
		pages={135--138},
		year={2010},
		organization={ACM}
	}
	
	@article{zhang2017detection,
		title={Detection of Composite Operation in Model Management},
		author={Zhang, Renwei and Qin, Zheng and Song, Houbing and Li, Shengnan and Yang, Xiao},
		journal={IEEE Access},
		volume={5},
		pages={771--780},
		year={2017},
		publisher={IEEE}
	}
	
	@inproceedings{kehrer2013consistency,
		title={Consistency-preserving edit scripts in model versioning},
		author={Kehrer, Timo and Kelter, Udo and Taentzer, Gabriele},
		booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
		pages={191--201},
		year={2013},
		organization={IEEE}
	}
	
	@inproceedings{boger2002refactoring,
		title={Refactoring browser for UML},
		author={Boger, Marko and Sturm, Thorsten and Fragemann, Per},
		booktitle={Net. ObjectDays: International Conference on Object-Oriented and Internet-Based Technologies, Concepts, and Applications for a Networked World},
		pages={366--377},
		year={2002},
		organization={Springer}
	}
	
	@article{altmanninger2009survey,
		title={A survey on model versioning approaches},
		author={Altmanninger, Kerstin and Seidl, Martina and Wimmer, Manuel},
		journal={International Journal of Web Information Systems},
		volume={5},
		number={3},
		pages={271--304},
		year={2009},
		publisher={Emerald Group Publishing Limited}
	}
	
	@book{kelly2008domain,
		title={Domain-specific modeling: enabling full code generation},
		author={Kelly, Steven and Tolvanen, Juha-Pekka},
		year={2008},
		publisher={John Wiley \& Sons}
	}
	
	@article{whittle2014state,
		title={The state of practice in model-driven engineering},
		author={Whittle, Jon and Hutchinson, John and Rouncefield, Mark},
		journal={IEEE software},
		volume={31},
		number={3},
		pages={79--85},
		year={2014},
		publisher={IEEE}
	}
	
	@article{utting2012taxonomy,
		title={A taxonomy of model-based testing approaches},
		author={Utting, Mark and Pretschner, Alexander and Legeard, Bruno},
		journal={Software Testing, Verification and Reliability},
		volume={22},
		number={5},
		pages={297--312},
		year={2012},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{pretschner2005model,
		title={Model-based testing},
		author={Pretschner, Alexander},
		booktitle={Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference on},
		pages={722--723},
		year={2005},
		organization={IEEE}
	}
	
	
	
	@inproceedings{taentzer2013customizable,
		title={Customizable model migration schemes for meta-model evolutions with multiplicity changes},
		author={Taentzer, Gabriele and Mantz, Florian and Arendt, Thorsten and Lamo, Yngve},
		booktitle={International Conference on Model Driven Engineering Languages and Systems},
		pages={254--270},
		year={2013},
		organization={Springer}
	}
	
	@inproceedings{altmanninger2008amor,
		title={AMOR--towards adaptable model versioning},
		author={Altmanninger, Kerstin and Kappel, Gerti and Kusel, Angelika and Retschitzegger, Werner and Seidl, Martina and Schwinger, Wieland and Wimmer, Manuel},
		booktitle={1st International Workshop on Model Co-Evolution and Consistency Management, in conjunction with MODELS},
		volume={8},
		pages={4--50},
		year={2008}
	}
	
	@inproceedings{kogel2008towards,
		title={Towards software configuration management for unified models},
		author={K{\"o}gel, Maximilian},
		booktitle={Proceedings of the 2008 international workshop on Comparison and versioning of software models},
		pages={19--24},
		year={2008},
		organization={ACM}
	}
	
	@inproceedings{alkhazi2016automated,
		title={Automated refactoring of ATL model transformations: a search-based approach},
		author={Alkhazi, Bader and Ruas, Terry and Kessentini, Marouane and Wimmer, Manuel and Grosky, William I},
		booktitle={The ACM/IEEE 19th MODELS},
		pages={295--304},
		year={2016}
	}
	
	
	
	@inproceedings{di2013methodological,
		title={A methodological approach for the coupled evolution of metamodels and atl transformations},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={ICMT},
		pages={60--75},
		year={2013},
		organization={Springer}
	}
	
	@inproceedings{di2014dealing,
		title={Dealing with the Coupled Evolution of Metamodels and Model-to-text Transformations.},
		author={Di Rocco, Juri and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={ME@ MoDELS},
		pages={22--31},
		year={2014}
	}
	
	@inproceedings{salman2015students,
		title={Are students representatives of professionals in software engineering experiments?},
		author={Salman, Iflaah and Misirli, Ayse Tosun and Juristo, Natalia},
		booktitle={ICSE-Volume 1},
		pages={666--676},
		year={2015},
		organization={IEEE Press}
	}
	
	@inproceedings{runeson2003using,
		title={Using students as experiment subjects--an analysis on graduate and freshmen student data},
		author={Runeson, Per},
		booktitle={Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering},
		pages={95--102},
		year={2003}
	}
	
	@article{host2000using,
		title={Using students as subjects—a comparative study of students and professionals in lead-time impact assessment},
		author={H{\"o}st, Martin and Regnell, Bj{\"o}rn and Wohlin, Claes},
		journal={Empirical Software Engineering},
		volume={5},
		number={3},
		pages={201--214},
		year={2000},
		publisher={Springer}
	}
	
	@inproceedings{berander2004using,
		title={Using students as subjects in requirements prioritization},
		author={Berander, Patrik},
		booktitle={Empirical Software Engineering, 2004. ISESE'04. Proceedings. 2004 International Symposium on},
		pages={167--176},
		year={2004},
		organization={IEEE}
	}
	
	@inproceedings{svahnberg2008using,
		title={Using students as subjects-an empirical evaluation},
		author={Svahnberg, Mikael and Aurum, Ayb{\"u}ke and Wohlin, Claes},
		booktitle={2nd ESEM},
		pages={288--290},
		year={2008},
		organization={ACM}
	}
	
	@article{mendez2010towards,
		title={Towards transformation migration after metamodel evolution},
		author={Mendez, David and Etien, Anne and Muller, Alexis and Casallas, Rubby},
		journal={ME Wokshop@MODELS},
		year={2010}
	}
	
	****************
	
	@article{jakumeit2014survey,
		title={A survey and comparison of transformation tools based on the transformation tool contest},
		author={Jakumeit, Edgar and Buchwald, Sebastian and Wagelaar, Dennis and Dan, Li and Heged{\"u}s, {\'A}bel and Herrmannsd{\"o}rfer, Markus and Horn, Tassilo and Kalnina, Elina and Krause, Christian and Lano, Kevin and others},
		journal={Science of computer programming},
		volume={85},
		pages={41--99},
		year={2014},
		publisher={Elsevier}
	}
	
	
	@article{taentzer2005model,
		title={Model transformation by graph transformation: A comparative study},
		author={Taentzer, Gabriele and Ehrig, Karsten and Guerra, Esther and Lara, Juan de and Lengyel, Laszlo and Levendovszky, Tihamer and Prange, Ulrike and Varr{\'o}, D{\'a}niel and Varr{\'o}-Gyapay, Szilvia},
		year={2005}
	}
	
	@inproceedings{gronmo2009comparison,
		title={Comparison of three model transformation languages},
		author={Gr{\o}nmo, Roy and M{\o}ller-Pedersen, Birger and Olsen, G{\o}ran K},
		booktitle={ECMDA-FA},
		pages={2--17},
		year={2009},
		organization={Springer}
	}
	
	@article{perez2010case,
		title={A case study to evaluate the suitability of graph transformation tools for program refactoring},
		author={P{\'e}rez, Javier and Crespo, Yania and Hoffmann, Berthold and Mens, Tom},
		journal={International Journal on Software Tools for Technology Transfer (STTT)},
		volume={12},
		number={3},
		pages={183--199},
		year={2010},
		publisher={Springer}
	}
	
	@inproceedings{rose2010comparing,
		title={Comparing model-metamodel and transformation-metamodel coevolution},
		author={Rose, Louis and Etien, Anne and Mendez, David and Kolovos, Dimitrios and Paige, Richard and Polack, Fiona},
		booktitle={International workshop on models and evolutions},
		year={2010}
	}
	
	@article{sendall2003model,
		title={Model transformation: The heart and soul of model-driven software development},
		author={Sendall, Shane and Kozaczynski, Wojtek},
		journal={IEEE software},
		volume={20},
		number={5},
		pages={42--45},
		year={2003},
		publisher={IEEE}
	}
	
	@inproceedings{czarnecki2003classification,
		title={Classification of model transformation approaches},
		author={Czarnecki, Krzysztof and Helsen, Simon},
		booktitle={Proceedings of the 2nd OOPSLA Workshop on Generative Techniques in the Context of the Model Driven Architecture},
		volume={45},
		number={3},
		pages={1--17},
		year={2003},
		organization={USA}
	}
	
	@article{mens2006taxonomy,
		title={A taxonomy of model transformation},
		author={Mens, Tom and Van Gorp, Pieter},
		journal={Electronic Notes in Theoretical Computer Science},
		volume={152},
		pages={125--142},
		year={2006},
		publisher={Elsevier}
	}
	
	@article{hemel2008code,
		title={Code generation by model transformation},
		author={Hemel, Zef and Kats, Lennart and Visser, Eelco},
		journal={Theory and Practice of Model Transformations},
		pages={183--198},
		year={2008},
		publisher={Springer}
	}
	
	@article{hemel2010code,
		title={Code generation by model transformation: a case study in transformation modularity},
		author={Hemel, Zef and Kats, Lennart CL and Groenewegen, Danny M and Visser, Eelco},
		journal={Software and Systems Modeling},
		volume={9},
		number={3},
		pages={375--402},
		year={2010},
		publisher={Springer}
	}
	
	@inproceedings{burger2010change,
		title={A Change Metamodel for the Evolution of MOF-Based Metamodels.},
		author={Burger, Erik and Gruschko, Boris},
		booktitle={Modellierung},
		volume={2010},
		pages={285--300},
		year={2010}
	}
	
	@article{mens2007analysing,
		title={Analysing refactoring dependencies using graph transformation},
		author={Mens, Tom and Taentzer, Gabriele and Runge, Olga},
		journal={Software and Systems Modeling},
		volume={6},
		number={3},
		pages={269},
		year={2007},
		publisher={Springer}
	}
	
	@article{zhang2005generic,
		title={Generic and domain-specific model refactoring using a model transformation engine},
		author={Zhang, Jing and Lin, Yuehua and Gray, Jeff},
		journal={Model-driven Software Development},
		volume={23},
		year={2005},
		publisher={Springer}
	}
	
	
	
	@inproceedings{hebig2015surveying,
		title={Surveying the corpus of model resolution strategies for metamodel evolution},
		author={Hebig, Regina and Khelladi, Djamel Eddine and Bendraou, Reda},
		booktitle={2015 Asia-Pacific Software Engineering Conference (APSEC)},
		pages={135--142},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{khelladi2017exploratory,
		title={An Exploratory Experiment on Metamodel-Transformation Co-Evolution},
		author={Khelladi, Djamel Eddine and Rodriguez, Horacio Hoyos and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Asia-Pacific Software Engineering Conference (APSEC), 2017 24th},
		pages={576--581},
		year={2017},
		organization={IEEE}
	}
	
	@inproceedings{combemale2007towards,
		title={Towards a Formal Verification of Process Model's Properties-SimplePDL and TOCL Case Study},
		author={Combemale, Beno{\^\i}t and Garoche, Pierre-Lo{\"\i}c and Cr{\'e}gut, Xavier and Thirioux, Xavier and Vernadat, Fran{\c{c}}ois},
		booktitle={9th International Conference on Enterprise Information Systems},
		pages={80--89},
		year={2007}
	}
	
	@inproceedings{cregut2010generative,
		title={Generative technologies for model animation in the TopCased platform},
		author={Cr{\'e}gut, Xavier and Combemale, Benoit and Pantel, Marc and Faudoux, Rapha{\"e}l and Pavei, Jonatas},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={90--103},
		year={2010},
		organization={Springer}
	}
	
	@inproceedings{hassan2004predicting,
		title={Predicting change propagation in software systems},
		author={Hassan, Ahmed E and Holt, Richard C},
		booktitle={Software maintenance, 2004. proceedings. 20th ieee international conference on},
		pages={284--293},
		year={2004},
		organization={IEEE}
	}
	
	
	
	@inproceedings{vcubranic2003hipikat,
		title={Hipikat: Recommending pertinent software development artifacts},
		author={{\v{C}}ubrani{\'c}, Davor and Murphy, Gail C},
		booktitle={Proceedings of the 25th international Conference on Software Engineering},
		pages={408--418},
		year={2003},
		organization={IEEE Computer Society}
	}
	
	@inproceedings{robillard2002concern,
		title={Concern graphs: finding and describing concerns using structural program dependencies},
		author={Robillard, MR and Murphy, Gail C},
		booktitle={Software Engineering, 2002. ICSE 2002. Proceedings of the 24rd International Conference on},
		pages={406--416},
		year={2002},
		organization={IEEE}
	}
	
	@article{vieira2016towards,
		title={Towards Measuring the Change Impact in ATL Model Transformations},
		author={Vieira, Andreza and Ramalho, Franklin},
		journal={International Journal of Software Engineering and Knowledge Engineering},
		volume={26},
		number={02},
		pages={153--181},
		year={2016},
		publisher={World Scientific}
	}
	
	@inproceedings{vieira2014metrics,
		title={Metrics to measure the change impact in ATL model transformations},
		author={Vieira, Andreza and Ramalho, Franklin},
		booktitle={International Conference on Product-Focused Software Process Improvement},
		pages={254--268},
		year={2014},
		organization={Springer}
	}
	
	@inproceedings{di2011needed,
		title={What is needed for managing co-evolution in mde?},
		author={Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
		booktitle={Proceedings of the 2nd International Workshop on Model Comparison in Practice},
		pages={30--38},
		year={2011},
		organization={ACM}
	}
	
	@article{cuadrado2018quick,
		title={Quick fixing ATL transformations with speculative analysis},
		author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
		journal={Software \& Systems Modeling},
		pages={1--35},
		year={2018},
		publisher={Springer}
	}
	
	@inproceedings{cuadrado2015quick,
		title={Quick fixing ATL model transformations},
		author={Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
		booktitle={2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)},
		pages={146--155},
		year={2015},
		organization={IEEE}
	}
	
	@inproceedings{di2017feature,
		title={A feature-based approach for variability exploration and resolution in model transformation migration},
		author={Di Ruscio, Davide and Etzlstorfer, Juergen and Iovino, Ludovico and Pierantonio, Alfonso and Schwinger, Wieland},
		booktitle={European Conference on Modelling Foundations and Applications},
		pages={71--89},
		year={2017},
		organization={Springer}
	}
	
	
	
	@article{van2000domain,
		title={Domain-specific languages: An annotated bibliography},
		author={Van Deursen, Arie and Klint, Paul and Visser, Joost},
		journal={ACM Sigplan Notices},
		volume={35},
		number={6},
		pages={26--36},
		year={2000},
		publisher={ACM}
	}
	
	@book{gronback2009eclipse,
		title={Eclipse modeling project: a domain-specific language (DSL) toolkit},
		author={Gronback, Richard C},
		year={2009},
		publisher={Pearson Education}
	}
	
	
	@article{geiger2007emf,
		title={EMF code generation with Fujaba},
		author={Geiger, Leif and Buchmann, Thomas and Dotor, Alexander},
		journal={Fujaba days},
		pages={25--29},
		year={2007}
	}
	
	
	
	
	
	
	
	
	
	@book{fowler2010domain,
		title={Domain-specific languages},
		author={Fowler, Martin},
		year={2010},
		publisher={Pearson Education}
	}
	
	@article{monperrus2018automatic,
		title={Automatic software repair: a bibliography},
		author={Monperrus, Martin},
		journal={ACM Computing Surveys (CSUR)},
		volume={51},
		number={1},
		pages={17},
		year={2018},
		publisher={ACM}
	}
	
	
	
	@inproceedings{khelladi2020onthepower,
		title={On the Power of Abstraction: a Model-Driven Co-evolution Approach of Software Code},
		author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier},
		booktitle={2020 IEEE/ACM 42st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)},
		year={2020}
	}
	
	
	@inproceedings{khelladi2020onthepower,
		title={On the Power of Abstraction: a Model-Driven Co-evolution Approach of Software Code},
		author={Khelladi, Djamel Eddine and Combemale, Benoit and Acher, Mathieu and Barais, Olivier},
		booktitle={2020 IEEE/ACM 42st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)},
		year={2020}
	}
	
	
	
	
	
	
	
	@article{goues2019automated,
		title={Automated program repair},
		author={Goues, Claire Le and Pradel, Michael and Roychoudhury, Abhik},
		journal={Communications of the ACM},
		volume={62},
		number={12},
		pages={56--65},
		year={2019},
		publisher={ACM New York, NY, USA}
	}
	
	@inproceedings{liu2020efficiency,
		title={On the efficiency of test suite based program repair: A systematic assessment of 16 automated repair systems for java programs},
		author={Liu, Kui and Wang, Shangwen and Koyuncu, Anil and Kim, Kisub and Bissyand{\'e}, Tegawend{\'e} F and Kim, Dongsun and Wu, Peng and Klein, Jacques and Mao, Xiaoguang and Traon, Yves Le},
		booktitle={Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
		pages={615--627},
		year={2020}
	}
	
	@article{gazzola2017automatic,
		title={Automatic software repair: A survey},
		author={Gazzola, Luca and Micucci, Daniela and Mariani, Leonardo},
		journal={IEEE Transactions on Software Engineering},
		volume={45},
		number={1},
		pages={34--67},
		year={2017},
		publisher={IEEE}
	}
	
	@inproceedings{bohme2013regression,
		title={Regression tests to expose change interaction errors},
		author={B{\"o}hme, Marcel and Oliveira, Bruno C d S and Roychoudhury, Abhik},
		booktitle={Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
		pages={334--344},
		year={2013}
	}
	
	
	
	@article{kanakis2019empirical,
		title={An Empirical Study on the Impact of Inconsistency Feedback during Model and Code Co-changing.},
		author={Kanakis, Georgios and Khelladi, Djamel Eddine and Fischer, Stefan and Tr{\"o}ls, Michael and Egyed, Alexander},
		journal={The Journal of Object Technology},
		volume={18},
		number={2},
		pages={10--1},
		year={2019}
	}
	
	@inproceedings{khelladi2019detecting,
		title={Detecting and exploring side effects when repairing model inconsistencies},
		author={Khelladi, Djamel Eddine and Kretschmer, Roland and Egyed, Alexander},
		booktitle={Proceedings of the 12th ACM SIGPLAN International Conference on Software Language Engineering},
		pages={113--126},
		year={2019}
	}
	
	@inproceedings{fraser2011evosuite,
		title={Evosuite: automatic test suite generation for object-oriented software},
		author={Fraser, Gordon and Arcuri, Andrea},
		booktitle={Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
		pages={416--419},
		year={2011}
	}
	
	@article{mcminn2004search,
		title={Search-based software test data generation: a survey},
		author={McMinn, Phil},
		journal={Software testing, Verification and reliability},
		volume={14},
		number={2},
		pages={105--156},
		year={2004},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{beyer2022advances,
		title={Advances in Automatic Software Testing: Test-Comp 2022.},
		author={Beyer, Dirk},
		booktitle={FASE},
		pages={321--335},
		year={2022}
	}
	
	@inproceedings{ge2014manual,
		title={Manual refactoring changes with automated refactoring validation},
		author={Ge, Xi and Murphy-Hill, Emerson},
		booktitle={Proceedings of the 36th International Conference on Software Engineering},
		pages={1095--1105},
		year={2014}
	}
	
	@inproceedings{falleri2014fine,
		title={Fine-grained and accurate source code differencing},
		author={Falleri, Jean-R{\'e}my and Morandat, Flor{\'e}al and Blanc, Xavier and Martinez, Matias and Monperrus, Martin},
		booktitle={Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
		pages={313--324},
		year={2014}
	}
	
	@article{engstrom2010systematic,
		title={A systematic review on regression test selection techniques},
		author={Engstr{\"o}m, Emelie and Runeson, Per and Skoglund, Mats},
		journal={Information and Software Technology},
		volume={52},
		number={1},
		pages={14--30},
		year={2010},
		publisher={Elsevier}
	}
	
	@inproceedings{mansour1997natural,
		title={Natural optimization algorithms for optimal regression testing},
		author={Mansour, P and El-Fakih, Khaled},
		booktitle={Proceedings Twenty-First Annual International Computer Software and Applications Conference (COMPSAC'97)},
		pages={511--514},
		year={1997},
		organization={IEEE}
	}
	
	@inproceedings{gupta1992approach,
		title={An approach to regression testing using slicing.},
		author={Gupta, Rajiv and Harrold, Mary Jean and Soffa, Mary Lou},
		booktitle={ICSM},
		volume={92},
		pages={299--308},
		year={1992}
	}
	
	@inproceedings{willmor2005safe,
		title={A safe regression test selection technique for database-driven applications},
		author={Willmor, David and Embury, Suzanne M},
		booktitle={21st IEEE International Conference on Software Maintenance (ICSM'05)},
		pages={421--430},
		year={2005},
		organization={IEEE}
	}
	
	
	@article{10.1002/stv.430,
		author = {Yoo, S. and Harman, M.},
		title = {Regression Testing Minimization, Selection and Prioritization: A Survey},
		year = {2012},
		issue_date = {March 2012},
		publisher = {John Wiley and Sons Ltd.},
		address = {GBR},
		volume = {22},
		number = {2},
		issn = {0960-0833},
		url = {https://doi.org/10.1002/stv.430},
		doi = {10.1002/stv.430},
		abstract = {Regression testing is a testing activity that is performed to provide confidence that changes do not harm the existing behaviour of the software. Test suites tend to grow in size as software evolves, often making it too costly to execute entire test suites. A number of different approaches have been studied to maximize the value of the accrued test suite: minimization, selection and prioritization. Test suite minimization seeks to eliminate redundant test cases in order to reduce the number of tests to run. Test case selection seeks to identify the test cases that are relevant to some set of recent changes. Test case prioritization seeks to order test cases in such a way that early fault detection is maximized. This paper surveys each area of minimization, selection and prioritization technique and discusses open problems and potential directions for future research. Copyright © 2010 John Wiley \& Sons, Ltd.},
		journal = {Softw. Test. Verif. Reliab.},
		month = {mar},
		pages = {67–120},
		numpages = {54},
		keywords = {test suite minimization, regression testing, test case prioritization, regression test selection}
	}
	
	
	@INPROCEEDINGS{7203050,
		author={Gligoric, Milos and Eloussi, Lamyaa and Marinov, Darko},
		booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering}, 
		title={Ekstazi: Lightweight Test Selection}, 
		year={2015},
		volume={2},
		number={},
		pages={713-716},
		doi={10.1109/ICSE.2015.230}}
	
	
	@inproceedings{ducasse2000moose,
		title={Moose: an extensible language-independent environment for reengineering object-oriented systems},
		author={Ducasse, St{\'e}phane and Lanza, Michele and Tichelaar, Sander},
		booktitle={Proceedings of the Second International Symposium on Constructing Software Engineering Tools (CoSET 2000)},
		volume={4},
		year={2000}
	}
	

	
	@article{roziere2021leveraging,
		title={Leveraging automated unit tests for unsupervised code translation},
		author={Roziere, Baptiste and Zhang, Jie M and Charton, Francois and Harman, Mark and Synnaeve, Gabriel and Lample, Guillaume},
		journal={arXiv preprint arXiv:2110.06773},
		year={2021}
	}
	@INPROCEEDINGS{7985697,
		author={Chekam, Thierry Titcheu and Papadakis, Mike and Le Traon, Yves and Harman, Mark},
		booktitle={2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE)}, 
		title={An Empirical Study on Mutation, Statement and Branch Coverage Fault Revelation That Avoids the Unreliable Clean Program Assumption}, 
		year={2017},
		volume={},
		number={},
		pages={597-608},
		keywords={Testing;Java;Correlation;Robustness;Standards;Tools;Mutation testing;test effectiveness;code coverage;real faults;test adequacy},
		doi={10.1109/ICSE.2017.61}}
	
	@ARTICLE{9954000,
		author={Herculano, Wesley B. R. and Alves, Everton L. G. and Mongiovi, Melina},
		journal={IEEE Access}, 
		title={Generated Tests in the Context of Maintenance Tasks: A Series of Empirical Studies}, 
		year={2022},
		volume={10},
		number={},
		pages={121418-121443},
		keywords={Maintenance engineering;Statistical analysis;Codes;Testing;Fault diagnosis;Test pattern generators;Manuals;Fault detection;Generated tests;maintenance;randoop;evosuite;test smells;refactoring},
		doi={10.1109/ACCESS.2022.3222803}}
	
	@article{gruber2023automatic,
		title={Do Automatic Test Generation Tools Generate Flaky Tests?},
		author={Gruber, Martin and Roslan, Muhammad Firhard and Parry, Owain and Scharnb{\"o}ck, Fabian and McMinn, Phil and Fraser, Gordon},
		booktitle={2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)},
		year={2023}
	}
	
	@inproceedings{leung1989insights,
		title={Insights into regression testing (software testing)},
		author={Leung, Hareton KN and White, Lee},
		booktitle={Proceedings. Conference on Software Maintenance-1989},
		pages={60--69},
		year={1989},
		organization={IEEE}
	}
	
	@article{yoo2012regression,
		title={Regression testing minimization, selection and prioritization: a survey},
		author={Yoo, Shin and Harman, Mark},
		journal={Software testing, verification and reliability},
		volume={22},
		number={2},
		pages={67--120},
		year={2012},
		publisher={Wiley Online Library}
	}
	
	@inproceedings{wong1997study,
		title={A study of effective regression testing in practice},
		author={Wong, W Eric and Horgan, Joseph R and London, Saul and Agrawal, Hiralal},
		booktitle={PROCEEDINGS The Eighth International Symposium On Software Reliability Engineering},
		pages={264--274},
		year={1997},
		organization={IEEE}
	}
	
	@inproceedings{richters2000validating,
		title={Validating UML models and OCL constraints},
		author={Richters, Mark and Gogolla, Martin},
		booktitle={International Conference on the Unified Modeling Language},
		pages={265--277},
		year={2000},
		organization={Springer}
	}
	
	@inproceedings{10.1007/978-3-031-21251-2_2,
		abstract = {Since software faults are usually unknown, researchers and developers rely on mutation analysis---i.e., seeding artificial defects, called mutants---to measure the quality of their test suites. One aim of test amplification techniques is to improve developer-written test cases so that they kill more mutants and potentially find more real faults. However, these tools tend to be limited in the types of changes and improvements they can make to tests, while also receiving little guidance to tests that kill new mutants. Alternatively, a tool like {\$}{\$} EvoSuite {\$}{\$}EvoSuitecan generate tests with the benefit of detailed fitness information and have the benefit of more flexibility in terms of evolving a test's structure. However, the process is typically not based on developer-written tests, and consequently, the resulting test suites are less likely to be accepted by human developers. In this paper, we propose modifications to {\$}{\$} EvoSuite {\$}{\$}EvoSuite, in a technique we refer to as {\$}{\$} EvoSuite{\_}{\{}Amp{\}} {\$}{\$}EvoSuiteAmp, which starts with developer-written tests as seeds, and then aims to evolve these tests in the direction of killing further mutants. We then empirically compare {\$}{\$} EvoSuite{\_}{\{}Amp{\}} {\$}{\$}EvoSuiteAmpwith a state-of-the-art test amplification tool, {\$}{\$} DSpot {\$}{\$}DSpot, on 42 versions of 29 different classes from the {\$}{\$} Defects4J {\$}{\$}Defects4Jbenchmark, using the original developer-written test suites for each class as the starting point for test generation. In total, {\$}{\$} EvoSuite{\_}{\{}Amp{\}} {\$}{\$}EvoSuiteAmpachieves a statistically better mutation score for 35 of these 42 versions when compared to {\$}{\$} DSpot {\$}{\$}DSpot.},
		address = {Cham},
		author = {Roslan, Muhammad Firhard and Rojas, Jos{\'{e}} Miguel and McMinn, Phil},
		booktitle = {Search-Based Software Engineering},
		editor = {Papadakis, Mike and Vergilio, Silvia Regina},
		isbn = {978-3-031-21251-2},
		pages = {19--34},
		publisher = {Springer International Publishing},
		title = {{An Empirical Comparison of EvoSuite and DSpot for Improving Developer-Written Test Suites with Respect to Mutation Score}},
		year = {2022}
	}
	
	@inproceedings{le2021untangling,
		title={Untangling spaghetti of evolutions in software histories to identify code and test co-evolutions},
		author={Le Dilavrec, Quentin and Khelladi, Djamel Eddine and Blouin, Arnaud and J{\'e}z{\'e}quel, Jean-Marc},
		booktitle={2021 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
		pages={206--216},
		year={2021},
		organization={IEEE}
	}
	
	@article{zaidman2011studying,
		title={Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining},
		author={Zaidman, Andy and Van Rompaey, Bart and Van Deursen, Arie and Demeyer, Serge},
		journal={Empirical Software Engineering},
		volume={16},
		pages={325--364},
		year={2011},
		publisher={Springer}
	}
	
	@article{velasquez2023prompt,
		title={Prompt Engineering: a methodology for optimizing interactions with AI-Language Models in the field of engineering},
		author={Vel{\'a}squez-Henao, Juan David and Franco-Cardona, Carlos Jaime and Cadavid-Higuita, Lorena},
		journal={Dyna},
		volume={90},
		number={SPE230},
		pages={9--17},
		year={2023},
		publisher={2006, Revista DYNA}
	}
	
	@inproceedings{kebaili2024empirical,
		title={An Empirical Study on Leveraging LLMs for Metamodels and Code Co-evolution},
		author={Kebaili, Zohra Kaouter and Khelladi, Djamel Eddine and Acher, Mathieu and Barais, Olivier},
		booktitle={European Conference on Modelling Foundations and Applications (ECMFA 2024)},
		volume={23},
		number={3},
		pages={1--14},
		year={2024},
		organization={Journal of Object Technology}
	}
	
	@inproceedings{kebaili2023towards,
		title={Towards leveraging tests to identify impacts of metamodel and code co-evolution},
		author={Kebaili, Zohra Kaouter and Khelladi, Djamel Eddine and Acher, Mathieu and Barais, Olivier},
		booktitle={International Conference on Advanced Information Systems Engineering},
		pages={129--137},
		year={2023},
		organization={Springer}
	}
	
	@article{kebaili2024automated,
		title={Automated testing of metamodels and code co-evolution},
		author={Kebaili, Zohra Kaouter and Khelladi, Djamel Eddine and Acher, Mathieu and Barais, Olivier},
		journal={Software and Systems Modeling},
		pages={1--19},
		year={2024},
		publisher={Springer}
	}